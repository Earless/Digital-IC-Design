// UMC Proprietary Data
//
// Title : 90nm 1P9M Logic/Mixed Mode LOW_K Process
// Document : G-02-LOGIC/MIXED_MODE90N-1P9M-LOW_K-EDR Rev:1.1-P1 Date:04/07/2006
// : G-03-LOGIC/MIXED_MODE90N-1P9M-TLR Rev:1.1-P1 Date:04/07/2006
// : G-05-LOGIC/MIXED_MODE90N-LOW_K-SPICE Rev:1.0-P2 Date:03/23/2006
//
// Copyright (c) United Microelectronics Corporation, 1980-2007
// All Rights Reserved
//
// This source file is proprietary information of United
// Microelectronics Corporation. It may not be distributed,
// in whole or in any part without prior written permission.
//
// DISCLAIMER OF WARRANTY
//
// Mentor Graphics, United Microelectronics Corporation software
// and associated files are provided "as is" and without warranty.
// United Microelectronics Corporation has no obligation to support
// or otherwise maintain software. United Microelectronics
// Corporation makes no warranties, express or implied with
// respect to software including any warranty of merchantability
// or fitness for a particular purpose.
//
// LIMITATION OF LIABILITY
//
// Mentor Graphics, United Microelectronics Corporation is not
// liable for any PROPERTY damage, personal injury, loss of
// profits, interruption of business, or for any other special,
// consequential or incidental damages, however caused, whether
// for breach of warranty, contract tort (including negligence),
// strict liability or otherwise. United Microelectronics
// Corporation further assumes no responsibility for any errors
// that may appear within this set of files for any damages,
// direct or indirect, that may result from using this document.
//
// REVISION HISTORY
//====================================================================
// 1.1-P15 09/21/2007 Deborah Huang
//	1.Modify NCAP_33 : parameter is WF/LF/NF and with MISIMPBK(43;1)
//	2.Add N_12_LLLVTRF/P_12_LLLVTRF/N_BPW_12_LLLVTRF
// 1.1-P14 08/31/2007 Deborah Huang
//	1.Add NCAP_18_NO_VT_IMP NCAP_25_NO_VT_IMP NCAP_33_NO_VT_IMP NCAP_12_LL :
//	parameter is WF/LF/NF and with MISIMPBK(43;1)
//	2.Add NCAP_10_SPHVT : parameter is W/L and with NCAP(21;71)
//	3.Modify NCAP_25 NCAP_33 NCAP_12_LLHVT : parameter is W/L and with NCAP(21;71)
//	4.Modify NCAP_10_SP : parameter is WF/LF/NF and with MISIMPBK(43;1)
//	5.Remove NCAP_18
//	6.Add con parameter and well sharing parameter for P_12_LLRF N_BPW_12_LLRF
//	7.Add RF_WELL_SHARED option for well sharing parameters : use the tool version after 2007.1-17.18
//	8.Modify ERC context
//	9.Add //LVS PROPERTY RESOLUTION MAXIMUM ALL           // Calibre tool default is 32
//	10.Add item8 in NOTES and add note4 for RF_WELL_SHARED
// 1.1-P13 07/23/2007 Deborah Huang
//	1.Modify the MOMCAPS_SY_MMKF and MOMCAPS_AS_MMKF terminal layer
//	2.Modify the NCAPGATE extraction methodology
// 1.1-P12 04/12/2007 Deborah Huang
//	1.Add VARMIS_25_RF
//	2.Modify MOMCAPS_SY_MMKF and MOMCAPS_AS_MMKF parameters
// 1.1-P11 03/26/2007 Deborah Huang
//	1.Modify L_CR30K_RFVIL od Property tolerance to 3
// 1.1-P10 02/13/2007 Deborah Huang
//	1.Add N_10_SPRF/P_10_SPRF/N_BPW_10_SPRF
//	2.Add N_25_RF/P_25_RF/N_BPW_25_RF
//	3.Add N_33_RF/P_33_RF/N_BPW_33_RF
//	4.Add NCAP_25/NCAP_33
//	5.Add VARMIS_10_SPRF
//	6.Add PAD_BOAC_RF
//	7.Modify NCAP_10_SPHVT to NCAP_10_SP and the extraction methodology
//	8.Add note3
//	9.remove L_CR30K_RFVIL/L_SQSK_RFVIL/L_SY30K_RFVIL/L_SY30KCT_RFVIL parameter l,Q,srf,Freq
//	10.rename L_SY30KCT_RFVIL pin name VCC to CT
//	11.Add NRD=0 NRS=0 into MOSPROP and MOSLOD for PEXRUN and PEXRUN_MC_HSPICE
//	12.remove MOMCAPS_AS_MMKF in TOP_METAL_ME4_1T0F
// 1.1-P9 12/20/2006 Deborah Huang
//	1.Modify the RSPPO_A connection and extraction methodology
//	01/10/2006 Deborah Huang
//	2.Add RCFLOW_CCI and layer mapping tabel for STARRCXT
//	3.Add RCFLOW_CCI readme in note2
// 1.1-P8 11/17/2006 Deborah Huang
//	1.Modify the ERC check for BJT and VARMIS_12
//	2.Modify the RSPPO_A connection
//	3.Change MOMCAPS_ARRAY_VP3_RFVCL MOMCAPS_ARRAY_VP4_RFVCL parameter finger_l to lf
// 1.1-P7 10/27/2006 Deborah Huang
//	1. Add Devices as below
//		a.P_12_LLRF/N_12_LLRF
//		b.N_18_RF/P_18_RF
//		c.N_BPW_12_LLRF/N_BPW_18_RF
//		d.RNPPO_RF/RNPPO_NW_RF
//		e.RNNPO_RF/RNNPO_NW_RF
//		f.RNHR_RF/RNHR_NW_RF
//		g.VARMIS_12_LLRF/VARMIS_18_RF/VARDIOP_RF
//		h.MIMCAPS_20FNW_RFKF/MIMCAPS_20F_RFKF/MIMCAPS_20F_MM
//		i.L_CR30K_RFVIL/L_SQSK_RFVIL/L_SY30K_RFVIL/L_SY30KCT_RFVIL
//	2.Modify connection for RF device
//	3.Modify cho_tb,cv_tb,ratio,factor of MOMCAPS_SY_MMKF and MOMCAPS_AS_MMKF
//	4.Add LVS EXECUTE ERC NO
//	5.Add ERC check for floating nwel and pathchk 
//	6.Add ALRDL resistor RAL
// 1.1-P6 07/05/2006 Eric Chang
//	1.Modify Resistance Property to 3% for RNPPO_ES,RNPPO_CS,RSPPO_A.
//	2.Extract NC for RSPPO_A when PEXRUN is selected.
// 1.1-P5 06/09/2006 Eric Chang
//	Modify cv_tb of MOMCAPS_AS_MMKF for TOP_METAL_ME9_2T1F from 71.37-18 to 71.37E-18.
// 1.1-P4 05/29/2006 Eric Chang
//	1.Modify cho_tb,cv_tb,ratio of MOMCAPS_SY_MMKF from 599.1E-18,164.1E-18,0.9535 to 611.7E-18,88.31E-18,0.5235 respectively.
//	2.Modify factor of MOMCAPS_SY_MMKF from 1*m6+0.826*m5+0.6526*m4+0.4924*m3 to 1*m6+0.796*m5+0.619*m4+0.467*m3.
//	3.Modify cho_tb,cv_tb,ratio of MOMCAPS_AS_MMKF from 509.7E-18,173.7E-18,1.021 to 519E-18,71.37-18,0.511 respectively.
//	4.Modify factor of MOMCAPS_AS_MMKF from 1*m6+0.7948*m5+0.5905*m4 to 1*m6+0.773*m5+0.546*m4.
// 1.1-P3 05/16/2006 Eric Chang
//	1.Exclude NCAP devices from WRONG_NTAP and WRONG_FLOATING_NTAP ERC check.
//	2.Add N_PG199P4_SPHVT,N_PD199P4_SPHVT,P_L199P4_SPHVT, N_PG199P4_LLHVT,N_PD199P4_LLHVT,P_L199P4_LLHVT.
// 1.1-P2 04/27/2006 Eric Chang
//	1.Change RS,DW of RSPPO_A from 6.8,-0.0086E-6 to 6.5,-0.0067E-6.
//	2.Modify Resistor Property to 3% for all resistors other than RNPPO_ES,RNPPO_CS and RSPPO_A.
//	3.Change the switch from 2.5V_2.5VOD_IO to 2.5V_3.3VOD_IO.
// 1.1-P1 04/13/2006 Eric Chang
//	1. Add N_18_NVT,RSPPO_A and Change the device name from N_10_NVT,N_12_NVT to N_10_SPNVT,N_12_LLNVT.
//	2. Add the property, area, to PNP_V32X32 and NPN_V32X32.
//	3. Add option "LVS ABORT ON SOFTCHK YES" and Add NOTES(7).
//	4. Change the connectivity related to MMCTP and MMCBP.
// 1.0-P3 02/08/2006 Deborah Huang
//	1.Modify MOMCAPS_SY_MMKF parameter cv_tb ratio factor
//	2.Modify WRONG_FLOATING_PTAP CHECK NOT IN SEALRMARK
// 01/17/2006 Deborah Huang
//	1.Modify Resistor Property to 0%
//	2.Modify RNPPO_ES Resistance
//	3.Remove the NTAP_NS NTAP_S PTAP_NS PTAP_S TTAP_NS TTAP_S
// 01/03/2006 Deborah Huang/UMC
//	1.Modify MOSLOD
// 11/17/2005 Deborah Huang/UMC
//	1.Modify pin name
//		. 1.8V I/O device ( N_18_SBLK / P_18_SBLK ) //note1
//		. 2.5V I/O device ( N_25_SBLK / P_25_SBLK ) //note1
//		. 2.5V I/O device ( N_33_GOX52_SBLK / P_33_GOX52_SBLK ) //note1
//		. 3.3V I/O device ( N_33_SBLK / P_33_SBLK ) //note1
//		. 1.2V NATIVE Vt NMOS device ( N_12_LLNVT ) //note1
//	2.Add SBLK_MOS option
//	3.Modify RNNPO RNPPO RSNPO RSPPO
//	4.Modify NSD PSD NSD_S PSD_S NSD_NS PSD_NS
//	5.Modify N_10_SP P_10_SP extraction
//	6.Add Property C for MOMCAPS_AS_MMKF MOMCAPS_SY_MMKF
//	7.Modify SRAM pin name
//	8.Modify NSD PSD BUTTING
//	9.Add RNPPO_ES and RNPPO_CS resistor
//	11/14/2005 Deborah Huang/UMC
//	1.Add MOMCAP
//		MOMCAPS_AS_MMKF
//		MOMCAPS_SY_MMKF
// 1.0-P1 10/05/2005 Deborah Huang/UMC
//	1.Add
//		. 1.8V I/O device ( N_18_SBLK / P_18_SBLK ) //note1
//		. 2.5V I/O device ( N_25_SBLK / P_25_SBLK ) //note1
//		. 2.5V I/O device ( N_33_GOX52_SBLK / P_33_GOX52_SBLK ) //note1
//		. 3.3V I/O device ( N_33_SBLK / P_33_SBLK ) //note1
//	2.Add SBLK_MOS option
//	3.Modify Metal resistor 0.42 to 0.44
//	4.Modify devices pin name
// 0.4-P8 09/02/2005 Deborah Huang/UMC
//	1.Add
//		. SP 6TSRAM 0.99um^2 (maker layer 95(27) )
//		. Pass Gate (N_PG99_SPHVT)
//		. Pull Down MOS (N_PD99_SPHVT)
//		. Load PMOS (P_L99_SPHVT)
//	2.Add CU FUSE PAD
//	3.Modify
//		. LL 6TSRAM 0.99um^2 (maker layer 95(2) )
//		. Pass Gate (N_PG099_LLHVT)
//		. Pull Down MOS (N_PD099_LLHVT)
//		. Load PMOS (P_L099_LLHVT)
//		. SP 6TSRAM 0.99um^2 (maker layer 95(5) )
//		. Pass Gate (N_PG099_SPHVT)
//		. Pull Down MOS (N_PD099_SPHVT)
//		. Load PMOS (P_L099_SPHVT)
//	To
//		. LL 6TSRAM 0.99um^2 (maker layer 95(2) )
//		. Pass Gate (N_PG99_LLHVT)
//		. Pull Down MOS (N_PD99_LLHVT)
//		. Load PMOS (P_L99_LLHVT)
//		. SP 6TSRAM 0.99um^2 (maker layer 95(5) )
//		. Pass Gate (N_PG99_SPHVT)
//		. Pull Down MOS (N_PD99_SPHVT)
//		. Load PMOS (P_L99_SPHVT)
// 0.4-P7 07/13/2005 Deborah Huang/UMC
//	1.Modify Add 2.5V_2.5VOD_IO
//	2.Modify Monte Carlo Model + HSPICE option
// 0.4-P6 06/08/2005 Deborah Huang/UMC
//	1.Add Monte Carlo Model + HSPICE option
//	2.Modify
//		. LL 6TSRAM 0.999um^2 (maker layer 95(2) )
//		. Pass Gate (N_PG0999_LLHVT)
//		. Pull Down MOS (N_PD0999_LLHVT)
//		. Load PMOS (P_L0999_LLHVT)
//		. SP 6TSRAM 0.999um^2 (maker layer 95(5) )
//		. Pass Gate (N_PG0999_SPHVT)
//		. Pull Down MOS (N_PD0999_SPHVT)
//		. Load PMOS (P_L0999_SPHVT)
//	To
//		. LL 6TSRAM 0.99um^2 (maker layer 95(2) )
//		. Pass Gate (N_PG099_LLHVT)
//		. Pull Down MOS (N_PD099_LLHVT)
//		. Load PMOS (P_L099_LLHVT)
//		. SP 6TSRAM 0.99um^2 (maker layer 95(5) )
//		. Pass Gate (N_PG099_SPHVT)
//		. Pull Down MOS (N_PD099_SPHVT)
//		. Load PMOS (P_L099_SPHVT)
//	3.Add 2.5V_2.5VOD_IO option
// 0.4-P5 05/02/2005 Deborah Huang/UMC
//	1.Modify
//		NWELL = NWEL NOT TWEL
//	to
//		NWELL = NWEL NOT TWELL
//		PTAP = PSD NOT NWELL
//	to
//		PTAP = PSD NOT (NWELL OR TWELL)
//		TTAP = PSD AND TWEL
//	to
//		TTAP = PSD AND TWELL
//	2.Modify BJT extration
//	3.Remove LVS SOFTCHK NWEL CONTACT
//	Remove SCONNECT NSD NWEL BY NTAP
//	4.Add LVS SOFTCHK WELL CONTACT
//	Add SCONNECT NSD WELL BY NTAP
//	5.Remove RNNPO_PSUB AND RNPPO_PSUB option , set RNNPO AND RNPPO pin order to POS NEG B
//	6.Base on spice A.C-PB modify NCAP_10 to NCAP_10_SPHVT and NCAP_12 to NCAP_12_LLHVT
//	7.Base on spice 0.3-P1 modify RSNWELL RSND RSPD RSNPO RSPPO to 3 terminals
//	8.Add
//		. LL 6TSRAM 0.99um^2 (maker layer 95(2) )
//		. Pass Gate (N_PG099_LLHVT)
//		. Pull Down MOS (N_PD099_LLHVT)
//		. Load PMOS (P_L099_LLHVT)
//		. SP 6TSRAM 0.99um^2 (maker layer 95(5) )
//		. Pass Gate (N_PG099_SPHVT)
//		. Pull Down MOS (N_PD099_SPHVT)
//		. Load PMOS (P_L099_SPHVT)
//		. LL 6TSRAM 1.16um^2 (maker layer 95(26) )
//		. Pass Gate (N_PG116_LLHVT)
//		. Pull Down MOS (N_PD116_LLHVT)
//		. Load PMOS (P_L116_LLHVT)
//		. SP 6TSRAM 1.16um^2 (maker layer 95(25) )
//		. Pass Gate (N_PG116_SPHVT)
//		. Pull Down MOS (N_PD116_SPHVT)
//		. Load PMOS (P_L116_SPHVT)
//		. LL 8TSRAM 2.08um^2 (maker layer 94(29) )
//		. Pass Gate (N_PG208_LLHVT)
//		. Pull Down MOS (N_PD208_LLHVT)
//		. Load PMOS (P_L208_LLHVT)
//		. SP 8TSRAM 2.08um^2 (maker layer 94(28) )
//		. Pass Gate (N_PG208_SPHVT)
//		. Pull Down MOS (N_PD208_SPHVT)
//		. Load PMOS (P_L208_SPHVT)
// 0.4-P4 12/30/2004 Deborah Huang/UMC
//	1.Add LVS SOFTCHK NWEL CONTACT
//	1.Add SCONNECT NSD NWEL BY NTAP
// 0.4-P3 12/03/2004 Deborah Huang
//	1. add wrong tap and tap floating check
//	2. modify notes
//	3. rename option IO_18->1.8V_IO,IO_25->2.5V_IO,IO_33->3.3V_IO
//	4.add MMC_DUMMY for LPE
// 0.4-P2 12/03/2004 Deborah Huang
//	1. add wrong tap and tap floating check
//	2. modify options
//		LVS RECOGNIZE GATES NONE //CALIBRE tool default is ALL
//		//LVS FILTER UNUSED OPTION AB RC RE RG RB YB // Calibre tool default is NO
//		//LVS FILTER UNUSED MOS YES // Calibre tool default is NO
//		//LVS FILTER UNUSED BIPOLAR YES // Calibre tool default is NO
//		//LVS FILTER UNUSED CAPACITORS YES // Calibre tool default is NO
//		//LVS FILTER UNUSED DIODES YES // Calibre tool default is NO
//		//LVS FILTER UNUSED RESISTORS YES // Calibre tool default is NO
//	3. add options
//		LVS CHECK PORT NAMES YES //CALIBRE tool default is NO
//	4.modify BJT coding method
//	5.Add "MOSLOD" MACRO for extract LOD parameters for all mos
// 0.4-P1 06/01/2004 James Yeh
//	1.Update typo:TOP_METAL_ME9_2T1F to TOP_METAL_ME8_2T1F
//	2.Add SA,SB paramater in MOS device extraction.
//	08/12/2004 James Yeh
//	1.Update "FUSE" definition.
//	09/20/2004 James Yeh
//	1.Base on EDR, update RSNPO value from 20 to 14
//	2.Base on EDR, update RSPPO value from 20 to 8
//	3.Base on SPICE,update RNHR to RNHR1000
//	4.Add device:RNPD,RNNPO and base on SPICE, update RNND and RNPPO
//	5.Add non-salicide Poly resistor of the third terminal options:
//		RNNPO_WEL and RNPPO_PSUB.
//	6.Add device:DIODN,DIODP,DIODNW
//	7.Update DION,DIOP,DIODN(Base on TLR, DIODE should be coverd by DIMPBK(7;1)
//	8.Add device:NCAP_10,NCAP_12,NCAP_25
// 0.3-P2 03/02/2004 James Yeh
//	1.Use MARCO to define L,W,AD,AS,PD,PS
//	2.Update NWEL RESISTOR LAYER "WSYMBOL(83;0)" to "NWR(40;0)"
//	3.Update layer LLHVT to LL_HVT
//	4.Update layer DP_2 to DP_1
//	5.layer NATIVE:(18;71) to (7;36)
//	6.Update device "MIMCAPS" WIDTH extraction methodology
//	7.Add options:
//		TOP_METAL_ME4_1T0F // To switch LVS to 1P4M_1T0F
//		TOP_METAL_ME5_1T0F // To switch LVS to 1P5M_1T0F
//		TOP_METAL_ME6_1T0F // To switch LVS to 1P6M_1T0F
//	TOP_METAL_ME6_2T0F // To switch LVS to 1P6M_2T0F
//	TOP_METAL_ME6_1T1F // To switch LVS to 1P6M_1T1F
//	TOP_METAL_ME7_1T0F // To switch LVS to 1P7M_1T0F
//	TOP_METAL_ME7_2T0F // To switch LVS to 1P7M_2T0F
//	TOP_METAL_ME7_1T1F // To switch LVS to 1P7M_1T0F
//	TOP_METAL_ME7_2T1F // To switch LVS to 1P7M_2T1F
//	TOP_METAL_ME8_2T0F // To switch LVS to 1P8M_2T0F
//	TOP_METAL_ME8_1T1F // To switch LVS to 1P8M_1T1F
//	TOP_METAL_ME8_2T1F // To switch LVS to 1P8M_2T1F
//	TOP_METAL_ME9_2T1F // To switch LVS to 1P9M_2T1F
//	8.Add ME1~ME9 metal resistor
//		Metal1 resistor marker layer:M1RESMK
//		Metal2 resistor marker layer:M2RESMK
//		Metal3 resistor marker layer:M3RESMK
//		Metal4 resistor marker layer:M4RESMK
//		Metal5 resistor marker layer:M5RESMK
//		Metal6 resistor marker layer:M6RESMK
//		Metal7 resistor marker layer:M7RESMK
//		Metal8 resistor marker layer:M8RESMK
//		Metal9 resistor marker layer:M9RESMK
//	9.Update resistor width extraction methodology
//	10.Add "ALLGATES" layer in PEXRUN.
//	11.Update connection function.
//
// 0.3-P1 01/20/2004 James Yeh/UMC
//	1.Rewrite command file.
//
// 0.2-P2 08/19/2002 Add 1P2M to 1P8M options
//	To replace all pin"G" by recognition layer name, gate name
//	in mos width & length extraction
//	Update the capacitance values, Ca 1 => 1E-3
//	Cinv_thick 5.8 => 5.8E-3
//	Update the resistance values
//	Rend_pposab 0.05 => 0.05E-3
//	Rend_ndiffsab 0.02 => 0.02E-3
// 0.2-P1 07/30/2002 Creation
//==================================================================
//==================================================================
// NOTES (Important! Read Me First !!!)
// =====================================
// 1.LVS files are provided as working templates. Some modifications
// may be required for additional devices or recognition/construction
// issues.
// 2.This file is created for Calibre 2007.1_17.18
// 3.The parameters of resistors have to be changed according to
// their layout width. Designers can discuss this with product
// engineers.
// 4.Netlist elements:
//	a.MOS Devices :
//		. 1.0V SP MOS device ( P_10_SP / N_10_SP )
//		. 1.0V SP MOS device in T-Well ( N_10_SP )	
//		. 1.0V SP HIGH Vt MOS device ( P_10_SPHVT / N_10_SPHVT )
//		. 1.0V SP HIGH Vt MOS device in T-Well ( N_10_SPHVT )	
//		. 1.0V SP LOW Vt MOS device ( P_10_SPLVT / N_10_SPLVT )
//		. 1.0V SP LOW Vt MOS device in T-Well ( N_10_SPLVT )	
//		. 1.2V LL MOS device ( P_12_LL / N_12_LL )	
//		. RF 1.0V SP MOS device ( P_10_SPRF / N_10_SPRF )
//		. RF 1.0V SP NMOS device in T-Well ( N_BPW_10_SPRF )
//		. RF 1.2V LL NMOS device ( N_12_LLRF )
//		. RF 1.2V LL PMOS device ( P_12_LLRF ) // note4
//		. RF 1.2V LL NMOS device in T-Well ( N_BPW_12_LLRF ) // note4
//		. RF 1.2V LL NMOS device ( N_12_LLLVTRF )
//		. RF 1.2V LL PMOS device ( P_12_LLLVTRF )
//		. RF 1.2V LL NMOS device in T-Well ( N_BPW_12_LLLVTRF ) // note4
//		. 1.2V LL NMOS device in T-Well ( N_12_LL )	
//		. 1.2V LL HIGH Vt MOS device (P_12_LLHVT / N_12_LLHVT ) 
//		. 1.2V LL HIGH Vt NMOS device in T-Well ( N_12_LLHVT)	
//		. 1.2V LL LOW Vt MOS device (P_12_LLLVT / N_12_LLLVT ) 
//		. 1.2V LL LOW Vt NMOS device in T-Well ( N_12_LLLVT)	
//		. 1.8V I/O device ( N_18 / P_18 )
//		. 1.8V I/O device in T-Well ( N_18 )
//		. 1.8V I/O device ( N_18_SBLK / P_18_SBLK )	//note1
//		. 1.8V I/O device in T-Well( N_18_SBLK ) 
//		. RF 1.8V I/O device ( N_18_RF / P_18_RF )
//		. RF 1.8V I/O device in T-Well ( N_BPW_18_RF )
//		. RF 2.5V I/O device ( N_25_RF / P_25_RF )
//		. RF 2.5V I/O device in T-Well ( N_BPW_25_RF )
//		. RF 3.3V I/O device ( N_33_RF / P_33_RF )
//		. RF 3.3V I/O device in T-Well ( N_BPW_33_RF )
//		. 2.5V I/O device ( N_25 / P_25 )
//		. 2.5V I/O device in T-Well ( N_25 )
//		. 2.5V I/O device ( N_25_SBLK / P_25_SBLK )	//note1
//		. 2.5V I/O device in T-Well ( N_25_SBLK )	//note1
//		. 2.5V I/O device ( N_33_GOX52 / P_33_GOX52 )
//		. 2.5V I/O device in T-Well ( N_33_GOX52 )	//note1
//		. 2.5V I/O device ( N_33_GOX52_SBLK / P_33_GOX52_SBLK )	//note1
//		. 2.5V I/O device in T-Well ( N_33_GOX52_SBLK)	//note1
//		. 3.3V I/O device ( N_33 / P_33 )
//		. 3.3V I/O device in T-Well ( N_33 )
//		. 3.3V I/O device ( N_33_SBLK / P_33_SBLK )	//note1
//		. 1.0V NATIVE Vt NMOS device ( N_10_SPNVT )	
//		. 1.2V NATIVE Vt NMOS device ( N_12_LLNVT )	
//		. 2.5V NATIVE Vt NMOS device ( N_25_NVT )	
//		. 3.3V NATIVE Vt NMOS device ( N_33_NVT )	
//		. 1.8V NATIVE Vt NMOS device ( N_18_NVT )	
//		. LLHVT 6TSRAM 0.99um^2 (maker layer 95(2) )	//note1
//		. Pass Gate (N_PG99_LLHVT)
//		. Pull Down MOS (N_PD99_LLHVT)
//		. Load PMOS (P_L99_LLHVT)
//		. SPHVT 6TSRAM 0.99um^2 (maker layer 95(5) 95(27))	
//		. Pass Gate (N_PG99_SPHVT)
//		. Pull Down MOS (N_PD99_SPHVT)
//		. Load PMOS (P_L99_SPHVT)
//		. LLHVT 6TSRAM 1.16um^2 (maker layer 95(26) )	
//		. Pass Gate (N_PG116_LLHVT)
//		. Pull Down MOS (N_PD116_LLHVT)
//		. Load PMOS (P_L116_LLHVT)
//		. SPHVT 6TSRAM 1.16um^2 (maker layer 95(25) )
//		. Pass Gate (N_PG116_SPHVT)
//		. Pull Down MOS (N_PD116_SPHVT)
//		. Load PMOS (P_L116_SPHVT)
//		. LLHVT 6TSRAM 1.26um^2 (maker layer 95(23) )
//		. Pass Gate (N_PG126_LLHVT) 
//		. Pull Down MOS (N_PD126_LLHVT) 
//		. Load PMOS (P_L126_LLHVT) 
//		. SPHVT 6TSRAM 1.26um^2 (maker layer 95(20) )
//		. Pass Gate (N_PG126_SPHVT) 
//		. Pull Down MOS (N_PD126_SPHVT) 
//		. Load PMOS (P_L126_SPHVT) 
//		. LLHVT 8TSRAM 2.08um^2 (maker layer 94(29) )	//note1
//		. Pass Gate (N_PG208_LLHVT)
//		. Pull Down MOS (N_PD208_LLHVT)
//		. Load PMOS (P_L208_LLHVT)
//		. SPHVT 8TSRAM 2.08um^2 (maker layer 94(28) )
//		. Pass Gate (N_PG208_SPHVT)
//		. Pull Down MOS (N_PD208_SPHVT)
//		. Load PMOS (P_L208_SPHVT)
//		. SPHVT 8TSRAM 2.401um^2 (maker layer 94(20) )
//		. Pass Gate (N_PG240_SPHVT) 
//		. Pull Down MOS (N_PD240_SPHVT) 
//		. Load PMOS (P_L240_SPHVT) 
//		. SPHVT 8TSRAM 1.994um^2 (maker layer 94(62) ) note that spice model is not available as of 5/15/2006
//		. Pass Gate (N_PG199P4_SPHVT)
//		. Pull Down MOS (N_PD199P4_SPHVT)
//		. Load PMOS (P_L199P4_SPHVT)
//		. LLHVT 8TSRAM 1.994um^2 (maker layer 94(63) ) note that spice model is not available as of 5/15/2006
//		. Pass Gate (N_PG199P4_LLHVT)
//		. Pull Down MOS (N_PD199P4_LLHVT)
//		. Load PMOS (P_L199P4_LLHVT)
//	b. Resistor Elements :	
//		. N-Well sheet resistor (RSNWELL)	
//		. Non-Salicide Resistors
//		- N+ sheet resistor (RNND)	
//		- P+ sheet resistor (RNPD)
//		- N+ Poly sheet resistor (RNNPO)
//		- P+ Poly sheet resistor (RNPPO)	
//		- CENTER SEGMENTS Non-Salicide P+ Poly resistor sheet resistor (RNPPO_CS) ##note that spice model is not ready.	
//		- END SEGMENTS Non-Salicide P+ Poly resistor sheet resistor (RNPPO_ES) ##note that spice model is not ready.	
//		- HR Ploy Sheet resistor (RNHR1000)	
//		. RF Non-Salicide Resistors
//		- N+ Poly sheet resistor in NWELL (RNNPO_NW_RF)
//		- P+ Poly sheet resistor in NWELL(RNPPO_NW_RF)
//		- HR Ploy Sheet resistor (RNHR_NW_RF)
//		- N+ Poly sheet resistor (RNNPO_RF)
//		- P+ Poly sheet resistor (RNPPO_RF)
//		- HR Ploy Sheet resistor (RNHR_RF)
//		. Salicide Resistors	
//		- N+ sheet resistor (RSND)
//		- P+ sheet resistor (RSPD)
//		- N+ Poly sheet resistor (RSNPO)
//		- P+ Poly sheet resistor (RSPPO)
//		- CUSTOMERIZED P+ Poly sheet resistor (RSPPO_A) ##note that spice model is not ready.
//		. Metal Fuse Resistor (FUSE) 
//		. ALRDL Resistor (RAL) 
//		. Metal Resistors
//		- 2 terminals Metal 1 resistor (RM1)
//		- 2 terminals Metal 2 resistor (RM2)
//		- 2 terminals Metal 3 resistor (RM3)
//		- 2 terminals Metal 4 resistor (RM4)
//		- 2 terminals Metal 5 resistor (RM5)
//		- 2 terminals Metal 6 resistor (RM6)
//		- 2 terminals Metal 7 resistor (RM7)
//		- 2 terminals Metal 8 resistor (RM8)
//		- 2 terminals Metal 9 resistor (RM9)
//	c. Capacitor :
//		. MIM Capacitor (MIMCAPS)
//		. NFET in N-well capacitor
//		- NCAP thin oxide(NCAP_10_SP)
//		- NCAP medium oxide (NCAP_12_LL) 
//		- NCAP thick oxide (NCAP_25_NO_VT_IMP)	
//		- NCAP thick oxide (NCAP_18_NO_VT_IMP)
//		- NCAP thick oxide (NCAP_33_NO_VT_IMP)
//	note that If customers would like to recognize NCAP device with NF,number of poly fingers,more than 1,
//	they need to draw the layer,SDSYM( 86(20) ) which must enclose these poly finger gates within the same diffusion.
//		- NCAP thin oxide(NCAP_10_SPHVT)
//		- NCAP medium oxide (NCAP_12_LLHVT) 
//		- NCAP thick oxide (NCAP_25)	
//		- NCAP thick oxide (NCAP_33)
//		- MOMCAP MOMCAPS_AS_MMKF
//		- MOMCAP MOMCAPS_SY_MMKF
//		- MOMCAPS_ARRAY_VP3_RFVCL
//		- MOMCAPS_ARRAY_VP4_RFVCL
//		- MOMCAPS_ARRAY_VP3_MMVCL //note1
//		- MOMCAPS_ARRAY_VP4_MMVCL //note1
//		- RFCMOS 20fF/um^2 PLANAR MIM capacitor in NWELL 4 terminal (MIMCAPS_20FNW_RFKF) 
//		- RFCMOS 20fF/um^2 PLANAR MIM MIM capacitor 3 terminal (MIMCAPS_20F_RFKF)	
//		- RFCMOS 20fF/um^2 PLANAR MIM MIM capacitor 2 terminal(MIMCAPS_20F_MM)
//	d. Varactor :
//		. 1.0V SP N+/Nwell MIS varactor (VARMIS_10_SPRF)
//		. 1.2V LL N+/Nwell MIS varactor (VARMIS_12_LLRF)
//		. 1.8V LL N+/Nwell MIS varactor (VARMIS_18_RF)
//		. DIOP MIS varactor (VARDIOP_RF) 
//	e. Diode
//		. P+/N-Well Diode	(DIOP)
//		. N+/P-Well Diode	(DION)
//		. NWell/Psub Diode	(DIONW)
//		. N+/Buried P-Well Diode (DIODN)
//		. Buried P-Well/Deep N-Well (DIODP)
//		. Deep Nwell/Psub	(DIODNW)
//	f. BJT
//		. PNP Bipolar Transistor 
//		- Emitter area 3.2um*3.2um(PNP_V32X32)
//		. NPN Bipolar Transistor
//		- Emitter area 3.2um*3.2um(NPN_V32X32) //note1
//	g. Inductor
//		. Planar RF Inductor (L_CR30K_RFVIL)	
//		. Stacked RF Inductor (L_SQSK_RFVIL)	
//		. Planar Symmetric RF Inductor (L_SY30K_RFVIL)	
//		. Planar Symmetric center-tapped RF Inductor (L_SY30KCT_RFVIL) 
//	h. PAD
//		. RF Bonding Pad (PAD_BOAC_RF)
// 5. If devices dimension needed to be checked, uncomment the "//" in 
// TRACE PROPERTY statement.
//
// 6.Customers should revise the name of "runset.tec" to the correct 
// LPE file name, and turn on PEXRUN,INCLUDE while running LPE file 
//
// 7.If customers would like to stop running when the tool detects the error in softcheck, 
// please turn on the option: "LVS ABORT ON SOFTCHK YES"
//
// 8.If customer's design consists of more than 32 same devices connected in parallel,please turn on the option:
// "LVS PROPERTY RESOLUTION MAXIMUM ALL". Please note that there is the potential performance penalty for it.
// In most circumstances, it should not be turned on.
//
// note1:spice model not ready
// note2:If customer use CCI flow please add the command as below in star command for Resistors and Capacitors model
// NETLIST_PASSIVE_PARAMS: YES
// HN_NETLIST_SPICE_TYPE : RSNWELL X
// HN_NETLIST_SPICE_TYPE : RNHR1000 X
// HN_NETLIST_SPICE_TYPE : RNNPO X
// HN_NETLIST_SPICE_TYPE : RNPPO X
// HN_NETLIST_SPICE_TYPE : RNPPO_CS X
// HN_NETLIST_SPICE_TYPE : RNPPO_ES X
// HN_NETLIST_SPICE_TYPE : RSPPO_A X
// HN_NETLIST_SPICE_TYPE : RNND X
// HN_NETLIST_SPICE_TYPE : RNPD X
// HN_NETLIST_SPICE_TYPE : RSND X
// HN_NETLIST_SPICE_TYPE : RSPD X
// HN_NETLIST_SPICE_TYPE : RSNPO X
// HN_NETLIST_SPICE_TYPE : RSPPO X
// HN_NETLIST_SPICE_TYPE : NCAP_18_NO_VT_IMP X //for 1.8V_IO
// HN_NETLIST_SPICE_TYPE : NCAP_25 X //for 2.5V_IO or 2.5V_3.3VOD_IO
// HN_NETLIST_SPICE_TYPE : NCAP_25_NO_VT_IMP X //for 2.5V_IO or 2.5V_3.3VOD_IO
// HN_NETLIST_SPICE_TYPE : NCAP_33 X //for 3.3V_IO
// HN_NETLIST_SPICE_TYPE : NCAP_33_NO_VT_IMP X //for 3.3V_IO
// HN_NETLIST_SPICE_TYPE : NCAP_10_SPHVT X
// HN_NETLIST_SPICE_TYPE : NCAP_10_SP X
// HN_NETLIST_SPICE_TYPE : NCAP_12_LLHVT X
// HN_NETLIST_SPICE_TYPE : NCAP_12_LL X
//
// note3:
// The command ,S=enclosure_vector(AUXLAYER,3),was used to extract SA,SB.
// For SA/SB exceed 3um,the extracted value is 3um,
// if the user would like to extract the actual value
// they can change 3 to another value
// note4: Add the option,"RF_WELL_SHARED", to extract the well-sharing related parameters for some RF MOS sharing wells.
// This option is turned on by default. Executing the extraction requires Calibre version:2007.1-17.18 and later version.
// The older version would lead to the abort of LVS run. If on the layout, there is no RF device, or there are RF devices
// but they don't share the same well,you could add the "//" preceding the option.
// Then you could use the older version than 2007.1-17.18.
//////////////////////////////////////////////////////////////////////

TITLE "UMC 90nm LOGIC/MIXED_MODE90N 1P9M MMC LOW_K Process"

///////////////////////////
// SPECIFICATION STATEMENTS
///////////////////////////
// Warning! Do not turn on 2 or more metal options at the same
// time. If do that, a fatal error can occur.

// #DEFINE TOP_METAL_ME4_1T0F // To switch LVS to 1P4M_1T0F
// #DEFINE TOP_METAL_ME5_1T0F // To switch LVS to 1P5M_1T0F
// #DEFINE TOP_METAL_ME6_1T0F // To switch LVS to 1P6M_1T0F
// #DEFINE TOP_METAL_ME6_2T0F // To switch LVS to 1P6M_2T0F
// #DEFINE TOP_METAL_ME6_1T1F // To switch LVS to 1P6M_1T1F
// #DEFINE TOP_METAL_ME7_1T0F // To switch LVS to 1P7M_1T0F
// #DEFINE TOP_METAL_ME7_2T0F // To switch LVS to 1P7M_2T0F
// #DEFINE TOP_METAL_ME7_1T1F // To switch LVS to 1P7M_1T1F
// #DEFINE TOP_METAL_ME7_2T1F // To switch LVS to 1P7M_2T1F
// #DEFINE TOP_METAL_ME8_2T0F // To switch LVS to 1P8M_2T0F
// #DEFINE TOP_METAL_ME8_1T1F // To switch LVS to 1P8M_1T1F
// #DEFINE TOP_METAL_ME8_2T1F // To switch LVS to 1P8M_2T1F
 #DEFINE TOP_METAL_ME9_2T1F // To switch LVS to 1P9M_2T1F

//please choose one IO Voltage

//#DEFINE 1.8V_IO //SELECT 1.8V IO(mean only include 1.8V IO device)
#DEFINE 2.5V_IO //SELECT 2.5V IO(mean only include 2.5V IO device)
//#DEFINE 3.3V_IO //SELECT 3.3V IO(mean only include 3.3V(GOX65) IO device)
//#DEFINE 2.5V_3.3VOD_IO //SELECT 2.5V_3.3VOD IO(mean inculde 2.5V IO and 3.3V_GOX52 IO device)

#DEFINE TOP_METAL_THICKNESS_8K //This option is only for the RF BOAC PAD to select the top metal thichness is 8K
//#DEFINE TOP_METAL_THICKNESS_30K //This option is only for the RF BOAC PAD to select the top metal thichness is 30K

//#DEFINE SBLK_MOS
#DEFINE RF_WELL_SHARED	// To switch of RF_WELL_SHARED option,Default is turn on,
			// If customers don't want to check "RF_WELL_SHARED",please turn off this option,

				//////////////////////////////////////////////////////////////////
//#DEFINE PEXRUN		// TO RUN RC(HSPICE OR SPECTRE), Please turn on it.		//
//#DEFINE PEXRUN_MC_HSPICE	// TO RUN RC(Monte Carlo Model + HSPICE), Please turn on it.	//
//INCLUDE "./runset.tec"	// To RUN RC, Please include the tech file			//
//#DEFINE RCFLOW_CCI		// To use CALIBRE LVS+STARRCXT, turn on it			//
				// PEXRUN and RCFLOW_CCI can not turn on at the			//
				// same time.							//
LVS EXECUTE ERC NO		// If customer want to check "ERC PATHCHK",please setup		//
				// "NO" to "YES"						//
				//////////////////////////////////////////////////////////////////

SOURCE PATH "test.spi"
SOURCE PRIMARY "test"
SOURCE SYSTEM SPICE

LAYOUT PATH "test.gds"
LAYOUT PRIMARY "test"
LAYOUT SYSTEM GDSII

LVS REPORT lvs_test.rep

drc summary report "drc.rep"
drc results database "drc.db"

UNIT LENGTH U
UNIT CAPACITANCE FF
UNIT RESISTANCE OHM
UNIT TIME US

PRECISION 1000
RESOLUTION 1

#IFDEF PEXRUN
	MASK SVDB DIRECTORY svdb XRC
	ALLGATES = DIFF AND PO1
	CONNECT ALLGATES PLY_C
	MMC_DUMMY = COPY CMMC
	CONNECT MMC_DUMMY MMCBP_C
#ELSE 
	#IFDEF PEXRUN_MC_HSPICE
		MASK SVDB DIRECTORY svdb XRC
		ALLGATES = DIFF AND PO1
		CONNECT ALLGATES PLY_C
		MMC_DUMMY = COPY CMMC
		CONNECT MMC_DUMMY MMCBP_C
	#ELSE
		#IFDEF RCFLOW_CCI
			MASK SVDB DIRECTORY svdb CCI
		#ELSE // For RVE Purpose
			MASK SVDB DIRECTORY svdb QUERY 
		#ENDIF
	#ENDIF
#ENDIF

////////////////////////////////////////
// Map TEXT layer to port names 
////////////////////////////////////////
TEXT DEPTH PRIMARY

// Please change following ground and power name as in your design
//VIRTUAL CONNECT COLON YES
//VIRTUAL CONNECT NAME ?GND? ?VCC? ?VSS? ?VDD? V3IO V0IO VAS VAD

LVS POWER NAME ?VDD?	//?VCC?
LVS GROUND NAME ?VSS?	//?GND?
//////////////////////////////////
// LVS Setup Options
//////////////////////////////////

//LAYOUT ERROR INPUT ON NO

LVS ALL CAPACITOR PINS SWAPPABLE NO
LVS IGNORE PORTS NO

LVS SPICE REPLICATE DEVICES YES
LVS REDUCE C(MIMCAPS_20F_MM) PARALLEL NO
LVS REDUCE C(NCAP_10_SP) PARALLEL NO
LVS REDUCE C(NCAP_10_SPHVT) PARALLEL NO
LVS REDUCE C(NCAP_12_LL) PARALLEL NO
LVS REDUCE C(NCAP_12_LLHVT) PARALLEL NO
#IFDEF 1.8V_IO
	LVS REDUCE C(NCAP_18_NO_VT_IMP) PARALLEL NO
#ENDIF
#IFDEF 2.5V_IO
	LVS REDUCE C(NCAP_25_NO_VT_IMP) PARALLEL NO
	LVS REDUCE C(NCAP_25) PARALLEL NO
#ENDIF
#IFDEF 3.3V_IO
	LVS REDUCE C(NCAP_33_NO_VT_IMP) PARALLEL NO
	LVS REDUCE C(NCAP_33) PARALLEL NO
#ENDIF
#IFDEF 2.5V_3.3VOD_IO
	LVS REDUCE C(NCAP_25_NO_VT_IMP) PARALLEL NO
	LVS REDUCE C(NCAP_25) PARALLEL NO
#ENDIF

LVS RECOGNIZE GATES NONE			// Calibre tool default is ALL
LVS REDUCE SPLIT GATES YES
LVS CHECK PORT NAMES YES			// Calibre tool default is NO
LVS COMPARE CASE NO
LVS REPORT OPTION A B C D S
LVS REPORT MAXIMUM 1000
//LVS PROPERTY RESOLUTION MAXIMUM ALL		// Calibre tool default is 32
LVS REDUCE PARALLEL BIPOLAR YES
LVS REDUCE PARALLEL CAPACITORS YES
LVS REDUCE PARALLEL DIODES YES
LVS REDUCE PARALLEL MOS YES
LVS REDUCE PARALLEL RESISTORS YES
LVS REDUCE SERIES CAPACITORS YES
LVS REDUCE SERIES RESISTORS YES
LVS ABORT ON SUPPLY ERROR NO
//LVS ABORT ON SOFTCHK YES

//LVS FILTER UNUSED OPTION AB RC RE RG RB YB	// Calibre tool default is NO
//LVS FILTER UNUSED MOS YES			// Calibre tool default is NO
//LVS FILTER UNUSED BIPOLAR YES			// Calibre tool default is NO
//LVS FILTER UNUSED CAPACITORS YES		// Calibre tool default is NO
//LVS FILTER UNUSED DIODES YES			// Calibre tool default is NO
//LVS FILTER UNUSED RESISTORS YES		// Calibre tool default is NO

LVS EXPAND UNBALANCED CELLS YES
LVS EXPAND SEED PROMOTIONS YES			// Calibre tool default is NO

//FLAG NONSIMPLE YES
//FLAG ACUTE YES
//FLAG OFFGRID YES
//FLAG SKEW YES

///////////////////////////
// ERC
///////////////////////////
ERC RESULTS DATABASE "calibre_erc.db" ASCII
ERC SUMMARY REPORT "erc_test.rep"
ERC MAXIMUM RESULTS 1000

ERC SELECT CHECK WRONG_NTAP WRONG_PTAP WRONG_TTAP WRONG_FLOATING_NTAP WRONG_FLOATING_PTAP WRONG_FLOATING_TTAP WRONG_FLOATING_WEL PATHCHK_GND PATHCHK_PWR PATHCHK_NPWRGND PATHCHK_NLABELED

WRONG_NTAP{@Check NTAP WITH WRONG TEXT ?VSS? ?GND? EXCEPT DIODE, BJT, NWELL RESISTOR, NCAP
	(NET NTAP ?VSS? ?GND?) NOT INTERACT ((((((DSYMBOL OR ERCBJT) OR NWR) OR DIMPBK) OR NCAP) OR ERCVARMIS) OR VARDIOPRF)
}
WRONG_PTAP{@Check PTAP WITH WRONG TEXT ?VDD? ?VCC? EXCEPT DIODE and BJT
	(NET PTAP ?VDD? ?VCC?) NOT INTERACT (((DSYMBOL OR ERCBJT) OR DIMPBK) OR SEALRMARK)
}
WRONG_TTAP{@Check TTAP WITH WRONG TEXT ?VDD? ?VCC? EXCEPT DIODE and BJT
	(NET TTAP ?VDD? ?VCC?) NOT INTERACT ((DSYMBOL OR ERCBJT) OR DIMPBK) 
}

WRONG_FLOATING_NTAP{@Check NTAP WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT EXCEPT DIODE, BJT, NWELL RESISTOR, NCAP
	(NOT NET NTAP ?VDD? ?VCC? ?VSS? ?GND?) NOT INTERACT ((((((DSYMBOL OR ERCBJT) OR NWR) OR DIMPBK) OR NCAP) OR ERCVARMIS) OR VARDIOPRF)
}
WRONG_FLOATING_PTAP{@Check PTAP WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT DIODE and BJT
	(NOT NET PTAP ?VSS? ?GND? ?VDD? ?VCC?) NOT INTERACT (((DSYMBOL OR ERCBJT) OR DIMPBK) OR SEALRMARK)
}
WRONG_FLOATING_TTAP{@Check TTAP WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT DIODE and BJT
	(NOT NET TTAP ?VSS? ?GND? ?VDD? ?VCC?) NOT INTERACT ((DSYMBOL OR ERCBJT) OR DIMPBK)
}
WRONG_FLOATING_WEL{@Check WEL WITHOUT TEXT ?VDD? ?VCC? ?VSS? ?GND? EXCEPT DIODE, BJT, NWELL RESISTOR
	(NOT NET WEL ?VDD? ?VCC? ?VSS? ?GND?) NOT INTERACT ((((((DSYMBOL OR ERCBJT) OR NWR )OR DIMPBK) OR ERCVARMIS) OR NCAP) OR VARDIOPRF)
}

PATHCHK_GND{@To check nets with a path to ground not power
	PATHCHK GROUND && !POWER
}
PATHCHK_PWR{@To check nets with a path to power not ground
	PATHCHK POWER && !GROUND
}
PATHCHK_NPWRGND{@To check nets with no path to power and ground
	PATHCHK !POWER && !GROUND NOFLOAT
}
PATHCHK_NLABELED{@To check nets with no path to any labeled net
	PATHCHK !LABELED NOFLOAT
}

//output short information xxx.shorts
LVS ISOLATE SHORTS YES

// Result of LVS soft check go to <svdb.dir>/topcell.softchk
LVS SOFTCHK WELL CONTACT
LVS SOFTCHK WEL CONTACT
LVS SOFTCHK PSUB CONTACT
LVS SOFTCHK TWELL CONTACT
LVS SOFTCHK NPBDIF CONTACT
#IFDEF RF_WELL_SHARED
	LVS SOFTCHK PWELL CONTACT
	LVS SOFTCHK N_WELL CONTACT
#ENDIF

#IFDEF PEXRUN
	DMACRO MOSPROP DEVICELAYER PIN AUXLAYER AUX1{
	[
		Property W,L,AD,AS,PD,PS,SA,SB,NRD,NRS,NF
		NRD = 0
		NRS = 0
		NF = COUNT(DEVICELAYER)
		W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2 
		L=AREA(DEVICELAYER)/W 
		IN_D=PERIMETER_INSIDE(D,AUX1) 
		IN_S=PERIMETER_INSIDE(S,AUX1) 
		S=enclosure_vector(AUXLAYER,3) 
		SA=W/SUM(S::W/(S::A+0.5*L))-0.5*L 
		SB=W/SUM(S::W/(S::B+0.5*L))-0.5*L 
		IF(IN_S==0){ 
			AD=AREA(D)* W/IN_D 
			PD=PERIMETER(D)* W/IN_D 
			AS=AD 
			PS=PD 
		}
		ELSE{
			IF(IN_D==0){ 
				AS=AREA(S)* W/IN_S 
				PS=PERIMETER(S)* W/IN_S 
				AD=AS 
				PD=PS 
			}
			Else{ 
				AD=AREA(D) *W/IN_D
				PD=PERIMETER(D) *W/IN_D 
				AS=AREA(S) *W/IN_S
				PS=PERIMETER(S) * W/IN_S
			}
		}
	]
	}
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DMACRO MOSPROP DEVICELAYER PIN AUXLAYER AUX1{
		[
			Property W,L,AD,AS,PD,PS,SA,SB,NRD,NRS,NF
			NRD = 0
			NRS = 0
			NF = COUNT(DEVICELAYER)
			W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2 
			L=AREA(DEVICELAYER)/W 
			IN_D=PERIMETER_INSIDE(D,AUX1) 
			IN_S=PERIMETER_INSIDE(S,AUX1) 
			S=enclosure_vector(AUXLAYER,3) 
			SA=W/SUM(S::W/(S::A+0.5*L))-0.5*L 
			SB=W/SUM(S::W/(S::B+0.5*L))-0.5*L 
			IF(IN_S==0){ 
				AD=AREA(D)* W/IN_D 
				PD=PERIMETER(D)* W/IN_D 
				AS=AD 
				PS=PD 
			}
			ELSE{
				IF(IN_D==0){ 
					AS=AREA(S)* W/IN_S 
					PS=PERIMETER(S)* W/IN_S 
					AD=AS 
					PD=PS 
				}
				Else{ 
					AD=AREA(D) *W/IN_D
					PD=PERIMETER(D) *W/IN_D 
					AS=AREA(S) *W/IN_S
					PS=PERIMETER(S) * W/IN_S
				}
			}
		]
		}
	#ELSE
		#IFDEF RCFLOW_CCI
			DMACRO MOSPROP DEVICELAYER PIN AUXLAYER AUX1{
			[
				Property W,L,AD,AS,PD,PS,SA,SB
				W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2 
				L=AREA(DEVICELAYER)/W 
				IN_D=PERIMETER_INSIDE(D,AUX1) 
				IN_S=PERIMETER_INSIDE(S,AUX1) 
				S=enclosure_vector(AUXLAYER,3) 
				SA=W/SUM(S::W/(S::A+0.5*L))-0.5*L 
				SB=W/SUM(S::W/(S::B+0.5*L))-0.5*L 
				IF(IN_S==0){ 
					AD=AREA(D)* W/IN_D 
					PD=PERIMETER(D)* W/IN_D 
					AS=AD 
					PS=PD 
				}
				ELSE{
					IF(IN_D==0){ 
						AS=AREA(S)* W/IN_S 
						PS=PERIMETER(S)* W/IN_S 
						AD=AS 
						PD=PS 
					}
					Else{ 
						AD=AREA(D) *W/IN_D
						PD=PERIMETER(D) *W/IN_D 
						AS=AREA(S) *W/IN_S
						PS=PERIMETER(S) * W/IN_S
					}
				}
			]
			}
		#ELSE
			DMACRO MOSPROP DEVICELAYER PIN AUXLAYER AUX1{
			[
				Property W,L
				W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
				L=AREA(DEVICELAYER)/W
			]
			}
		#ENDIF
	#ENDIF
#ENDIF

#IFDEF PEXRUN
	DMACRO MOSLOD DEVICELAYER PIN AUX1 AUX2 AUX3{
	[
		Property W,L,AD,AS,PD,PS,SA,SB,NRD,NRS,NF//,SD
		NRD = 0 
		NRS = 0
		NF=COUNT(AUX1)
		W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
		L=AREA(DEVICELAYER)/W
		S=enclosure_vector(AUX2,3)
		SA=W/SUM(S::W/(S::A+0.5*L))-0.5*L
		SB=W/SUM(S::W/(S::B+0.5*L))-0.5*L
		AA=NF-1
		IF(AA ==0){
			SD=0
		}
		ELSE{
			SD = PERIMETER_OUTSIDE(DEVICELAYER,PIN)/(2*AA)
		}
		W=NF*W
		//L=(L-SD*AA)/NF
		L=AREA(AUX1)/W
		IN_D=PERIMETER_INSIDE(D,AUX3)
		IN_S=PERIMETER_INSIDE(S,AUX3)
		IF(IN_S==0){
			AD=AREA(D)*W/IN_D
			PD=PERIMETER(D)*W/IN_D
			AS=AD
			PS=PD
		}
		ELSE{
			IF(IN_D==0){
				AS=AREA(S)* W/IN_S
				PS=PERIMETER(S)* W/IN_S
				AD=AS
				PD=PS
			}
			Else{
				AD=AREA(D)*W/IN_D
				PD=PERIMETER(D)*W/IN_D
				AS=AREA(S)*W/IN_S
				PS=PERIMETER(S)*W/IN_S
			}
		}
	]
	}
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DMACRO MOSLOD DEVICELAYER PIN AUX1 AUX2 AUX3{
		[
			Property W,L,AD,AS,PD,PS,SA,SB,MIS_FLAG,NRD,NRS,NF//,SD
			NRD = 0
			NRS = 0
			MIS_FLAG=1
			NF=COUNT(AUX1)
			W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
			L=AREA(DEVICELAYER)/W
			S=enclosure_vector(AUX2,3)
			SA=W/SUM(S::W/(S::A+0.5*L))-0.5*L
			SB=W/SUM(S::W/(S::B+0.5*L))-0.5*L
			AA=NF-1
			IF(AA ==0){
				SD=0
			}
			ELSE{
				SD = PERIMETER_OUTSIDE(DEVICELAYER,PIN)/(2*AA)
			}
			W=NF*W
			//L=(L-SD*AA)/NF
			L=AREA(AUX1)/W
			IN_D=PERIMETER_INSIDE(D,AUX3)
			IN_S=PERIMETER_INSIDE(S,AUX3)
			IF(IN_S==0){
				AD=AREA(D)*W/IN_D
				PD=PERIMETER(D)*W/IN_D
				AS=AD
				PS=PD
			}
			ELSE{
				IF(IN_D==0){
					AS=AREA(S)* W/IN_S
					PS=PERIMETER(S)* W/IN_S
					AD=AS
					PD=PS
				}
				Else{
					AD=AREA(D)*W/IN_D
					PD=PERIMETER(D)*W/IN_D
					AS=AREA(S)*W/IN_S
					PS=PERIMETER(S)*W/IN_S
				}
			}
		]
		}
	#ELSE
		#IFDEF RCFLOW_CCI
			DMACRO MOSLOD DEVICELAYER PIN AUX1 AUX2 AUX3{
			[
				Property W,L,AD,AS,PD,PS,SA,SB//,SD,NF
				NF=COUNT(AUX1)
				W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
				L=AREA(DEVICELAYER)/W
				S=enclosure_vector(AUX2,3)
				SA=W/SUM(S::W/(S::A+0.5*L))-0.5*L
				SB=W/SUM(S::W/(S::B+0.5*L))-0.5*L
				AA=NF-1
				IF(AA ==0){
					SD=0
				}
				ELSE{
					SD = PERIMETER_OUTSIDE(DEVICELAYER,PIN)/(2*AA)
				}
				W=NF*W
				//L=(L-SD*AA)/NF
				L=AREA(AUX1)/W
				IN_D=PERIMETER_INSIDE(D,AUX3)
				IN_S=PERIMETER_INSIDE(S,AUX3)
				IF(IN_S==0){
					AD=AREA(D)*W/IN_D
					PD=PERIMETER(D)*W/IN_D
					AS=AD
					PS=PD
				}
				ELSE{
					IF(IN_D==0){
						AS=AREA(S)* W/IN_S
						PS=PERIMETER(S)* W/IN_S
						AD=AS
						PD=PS
					}
					Else{
						AD=AREA(D)*W/IN_D
						PD=PERIMETER(D)*W/IN_D
						AS=AREA(S)*W/IN_S
						PS=PERIMETER(S)*W/IN_S
					}
				}
			]
			}
		#ELSE
			DMACRO MOSLOD DEVICELAYER PIN AUX1 AUX2 AUX3{
			[
				Property W,L//,NF
				NF=COUNT(AUX1)
				W=PERIMETER_COINCIDE(DEVICELAYER,PIN)/2
				L=AREA(DEVICELAYER)/W
				W=NF*W
				L=AREA(AUX1)/W
			]
			}
		#ENDIF
	#ENDIF
#ENDIF

/////////////////////////
// INPUT LAYER STATEMENTS
/////////////////////////
DRC:1 = EXTENT
BULK = SIZE DRC:1 BY 1.0

LAYER MAP	1	DATATYPE	0	1001
LAYER DIFF	1001			//Diffusion
LAYER MAP	2	DATATYPE	0	1002
LAYER PWEL	1002			//P-well
LAYER MAP	3	DATATYPE	0	1003
LAYER NWEL	1003			//N-well
LAYER MAP	6	DATATYPE	0	1004
LAYER TWEL	1004			//T-well for Triple Well Process
LAYER MAP	6	DATATYPE	71	1005
LAYER T3	1005			//Alternative way to design triple well
LAYER MAP	7	DATATYPE	36	1006
LAYER NATIVE	1006			//1.0V and 2.5V native NMOS
LAYER MAP	11	DATATYPE	0	1007
LAYER PPLUS	1007			//P+implant
LAYER MAP	12	DATATYPE	0	1008
LAYER NPLUS	1008			//N+implant
LAYER MAP	13	DATATYPE	0	1009
LAYER VTP	1009			//SP PMOS
LAYER MAP	14	DATATYPE	0	1010
LAYER VTN	1010			//SP NMOS
LAYER MAP	15	DATATYPE	0	1011
LAYER VTPH	1011			//SP_HVT PMOS
LAYER MAP	15	DATATYPE	71	1012
LAYER HVNLDD	1012			//2.5V NMOS and NATIVE NMOS
LAYER MAP	16	DATATYPE	0	1013
LAYER VTNH	1013			//SP_HVT NMOS
LAYER MAP	16	DATATYPE	71	1014
LAYER LVPLDD	1014			//SP,SP_HVT, LL and LL_HVT PMOS
LAYER MAP	17	DATATYPE	0	1015
LAYER PMINUS	1015			//2.5V PMOS
LAYER MAP	17	DATATYPE	71	1016
LAYER LVNLDD	1016			//SP,SP_HVT, LL and LL_HVT NMOS
LAYER MAP	18	DATATYPE	0	1017
LAYER NMINUS	1017			//2.5V NMOS
LAYER MAP	19	DATATYPE	71	1018
LAYER LL_HVT	1018			//LL_HVT device
LAYER MAP	20	DATATYPE	0	1019
LAYER VTPL	1019			//Low Vt PMOS
LAYER MAP	20	DATATYPE	71	1020
LAYER BIPOLAR	1020			//Emitter Mark Layer of bipolar
LAYER MAP	21	DATATYPE	71	1021
LAYER NCAP	1021			//NMOS Capacitor mark layer 
LAYER MAP	22	DATATYPE	0	1022
LAYER VTNL	1022			//Low Vt NMOS; Thick gate Zero Vt NMOS
LAYER MAP	22	DATATYPE	71	1023
LAYER MOAT	1023			//To reduce the coupling of substrate noise
LAYER MAP	23	DATATYPE	71	1024
LAYER VTN_LLL	1024			//LLLVT NMOS Vt implant
LAYER MAP	24	DATATYPE	71	1025
LAYER VTP_LLL	1025			//LLLVT PMOS Vt implant
LAYER MAP	25	DATATYPE	0	1026
LAYER CELL_VTN	1026			//For L90G SRAM cell VtN
LAYER MAP	25	DATATYPE	71	1027
LAYER VTN_LL	1027			//LL NMOS Vt implant
LAYER MAP	26	DATATYPE	71	1028
LAYER VTP_LL	1028			//LL PMOS Vt implant
LAYER MAP	27	DATATYPE	71	1029
LAYER VTN_LLH	1029			//LLHVT NMOS Vt implant
LAYER MAP	28	DATATYPE	71	1030
LAYER VTP_LLH	1030			//LLHVT PMOS Vt implant
LAYER MAP	29	DATATYPE	0	1031
LAYER NPOLY	1031			//N+ Poly implant
LAYER MAP	29	DATATYPE	71	1032
LAYER SPLVT	1032			//SP_LVT device
LAYER MAP	30	DATATYPE	71	1033
LAYER SP	1033			//SP device
LAYER MAP	31	DATATYPE	71	1034
LAYER LLLVT	1034			//LL_LVT device
LAYER MAP	32	DATATYPE	0	1035
LAYER PESD	1035			//P- ESD implant for ESD protection device
LAYER MAP	34	DATATYPE	1	1036
LAYER DTDMBK	1036			//DT Dummy Block
LAYER MAP	35	DATATYPE	0	1037
LAYER MG	1037			//Intermediate gate oxide
LAYER MAP	36	DATATYPE	0	1038
LAYER SAB	1038			//Salicide block on either selected N+ diffusion region or P+ poly region
LAYER MAP	36	DATATYPE	71	1039
LAYER SBLK	1039			//Salicide block layer for ESD device
LAYER MAP	37	DATATYPE	0	1040
LAYER TG	1040			//Thick gate oxide
LAYER MAP	38	DATATYPE	0	1041
LAYER HR	1041			//High ohmic P poly resistor
LAYER MAP	39	DATATYPE	0	1042
LAYER CONT	1042			//Contact
LAYER MAP	39	DATATYPE	3	1043
LAYER CONTBAR	1043			//Contact BAR
LAYER MAP	40	DATATYPE	0	1044
LAYER NWR	1044			//N-well resistor
LAYER MAP	41	DATATYPE	0	1045
LAYER PO1	1045			//Poly1
LAYER MAP	41	DATATYPE	3	1046
LAYER PO1BAR	1046			//Poly1 BAR
LAYER MAP	46	DATATYPE	0	1047
LAYER ME1	1047			//Metal1
LAYER MAP	47	DATATYPE	0	1048
LAYER VI1	1048			//Mvia1
LAYER MAP	47	DATATYPE	3	1049
LAYER VI1BAR	1049			//Mvia1 BAR
LAYER MAP	48	DATATYPE	0	1050
LAYER ME2	1050			//Metal2
LAYER MAP	49	DATATYPE	0	1051
LAYER VI2	1051			//Mvia2
LAYER MAP	49	DATATYPE	3	1052
LAYER VI2BAR	1052			//Mvia2 BAR
LAYER MAP	50	DATATYPE	0	1053
LAYER ME3	1053			//Metal3
LAYER MAP	51	DATATYPE	0	1054
LAYER VI3	1054			//Mvia3
LAYER MAP	51	DATATYPE	3	1055
LAYER VI3BAR	1055			//MVIA3 BAR
LAYER MAP	52	DATATYPE	0	1056
LAYER ME4	1056			//Metal4
LAYER MAP	53	DATATYPE	0	1057
LAYER VI4	1057			//Mvia4
LAYER MAP	53	DATATYPE	3	1058
LAYER VI4BAR	1058			//Mvia4 BAR
LAYER MAP	54	DATATYPE	0	1059
LAYER ME5	1059			//Metal5
LAYER MAP	55	DATATYPE	0	1060
LAYER VI5	1060			//Mvia5
LAYER MAP	55	DATATYPE	3	1061
LAYER VI5BAR	1061			//Mvia5 BAR
LAYER MAP	56	DATATYPE	0	1062
LAYER ME6	1062			//Metal6
LAYER MAP	57	DATATYPE	0	1063
LAYER VI6	1063			//Mvia6
LAYER MAP	57	DATATYPE	3	1064
LAYER VI6BAR	1064			//Mvia6 BAR
LAYER MAP	58	DATATYPE	0	1065
LAYER ME7	1065			//Metal7
LAYER MAP	59	DATATYPE	0	1066
LAYER VI7	1066			//Mvia7
LAYER MAP	59	DATATYPE	3	1067
LAYER VI7BAR	1067			//Mvia7 BAR
LAYER MAP	60	DATATYPE	0	1068
LAYER ME8	1068			//Metal8
LAYER MAP	61	DATATYPE	0	1069
LAYER VI8	1069			//Mvia8
LAYER MAP	61	DATATYPE	3	1070
LAYER VI8BAR	1070			//Mvia8 BAR
LAYER MAP	62	DATATYPE	0	1071
LAYER ME9	1071			//Metal9
LAYER MAP	62	DATATYPE	19	1072
LAYER XOPCM9	1072			//Metal9_OPC_Block
LAYER MAP	63	DATATYPE	63	1073
LAYER IPWM	1073			//IP Water Mark
LAYER MAP	64	DATATYPE	0	1074
LAYER MMCBP	1074			//Bottom plate of MMC
LAYER MAP	65	DATATYPE	0	1075
LAYER MMCTP	1075			//Top plate of MMC
LAYER MAP	65	DATATYPE	110	1076
LAYER XOPCPPLUS	1076			//Pplus_OPC_Block
LAYER MAP	66	DATATYPE	0	1077
LAYER TMV_RDL	1077			//Terminal AL VIA
LAYER MAP	66	DATATYPE	3	1078
LAYER TMVBAR	1078			//Terminal AL VIA BAR
LAYER MAP	66	DATATYPE	110	1079
LAYER XOPCNPLUS	1079			//Nplus_OPC_Block
LAYER MAP	66	DATATYPE	12	1080
LAYER L1_MCAP	1080			//L1 for MIMCAP (M8 through L2 with no DC current) 
LAYER MAP	66	DATATYPE	13	1081
LAYER L1_ROUT	1081			//L1 for M8 through L2 with DC current (non-MIMCap) 
LAYER MAP	67	DATATYPE	0	1082
LAYER AL_RDL	1082			//Al pad
LAYER MAP	67	DATATYPE	9	1083
LAYER L2SLOT	1083			//The layer is drawn in Al-metals for L2 mask boolean and DRC checking.
LAYER MAP	68	DATATYPE	0	1084
LAYER PASV_RDL	1084			//Al pad window
LAYER MAP	69	DATATYPE	0	1085
LAYER AL_FUSE_PAD	1085			//Al Fuse Pad
LAYER MAP	70	DATATYPE	1	1086
LAYER DIFDMBK	1086			//Diffusion Dummy Block
LAYER MAP	70	DATATYPE	8	1087
LAYER DIFFDUMY	1087			//Diffusion dummy creation by customer
LAYER MAP	70	DATATYPE	0	1088
LAYER XOPCD	1088			//Diffusion_OPC_Block
LAYER MAP	71	DATATYPE	1	1089
LAYER PLYDMBK	1089			//Poly Dummy Block
LAYER MAP	71	DATATYPE	8	1090
LAYER PO1DUMY	1090			//POLY1 dummy creation by customer
LAYER MAP	71	DATATYPE	0	1091
LAYER XOPCP	1091			//Poly_OPC_Block
LAYER MAP	72	DATATYPE	1	1092
LAYER M1DMBK	1092			//Metal1 Dummy Block
LAYER MAP	72	DATATYPE	2	1093
LAYER M1SLBK	1093			//Meta1 Slot Block
LAYER MAP	72	DATATYPE	8	1094
LAYER M1DUMY	1094			//Metal1 dummy creation by customer
LAYER MAP	72	DATATYPE	9	1095
LAYER M1SLOT	1095			//Meta1 slot creation by customer
LAYER MAP	72	DATATYPE	0	1096
LAYER XOPCM1	1096			//Metal1_OPC_Block
LAYER MAP	72	DATATYPE	19	1097
LAYER XOPCV1	1097			//Mvia1_OPC_Block
LAYER MAP	73	DATATYPE	1	1098
LAYER M2DMBK	1098			//Metal2 Dummy Block
LAYER MAP	73	DATATYPE	2	1099
LAYER M2SLBK	1099			//Meta2 Slot Block
LAYER MAP	73	DATATYPE	8	1100
LAYER M2DUMY	1100			//Metal2 dummy creation by customer
LAYER MAP	73	DATATYPE	9	1101
LAYER M2SLOT	1101			//Meta2 slot creation by customer
LAYER MAP	73	DATATYPE	0	1102
LAYER XOPCM2	1102			//Metal2_OPC_Block
LAYER MAP	73	DATATYPE	19	1103
LAYER XOPCV2	1103			//Mvia2_OPC_Block
LAYER MAP	74	DATATYPE	1	1104
LAYER M3DMBK	1104			//Meatl3 Dummy Block
LAYER MAP	74	DATATYPE	2	1105
LAYER M3SLBK	1105			//Meta3 Slot Block
LAYER MAP	74	DATATYPE	8	1106
LAYER M3DUMY	1106			//Metal3 dummy creation by customer
LAYER MAP	74	DATATYPE	9	1107
LAYER M3SLOT	1107			//Meta3 slot creation by customer
LAYER MAP	74	DATATYPE	0	1108
LAYER XOPCM3	1108			//Metal3_OPC_Block
LAYER MAP	74	DATATYPE	19	1109
LAYER XOPCV3	1109			//Mvia3_OPC_Block
LAYER MAP	75	DATATYPE	1	1110
LAYER M4DMBK	1110			//Meatl4 Dummy Block
LAYER MAP	75	DATATYPE	2	1111
LAYER M4SLBK	1111			//Meta4 Slot Block
LAYER MAP	75	DATATYPE	8	1112
LAYER M4DUMY	1112			//Metal4 dummy creation by customer
LAYER MAP	75	DATATYPE	9	1113
LAYER M4SLOT	1113			//Meta4 slot creation by customer
LAYER MAP	75	DATATYPE	0	1114
LAYER XOPCM4	1114			//Metal4_OPC_Block
LAYER MAP	75	DATATYPE	19	1115
LAYER XOPCV4	1115			//Mvia4_OPC_Block
LAYER MAP	76	DATATYPE	1	1116
LAYER M5DMBK	1116			//Meatl5 Dummy Block
LAYER MAP	76	DATATYPE	2	1117
LAYER M5SLBK	1117			//Meta5 Slot Block
LAYER MAP	76	DATATYPE	8	1118
LAYER M5DUMY	1118			//Metal5 dummy creation by customer
LAYER MAP	76	DATATYPE	9	1119
LAYER M5SLOT	1119			//Meta5 slot creation by customer
LAYER MAP	76	DATATYPE	0	1120
LAYER XOPCM5	1120			//Metal5_OPC_Block
LAYER MAP	76	DATATYPE	19	1121
LAYER XOPCV5	1121			//Mvia5_OPC_Block
LAYER MAP	77	DATATYPE	1	1122
LAYER M6DMBK	1122			//Metal6 Dummy Block
LAYER MAP	77	DATATYPE	2	1123
LAYER M6SLBK	1123			//Meta6 Slot Block
LAYER MAP	77	DATATYPE	8	1124
LAYER M6DUMY	1124			//Metal6 dummy creation by customer
LAYER MAP	77	DATATYPE	9	1125
LAYER M6SLOT	1125			//Meta6 slot creation by customer
LAYER MAP	77	DATATYPE	0	1126
LAYER XOPCM6	1126			//Metal6_OPC_Block
LAYER MAP	77	DATATYPE	19	1127
LAYER XOPCV6	1127			//Mvia6_OPC_Block
LAYER MAP	78	DATATYPE	1	1128
LAYER M7DMBK	1128			//Meatl7 Dummy Block
LAYER MAP	78	DATATYPE	2	1129
LAYER M7SLBK	1129			//Meta7 Slot Block
LAYER MAP	78	DATATYPE	8	1130
LAYER M7DUMY	1130			//Metal7 dummy creation by customer
LAYER MAP	78	DATATYPE	9	1131
LAYER M7SLOT	1131			//Meta7 slot creation by customer
LAYER MAP	78	DATATYPE	0	1132
LAYER XOPCM7	1132			//Metal7_OPC_Block
LAYER MAP	78	DATATYPE	19	1133
LAYER XOPCV7	1133			//Mvia7_OPC_Block
LAYER MAP	79	DATATYPE	1	1134
LAYER M8DMBK	1134			//Meatl8 Dummy Block
LAYER MAP	79	DATATYPE	2	1135
LAYER M8SLBK	1135			//Meta8 Slot Block
LAYER MAP	79	DATATYPE	8	1136
LAYER M8DUMY	1136			//Metal8 dummy creation by customer
LAYER MAP	79	DATATYPE	9	1137
LAYER M8SLOT	1137			//Meta8 slot creation by customer
LAYER MAP	79	DATATYPE	0	1138
LAYER XOPCM8	1138			//Metal8_OPC_Block
LAYER MAP	79	DATATYPE	19	1139
LAYER XOPCV8	1139			//Mvia8_OPC_Block
LAYER MAP	80	DATATYPE	1	1140
LAYER M9DMBK	1140			//Meatl9 Dummy Block
LAYER MAP	80	DATATYPE	2	1141
LAYER M9SLBK	1141			//Meta9 Slot Block
LAYER MAP	80	DATATYPE	8	1142
LAYER M9DUMY	1142			//Metal9 dummy creation by customer
LAYER MAP	80	DATATYPE	9	1143
LAYER M9SLOT	1143			//Metal9 slot creation by customer
LAYER MAP	80	DATATYPE	0	1144
LAYER XOPCC	1144			//Contact_OPC_Block
LAYER MAP	81	DATATYPE	0	1145
LAYER RSYMBOL	1145			//Diffusion Resistor Marker 
LAYER MAP	82	DATATYPE	0	1146
LAYER PSYMBOL	1146			//Poly-Resistor Marker 
LAYER MAP	85	DATATYPE	0	1147
LAYER GTEXT	1147			//Generic LVS text 
LAYER MAP	100	TEXTTYPE	0	1148
LAYER PO_TEXT	1148			//Poly text 
LAYER MAP	101	TEXTTYPE	0	1149
LAYER M1_TEXT	1149			//Metal1 text 
LAYER MAP	102	TEXTTYPE	0	1150
LAYER M2_TEXT	1150			//Metal2 text 
LAYER MAP	103	TEXTTYPE	0	1151
LAYER M3_TEXT	1151			//Metal3 text 
LAYER MAP	104	TEXTTYPE	0	1152
LAYER M4_TEXT	1152			//Metal4 text 
LAYER MAP	105	TEXTTYPE	0	1153
LAYER M5_TEXT	1153			//Metal5 text 
LAYER MAP	106	TEXTTYPE	0	1154
LAYER M6_TEXT	1154			//Metal6 text 
LAYER MAP	107	TEXTTYPE	0	1155
LAYER M7_TEXT	1155			//Metal7 text 
LAYER MAP	108	TEXTTYPE	0	1156
LAYER M8_TEXT	1156			//Metal8 text 
LAYER MAP	109	TEXTTYPE	0	1157
LAYER M9_TEXT	1157			//Metal9 text
LAYER MAP	85	TEXTTYPE	20	1158
LAYER AL_TEXT	1158			//Al-fuse pad text
LAYER MAP	86	DATATYPE	71	1159
LAYER 18VIO	1159			//1.8V IO device
LAYER MAP	86	DATATYPE	36	1160
LAYER SEALRMARK	1160			//SEALRMARK
LAYER MAP	87	DATATYPE	71	1161
LAYER 33VIO	1161			//3.3V IO device
LAYER MAP	87	DATATYPE	0	1162
LAYER IOMARK	1162			//I/O area marker
LAYER MAP	88	DATATYPE	0	1163
LAYER FUSEMARK	1163			//FUSEMARK is used for DRC purpose and Metal dummy excluding.
LAYER MAP	89	DATATYPE	0	1164
LAYER FLPMARK	1164			//Flip Chip Area Marker (Array PAD) 
LAYER MAP	89	DATATYPE	36	1165
LAYER FLPMARKP	1165			//Flip Chip Area Marker (Peripheral PAD) 
LAYER MAP	90	DATATYPE	0	1166
LAYER PADMARK	1166			//PAD area mark layer 
LAYER MAP	91	DATATYPE	0	1167
LAYER IOID	1167			//Marker for ESD protection devices 
LAYER MAP	91	DATATYPE	1	1168
LAYER LOGOMK	1168			//Mark layer for Logo
LAYER MAP	94	DATATYPE	20	1169
LAYER DP_1	1169			//Cell size: 2.40um2 SPHVT SRAM Mark Layer
LAYER MAP	94	DATATYPE	0	1170
LAYER DPHD_1	1170			//Dual Port High Density
LAYER MAP	94	DATATYPE	22	1171
LAYER DPHD_2	1171			//Dual Port High Density
LAYER MAP	94	DATATYPE	51	1172
LAYER DPHD_3	1172			//Dual Port High Density
LAYER MAP	95	DATATYPE	20	1173
LAYER SP_2	1173			//Cell size: 1.26um2 SPHVT SRAM Mark Layer
LAYER MAP	95	DATATYPE	23	1174
LAYER SP_1	1174			//Cell size: 1.26um2 LLHVT SRAM Mark Layer
LAYER MAP	95	DATATYPE	0	1175
LAYER SPHD_1	1175			//Single Port High Density
LAYER MAP	96	DATATYPE	0	1176
LAYER XDIODE	1176			//Ignore Diode Device Marker layer 
LAYER MAP	99	DATATYPE	0	1177
LAYER SEPGND	1177			//Separate Ground Marker
LAYER MAP	111	DATATYPE	30	1178
LAYER MRSYMBOL	1178			//Metal Resistor Marker layer
LAYER MAP	111	DATATYPE	33	1179
LAYER SIZE1	1179			//Mark layer for device mapping 
LAYER MAP	111	DATATYPE	34	1180
LAYER SIZE10	1180			//Mark layer for device mapping 
LAYER MAP	112	DATATYPE	30	1181
LAYER CSYMBOL	1181			//Capacitor Marker layer
LAYER MAP	112	DATATYPE	33	1182
LAYER SIZE2	1182			//Mark layer for device mapping 
LAYER MAP	112	DATATYPE	34	1183
LAYER SIZE11	1183			//Mark layer for device mapping 
LAYER MAP	113	DATATYPE	30	1184
LAYER BJTSYMBOL	1184			//BJT Bipolar Transistor Marker layer
LAYER MAP	113	DATATYPE	33	1185
LAYER SIZE3	1185			//Mark layer for device mapping 
LAYER MAP	113	DATATYPE	34	1186
LAYER SIZE12	1186			//Mark layer for device mapping 
LAYER MAP	114	DATATYPE	30	1187
LAYER DSYMBOL	1187			//Diode Marker layer
LAYER MAP	114	DATATYPE	33	1188
LAYER SIZE4	1188			//Mark layer for device mapping 
LAYER MAP	114	DATATYPE	34	1189
LAYER SIZE13	1189			//Mark layer for device mapping 
LAYER MAP	115	DATATYPE	30	1190
LAYER DIOBLK	1190			//DRC Diode block layer
LAYER MAP	115	DATATYPE	33	1191
LAYER SIZE5	1191			//Mark layer for device mapping 
LAYER MAP	115	DATATYPE	34	1192
LAYER SIZE14	1192			//Mark layer for device mapping 
LAYER MAP	116	DATATYPE	33	1193
LAYER SIZE6	1193			//Mark layer for device mapping 
LAYER MAP	116	DATATYPE	34	1194
LAYER SIZE15	1194			//Mark layer for device mapping 
LAYER MAP	117	DATATYPE	36	1195
LAYER IND	1195			//Metal dummy block Layer for Inductor (Inductor Mark Layer)
LAYER MAP	117	DATATYPE	30	1196
LAYER LSYMBOL	1196			//Inductor Marker layer
LAYER MAP	117	DATATYPE	33	1197
LAYER SIZE7	1197			//Mark layer for device mapping 
LAYER MAP	117	DATATYPE	34	1198
LAYER SIZE16	1198			//Mark layer for device mapping 
LAYER MAP	118	DATATYPE	30	1199
LAYER MMSYMBOL	1199			//Mixed Mode Device Marker layer
LAYER MAP	118	DATATYPE	33	1200
LAYER SIZE8	1200			//Mark layer for device mapping 
LAYER MAP	119	DATATYPE	30	1201
LAYER RFSYMBOL	1201			//RF Device Marker layer
LAYER MAP	119	DATATYPE	31	1202
LAYER RFMOS_S	1202			//RF MOS source
LAYER MAP	119	DATATYPE	32	1203
LAYER F_MOS	1203			//Mark Layer for Field MOS
LAYER MAP	119	DATATYPE	33	1204
LAYER SIZE9	1204			//Mark layer for device mapping 
LAYER MAP	120	DATATYPE	0	1205
LAYER ACL	1205			//ARM Core Marker
LAYER MAP	121	DATATYPE	0	1206
LAYER PHL	1206			//Phantom Marker for Arm core
LAYER MAP	122	DATATYPE	30	1207
LAYER PIXELMK	1207			//Pixel Array Mark layer
LAYER MAP	123	DATATYPE	30	1208
LAYER DECODER	1208			//Decoder Mark layer
LAYER MAP	7	DATATYPE	1	1209
LAYER DIMPBK	1209			//Block layer for VT and Idd implant of diode of 90nm 
LAYER MAP	95	DATATYPE	21	1210
LAYER SP_3G	1210			//L90G Cell size: 1.16um2 RVT 6TSRAM Mark Layer
LAYER MAP	95	DATATYPE	25	1212
LAYER SP_5	1212			//L90 Cell size: 1.16um2 SPHVT 6TSRAM Mark Layer
LAYER MAP	95	DATATYPE	26	1213
LAYER SP_6	1213			//L90 Cell size: 1.16um2 LLHVT 6TSRAM Mark Layer
LAYER MAP	95	DATATYPE	27	1214
LAYER SP_7	1214			//L90 Cell size: 0.99um2 SPHVT 6TSRAM Mark Layer
LAYER MAP	95	DATATYPE	28	1215
LAYER SP_8	1215			//L90G Cell size: 0.99um2 RVT 6TSRAM Mark Layer
LAYER MAP	94	DATATYPE	21	1216
LAYER DP_2	1216			//L90 Cell size: 2.40um2 LLHVT 8TSRAM Mark Layer
LAYER MAP	94	DATATYPE	52	1221
LAYER DP_7	1221			//L90G Cell size: 2.27um2 RVT 8TSRAM Mark Layer
LAYER MAP	2	DATATYPE	1	1222
LAYER LL_PW	1222			//P-well Imp in SRAM cell array area
LAYER MAP	3	DATATYPE	1	1223
LAYER LL_NW	1223			//N-well Imp in SRAM cell array area
LAYER MAP	86	DATATYPE	1	1224
LAYER M1RESMK	1224			//Metal1 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	2	1225
LAYER M2RESMK	1225			//Metal2 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	3	1226
LAYER M3RESMK	1226			//Metal3 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	4	1227
LAYER M4RESMK	1227			//Metal4 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	5	1228
LAYER M5RESMK	1228			//Metal5 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	6	1229
LAYER M6RESMK	1229			//Metal6 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	7	1230
LAYER M7RESMK	1230			//Metal7 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	8	1231
LAYER M8RESMK	1231			//Metal8 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	9	1232
LAYER M9RESMK	1232			//Metal9 Resistor Marker Layer 
LAYER MAP	86	DATATYPE	10	1233
LAYER M10RESMK	1233			//Metal10 Resistor Marker Layer 
LAYER MAP	67	DATATYPE	2	1234
LAYER ALRESMK	1234			//AL_RDL Resistor Marker Layer 
LAYER MAP	95	DATATYPE	31	1235
LAYER SP_3GS	1235			//L90GS Cell size: 1.16um2 RVT 6TSRAM Mark Layer
LAYER MAP	94	DATATYPE	38	1236
LAYER DP_7GS	1236			//L90GS Cell size: 2.27um2 RVT 8TSRAM Mark Layer
LAYER MAP	95	DATATYPE	38	1237
LAYER SP_8GS	1237			//L90GS Cell size: 0.99um2 RVT 6TSRAM 
LAYER MAP	69	DATATYPE	1	1238
LAYER CU_FUSE_PAD	1238		//CU Fuse Pad
LAYER MAP	43	DATATYPE	1	1239
LAYER MISIMPBK	1239			//MIS Varactor implant block
LAYER MAP	95	DATATYPE	29	1240
LAYER SP_9	1240			//L90N Cell size: 0.99um2 LLHVT 6TSRAM Mark Layer
LAYER MAP	34	DATATYPE	5	1242
LAYER DT	1242			//DT
LAYER MAP	6	DATATYPE	26	1243
LAYER AW	1243			//AW
LAYER MAP	3	DATATYPE	26	1244
LAYER NW_EDA	1244			//NW_EDA 
LAYER MAP	90	DATATYPE	1	1245
LAYER BOACMK	1245			//BOAC MARK
LAYER MAP	85	DATATYPE	71	1246
LAYER GOX523P3VIMPMK	1246		//3.3V GOX52 Device Mark layer
LAYER MAP	84	DATATYPE	71	1247
LAYER GOX521P8VMK 1247			//1.8V GOX52 Device Mark layer
LAYER MAP	94	DATATYPE	28	1248
LAYER DP_10	1248			//L90N Cell size: 2.08um2 SPHVT 8TSRAM Mark Layer
LAYER MAP	95	DATATYPE	32	1249
LAYER SP_10GS	1249			//L90GS Cell size: 0.81um2 GRVT 6TSRAM Mark Layer
LAYER MAP	95	DATATYPE	22	1250
LAYER SP_10	1250			//L90G Cell size: 0.99um2 RVT 6TSRAM Mark Layer
LAYER MAP	17	DATATYPE	1	1251
LAYER HVPLDD	1251			//high voltage PLDD
LAYER MAP	44	DATATYPE	1	1252
LAYER PPORES	1252			//For generating higher P+ Poly un-salicided resistor 
LAYER MAP	69	DATATYPE	3	1253
LAYER EFUSEIMPBK	1253		//EFUSE mark layer to block Vt and LDD imp
LAYER MAP	91	DATATYPE	2	1254
LAYER RVT80GSMK	1254			//This NTL is for usage of all SRAMs with L80G process 
LAYER MAP	17	DATATYPE	8	1255
LAYER PMINUSDUMY	1255		//Customer dummy 
LAYER MAP	19	DATATYPE	8	1256
LAYER NMINUSDUMY	1256		//Customer dummy
LAYER MAP	55	DATATYPE	8	1257
LAYER VI5DUMY	1257			//Mvia5 dummy creation by customer
LAYER MAP	57	DATATYPE	8	1258
LAYER VI6DUMY	1258			//Mvia6 dummy creation by customer 
LAYER MAP	11	DATATYPE	110	1259
LAYER XOPCPPLUSIO	1259		//P+_IO_OPC_BLOCK 
LAYER MAP	13	DATATYPE	110	1260
LAYER XOPCLVNLDD	1260		//LV_NLDD_OPC_BLOCK
LAYER MAP	14 DATATYPE	110	1261
LAYER XOPCLVPLDD	1261		//LV_PLDD_OPC_BLOCK
LAYER MAP	15	DATATYPE	110	1262
LAYER XOPCHVNLDD	1262		//HV_NLDD_OPC_BLOCK
LAYER MAP	16 DATATYPE	110	1263
LAYER XOPCHVPLDD	1263		//HV_PLDD_OPC_BLOCK
LAYER MAP	17 DATATYPE	110	1264
LAYER XOPCPMINUS	1264		//P-_OPC_Block
LAYER MAP	18 DATATYPE	110	1265
LAYER XOPCNMINUS	1265		//N-_OPC_Block
LAYER MAP	25 DATATYPE	110	1266
LAYER XOPCCELLVTN	1266		//CELL_VTN_OPC_BLOCK
LAYER MAP	29 DATATYPE	110	1267
LAYER XOPCNPOLY	1267			//N+_POLY_IMP_OPC_BLOCK
LAYER MAP	34 DATATYPE	110	1268
LAYER XOPCDT	1268			//OPC block layer for DT mask layer of 90nm e-DRAM
LAYER MAP	35 DATATYPE	110	1269
LAYER XOPCVTPH	1269			//VTPH_OPC_BLOCK
LAYER MAP	36 DATATYPE	110	1270
LAYER XOPCVTNH	1270			//VTNH_OPC_BLOCK
LAYER MAP	44 DATATYPE	110	1271
LAYER XOPCPPORES	1271		//P+_POLY_RESISTOR_OPC_BLOCK
LAYER MAP	90	DATATYPE	2	1272
LAYER FILLERBK	1272			//For un-filler region definition of BOAC process application
LAYER MAP	90	DATATYPE	3	1273
LAYER RFPADMK	1273			//RF_PAD area mark layer 
LAYER MAP	90	DATATYPE	4	1274
LAYER RFMMCMK	1274			//MMC area of RF mark layer 
LAYER MAP	86	DATATYPE	21	1275
LAYER MOMSYM	1275			//Metal Over Metal Capacitor Marker layer 
LAYER MAP	95	DATATYPE	5	1276
LAYER SP_11	1276			//Cell size: 0.99um2 SPHVT 6TSRAM Mark Layer (L90N)
LAYER MAP	95	DATATYPE	2	1277
LAYER SP_12	1277			//Cell size: 0.99um2 LLHVT 6TSRAM Mark Layer (L90N)
LAYER MAP	94	DATATYPE	10	1278
LAYER DP_8GS	1278			//Cell size: 1.69um2 GRVT 8TSRAM Mark Layer (L90GS)
LAYER MAP	94	DATATYPE	11	1279
LAYER DP_9GS	1279			//Cell size: 1.61um2 GRVT 8TSRAM Mark Layer (L90GS)
LAYER MAP	94	DATATYPE	27	1280
LAYER DP_9	1280			//Cell size: 1.994um2 RVT 8TSRAM Mark Layer (L90G)
LAYER MAP	94	DATATYPE	29	1281
LAYER DP_11	1281			//Cell size: 2.08um2 LLHVT 8TSRAM Mark Layer (L90N)
LAYER MAP	94	DATATYPE	61	1282
LAYER DP_12	1282			//Cell size: 2.08um2 RVT 8TSRAM Mark Layer (L90G)
LAYER MAP	94	DATATYPE	62	1283
LAYER DP_13	1283			//Cell size: 1.994um2 SPHVT 8TSRAM Mark Layer (L90N)
LAYER MAP	94	DATATYPE	63	1284
LAYER DP_14	1284			//Cell size: 1.994um2 LLHVT 8TSRAM Mark Layer (L90N)
LAYER MAP	86	DATATYPE	20	1285
LAYER SDSYM	1285			//Poly Tap resistor text 
LAYER MAP	94	DATATYPE	26	1286
LAYER DP_6	1286			//Cell size: 1.994um2 RVT 8TSRAM Mark Layer (L90G)

LAYER MAP 85 TEXTTYPE 24 1287
LAYER PO_RES_TEXT 1287

ATTACH PO_TEXT PLY_C
ATTACH M1_TEXT ME1_C
ATTACH M2_TEXT ME2_C
ATTACH M3_TEXT ME3_C
ATTACH AL_TEXT AL_RDL_C
ATTACH PO_TEXT PLY_I
ATTACH M1_TEXT ME1_I
ATTACH M2_TEXT ME2_I
ATTACH M3_TEXT ME3_I
ATTACH AL_TEXT AL_RDL_I

ATTACH M3_TEXT ME3_C_VP3_MMVCL
ATTACH M4_TEXT ME4_C_VP3_MMVCL
ATTACH M5_TEXT ME5_C_VP3_MMVCL

#IFDEF TOP_METAL_ME4_1T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
#ENDIF
#IFDEF TOP_METAL_ME7_2T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
	ATTACH M8_TEXT ME8_C
	ATTACH M8_TEXT ME8_I
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
	ATTACH M8_TEXT ME8_C
	ATTACH M8_TEXT ME8_I
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
	ATTACH M8_TEXT ME8_C
	ATTACH M8_TEXT ME8_I
#ENDIF

#IFDEF TOP_METAL_ME9_2T1F
	ATTACH M4_TEXT ME4_C
	ATTACH M4_TEXT ME4_I
	ATTACH M5_TEXT ME5_C
	ATTACH M5_TEXT ME5_I
	ATTACH M6_TEXT ME6_C
	ATTACH M6_TEXT ME6_I
	ATTACH M7_TEXT ME7_C
	ATTACH M7_TEXT ME7_I
	ATTACH M8_TEXT ME8_C
	ATTACH M8_TEXT ME8_I
	ATTACH M9_TEXT ME9_I
	ATTACH M9_TEXT ME9_C
#ENDIF

PORT LAYER TEXT PO_TEXT M1_TEXT M2_TEXT M3_TEXT M4_TEXT M5_TEXT M6_TEXT M7_TEXT M8_TEXT M9_TEXT AL_TEXT
TEXT LAYER PO_TEXT M1_TEXT M2_TEXT M3_TEXT M4_TEXT M5_TEXT M6_TEXT M7_TEXT M8_TEXT M9_TEXT AL_TEXT

LAYOUT TOP LAYER AL_RDL TMV_RDL ME9 VI8 ME8 VI7 ME7 VI6 ME6 VI5 ME5 VI4 ME4 VI3 ME3 VI2 ME2 VI1 ME1

///////////////////////////////////
// LAYER DERIVATIONS AND OPERATIONS
///////////////////////////////////
NWELL = NWEL NOT TWELL
TWELL_1 = TWEL INSIDE NWEL
TWELL_2 = T3 NOT NWEL
TWELL = TWELL_1 OR TWELL_2

SEPGND_1 = SIZE SEPGND BY 0.01
SEPGND_2 = SEPGND_1 NOT SEPGND
PSUB_1 = BULK NOT NWELL
PSUB_2 = PSUB_1 NOT TWELL
PSUB = PSUB_2 NOT SEPGND_2
//PSUB = BULK NOT ((NWELL OR TWELL) OR SEPGND:2)
#IFDEF RF_WELL_SHARED
	PWELL = PSUB OR N_WELL
#ENDIF

BPDIFF = DIFF AND PPLUS
BNDIFF = DIFF AND NPLUS
BPGATE = BPDIFF AND PO1
BNGATE = BNDIFF AND PO1

RAMCELL_A = SP_1 OR SP_2
RAMCELL_B = RAMCELL_A OR DP_1
RAMCELL_C = RAMCELL_B OR SP_5
RAMCELL_D = RAMCELL_C OR SP_6
RAMCELL_E = RAMCELL_D OR DP_10
RAMCELL_F = RAMCELL_E OR DP_11
RAMCELL_G = RAMCELL_F OR SP_11
RAMCELL_H = RAMCELL_G OR SP_12
RAMCELL = ( ( RAMCELL_H OR SP_7 ) OR DP_13 ) OR DP_14

RAM_PBIT = ((BPGATE AND RAMCELL) INTERACT PSD ==2) AND NWELL
RAM_NBIT = ((BNGATE AND RAMCELL) INTERACT NSD ==2) AND PSUB

//-----------------------
// Define N-well resistor
//-----------------------
WELRES = NWELL AND NWR
WEL = NWELL NOT WELRES 
WELL = NWEL NOT WELRES 

//-----------------------------
// Define P+ diffusion resistor
//-----------------------------
RPD = (BPDIFF AND NWELL) NOT INTERACT PO1
NSPDRES = (RPD AND SAB) INTERACT RSYMBOL
SPDRES = (RPD OUTSIDE SAB) AND RSYMBOL
#IFDEF SBLK_MOS
	PSD	= (BPDIFF NOT (NSPDRES OR SPDRES)) NOT PO1
	PSD_S = PSD INTERACT SBLK
	PSD_NS = PSD NOT INTERACT SBLK
	//PTAP_S = (PSD_S NOT (NWELL OR TWELL)) NOT SEALRMARK
	//PTAP_NS = (PSD_NS NOT (NWELL OR TWELL)) NOT SEALRMARK
	PTAP = (PSD NOT (NWELL OR TWELL)) NOT SEALRMARK
	TTAP	= PSD AND TWELL
#ELSE
	PSD = (BPDIFF NOT (NSPDRES OR SPDRES)) NOT PO1
	PTAP = (PSD NOT (NWELL OR TWELL)) NOT SEALRMARK
	TTAP	= PSD AND TWELL
#ENDIF

PSD_C = PSD NOT RFSYMBOL
PSD_I1 = PSD AND RFSYMBOL

//-----------------------------
// Define N+ diffusion resistor
//-----------------------------
RND = (BNDIFF NOT NWELL) NOT INTERACT PO1
NSNDRES = (RND AND SAB) INTERACT RSYMBOL
SNDRES = (RND OUTSIDE SAB) AND RSYMBOL 
#IFDEF SBLK_MOS
	NSD = (BNDIFF NOT (NSNDRES OR SNDRES)) NOT PO1
	NSD_NS = ((BNDIFF NOT (NSNDRES OR SNDRES)) NOT PO1) NOT INTERACT SBLK
	NSD_S = ((BNDIFF NOT (NSNDRES OR SNDRES)) NOT PO1) INTERACT SBLK
	NTAP = NSD AND WEL
	//NTAP_S = NSD_S AND WEL
	//NTAP_NS = NSD_NS AND WEL

#ELSE
	NSD = (BNDIFF NOT (NSNDRES OR SNDRES)) NOT PO1
	NTAP = NSD AND WEL
#ENDIF

NSD_C = NSD NOT RFSYMBOL
NSD_I1 = NSD AND RFSYMBOL

NNBDIF_C = NSD_C TOUCH PSD_C
PPBDIF_C = PSD_C TOUCH NSD_C
NNBDIF_I = NSD_I TOUCH PSD_I
PPBDIF_I = PSD_I TOUCH NSD_I
NPBDIF = (NNBDIF_C OR NNBDIF_I )OR (PPBDIF_C OR PPBDIF_I)

//-----------------------------
// Define Poly resistor
//-----------------------------
PYRES = PO1 AND PSYMBOL
PPYRES = PYRES AND PPLUS 
NSHRPYR_A = PYRES INTERACT PPLUS
NSHRPYR_B = NSHRPYR_A AND SAB
NSHRPYR = (NSHRPYR_B AND HR) NOT RFSYMBOL // HR Poly RESISTOR
NSHRPYR_RFNW = (((NSHRPYR_B AND HR) AND RFSYMBOL) AND NWELL) NOT TWELL // RF HR Poly RESISTORin NWELL 
//RF_NSHRPYR_RFNW = NWEL ENCLOSE NSHRPYR_RF_A // RF HR Poly RESISTORin NWELL
//NSHRPYR_RF = NSHRPYR_RF_A NOT RF_NSHRPYR_RFNW // RF HR Poly RESISTORin PSUB
NSHRPYR_RF = (((NSHRPYR_B AND HR) AND RFSYMBOL) NOT NWELL) NOT TWELL // RF HR Poly RESISTORin PSUB 

//NSPPYR = (PPYRES AND SAB) NOT INTERACT HR // Non-Salicide P-Poly Resistor 
NSPPYR_all = (PPYRES AND SAB) NOT INTERACT HR // all Non-Salicide P-Poly Resistor
NSPPYR_CS = NSPPYR_all WITH TEXT "CS" PO_RES_TEXT // center segments of RNPPO resistor string
NSPPYR_ES = NSPPYR_all WITH TEXT "ES" PO_RES_TEXT // end segments of RNPPO resistor string
NSPPYR = ((NSPPYR_all NOT NSPPYR_CS) NOT NSPPYR_ES) NOT RFSYMBOL // Non-Salicide P-Poly Resistor
NSPPYR_RFNW = ((((NSPPYR_all NOT NSPPYR_CS) NOT NSPPYR_ES) AND RFSYMBOL) AND NWELL) NOT TWELL // Non-Salicide RF P-Poly Resistor in NWELL 
//RF_NSPPYR_RFNW = NWEL ENCLOSE NSPPYR_RF_A	// Non-Salicide RF P-Poly Resistor in NWELL
//NSPPYR_RF = NSPPYR_RF_A NOT RF_NSPPYR_RFNW	// Non-Salicide RF P-Poly Resistorin PSUB
NSPPYR_RF = ((((NSPPYR_all NOT NSPPYR_CS) NOT NSPPYR_ES) AND RFSYMBOL) NOT NWELL) NOT TWELL // Non-Salicide RF P-Poly Resistorin PSUB

SPPYR_all = (PPYRES NOT SAB) NOT INTERACT HR // Salicide P-type Poly Resistor
SPPYR_A = SPPYR_all WITH TEXT "MNS" PO_RES_TEXT // Customerized Salicide P-type Poly Resistor with Spice model
SPPYR = SPPYR_all NOT SPPYR_A
PO1_MNS = PO1 ENCLOSE SPPYR_A
PLY_X = ((PO1 NOT PYRES) NOT RFSYMBOL ) INTERACT PO1_MNS
CONT_PO1_MNS = CONT AND PO1_MNS
CONT_C = CONT NOT CONT_PO1_MNS
DIF_CONT = CONT_C AND DIFF
PO_CONT = CONT_C NOT DIF_CONT

NPYRES = PYRES AND NPLUS 
NSNPYR = (NPYRES AND SAB) NOT RFSYMBOL	// Non-Salicide N-Poly Resistor 
NSNPYR_RFNW = (((NPYRES AND SAB) AND RFSYMBOL) AND NWELL) NOT TWELL // Non-Salicide RF N-Poly Resistor in NWEL	
//RF_NSNPYR_RFNW = NWELL ENCLOSE NSNPYR_RF_A	// Non-Salicide RF N-Poly Resistor in NWEL
//NSNPYR_RF = NSNPYR_RF_A NOT RF_NSNPYR_RFNW	// Non-Salicide RF N-Poly Resistor in PSUB
NSNPYR_RF = (((NPYRES AND SAB) AND RFSYMBOL) NOT NWELL) NOT TWELL	// Non-Salicide RF N-Poly Resistor in PSUB

SNPYR = NPYRES NOT SAB	// Salicide N-type Poly Resistor

PLY1 = (PO1 NOT INTERACT PYRES) NOT INTERACT DIFF
PLY = PO1 NOT (PYRES OR PLY1)
PLY_I = PLY AND RFSYMBOL
#IFDEF RCFLOW_CCI
	PLY_C = ((((PO1 NOT PYRES) NOT RFSYMBOL) NOT PLY_X) NOT BNGATE) NOT BPGATE
#ELSE
	PLY_C = ((PO1 NOT PYRES) NOT RFSYMBOL) NOT PLY_X
#ENDIF
//------------------------------
// Define P+/N-Well Diode
//------------------------------
PACT = ((PSD AND NWELL) NOT INTERACT TWELL) AND DIMPBK
DPDIOD_1 = PACT NOT INTERACT PO1
DPDIOD_2 = DPDIOD_1 NOT INTERACT RSYMBOL
DPDIOD_3 = DPDIOD_2 NOT INTERACT BIPOLAR
DPDIOD = DPDIOD_3 NOT INTERACT XDIODE

//------------------------------
// Define N+/P-well Diode
//------------------------------
NACT = ((NSD AND PSUB) NOT INTERACT TWELL) AND DIMPBK
DNDIOD_1 = NACT NOT INTERACT PO1
DNDIOD_2 = DNDIOD_1 NOT INTERACT RSYMBOL
DNDIOD_3 = DNDIOD_2 NOT INTERACT BIPOLAR
DNDIOD = DNDIOD_3 NOT INTERACT XDIODE

//------------------------------
// Define N-well/P-sub Diode
//------------------------------
DNWDIOD	= (((WEL INTERACT BNDIFF) NOT INTERACT TWEL) INSIDE DSYMBOL) AND DIMPBK

//------------------------------
// Define Buried T-well/N-Well Diode
//------------------------------
PACTD = (((TWELL INTERACT PSD) AND DSYMBOL) NOT INTERACT DNDIODD) AND DIMPBK
DPDIODD:1 = PACTD NOT INTERACT PO1
DPDIODD:2 = DPDIODD:1 NOT INTERACT RSYMBOL
DPDIODD:3 = DPDIODD:2 NOT INTERACT BIPOLAR
DPDIODD = DPDIODD:3 NOT INTERACT XDIODE

//------------------------------
// Define N+/T-well/NWEL Diode
//------------------------------
NACTD = ((NSD AND TWELL) AND DSYMBOL) AND DIMPBK
DNDIODD:1 = NACTD NOT INTERACT PO1
DNDIODD:2 = DNDIODD:1 NOT INTERACT RSYMBOL
DNDIODD:3 = DNDIODD:2 NOT INTERACT BIPOLAR
DNDIODD = DNDIODD:3 NOT INTERACT XDIODE

//------------------------------
// Define N-well/P-sub Diode
//------------------------------
DNWDIODD = ((((NWEL INTERACT BNDIFF) INTERACT TWELL) AND DSYMBOL) NOT INTERACT (DPDIODD OR DNDIODD)) AND DIMPBK

PACTR = PSD_I AND NWELL
DPDIOD:1R = PACTR NOT INTERACT PO1
DPDIOD:2R = DPDIOD:1R NOT INTERACT RSYMBOL
DPDIOD:3R = DPDIOD:2R NOT INTERACT BIPOLAR

DPDIOD_RF = ((DPDIOD:3R NOT CSYMBOL) AND RFSYMBOL) NOT INTERACT XDIODE
PNVAR = ((DPDIOD:3R AND CSYMBOL) AND RFSYMBOL) NOT INTERACT XDIODE

//-----------------------
// Define MOS Devices
//-----------------------
//LL_HVT must be within MG
BGATE = (PO1 AND DIFF ) NOT RAMCELL

ALL_SP_G = (((BGATE NOT MG) NOT TG) NOT INTERACT NATIVE) NOT RFSYMBOL
SP_G = (ALL_SP_G AND SP) NOT SPLVT
N_SP_G = (SP_G AND NPLUS) AND (PSUB OR TWELL)
//N_SPBPW_G = (SP_G AND NPLUS) AND TWELL
P_SP_G = ((SP_G AND PPLUS) AND WEL) NOT TWELL

SPHVT_G = ALL_SP_G NOT (SP OR SPLVT)
N_SPHVT_G = (SPHVT_G AND NPLUS) AND (PSUB OR TWELL)
//N_SPHVTBPW_G = (SPHVT_G AND NPLUS) AND TWELL
P_SPHVT_G = ((SPHVT_G AND PPLUS) AND WEL) NOT TWELL

SPLVT_G = (ALL_SP_G AND SPLVT) NOT SP
N_SPLVT_G = (SPLVT_G AND NPLUS) AND (PSUB OR TWELL)
//N_SPLVTBPW_G = (SPLVT_G AND NPLUS) AND TWELL
P_SPLVT_G = ((SPLVT_G AND PPLUS) AND WEL) NOT TWELL

ALL_SP_G_RF = (((BGATE NOT MG) NOT TG) NOT INTERACT NATIVE) AND RFSYMBOL
SP_G_RF = (ALL_SP_G_RF AND SP) NOT SPLVT
N_SP_G_RF = ((SP_G_RF AND NPLUS) AND PSUB) NOT PLY_NOSD
N_SPBPW_G_RF = (((SP_G_RF AND NPLUS) AND TWELL) INSIDE NWEL) NOT PLY_NOSD
P_SP_G_RF = (((SP_G_RF AND PPLUS) AND WEL) NOT TWELL) NOT PLY_NOSD

ALL_LL_G = ((((BGATE AND MG) NOT SP) NOT INTERACT NATIVE) NOT TG) NOT RFSYMBOL
LL_G = ALL_LL_G NOT (LL_HVT OR LLLVT)
N_LL_G = (LL_G AND NPLUS) AND (PSUB OR TWELL)
//N_LLBPW_G = (LL_G AND NPLUS) AND TWELL
P_LL_G = ((LL_G AND PPLUS) AND WEL) NOT TWELL

LLHVT_G = (ALL_LL_G AND LL_HVT) NOT LLLVT
N_LLHVT_G = (LLHVT_G AND NPLUS) AND (PSUB OR TWELL)
//N_LLHVTBPW_G = (LLHVT_G AND NPLUS) AND TWELL
P_LLHVT_G = ((LLHVT_G AND PPLUS) AND WEL) NOT TWELL

LLLVT_G = (ALL_LL_G AND LLLVT) NOT LL_HVT
N_LLLVT_G = (LLLVT_G AND NPLUS) AND (PSUB OR TWELL)
//N_LLLVTBPW_G = (LLLVT_G AND NPLUS) AND TWELL
P_LLLVT_G = ((LLLVT_G AND PPLUS) AND WEL) NOT TWELL

ALL_LL_G_RF = ((((BGATE AND MG) NOT SP) NOT INTERACT NATIVE) NOT TG) AND RFSYMBOL
LL_G_RF = ALL_LL_G_RF NOT (LL_HVT OR LLLVT)
N_LL_G_RF = ((LL_G_RF AND NPLUS) AND PSUB) NOT PLY_NOSD
N_LLBPW_G_RF = (((LL_G_RF AND NPLUS) AND TWELL) INSIDE NWEL) NOT PLY_NOSD
P_LL_G_RF = (((LL_G_RF AND PPLUS) AND WEL) NOT TWELL) NOT PLY_NOSD

LLLVT_G_RF = (ALL_LL_G_RF AND LLLVT) NOT LL_HVT
N_LLLVT_G_RF = ((LLLVT_G_RF AND NPLUS) AND PSUB) NOT PLY_NOSD
N_LLLVTBPW_G_RF = (((LLLVT_G_RF AND NPLUS) AND TWELL) INSIDE NWEL) NOT PLY_NOSD
P_LLLVT_G_RF = (((LLLVT_G_RF AND PPLUS) AND WEL) NOT TWELL) NOT PLY_NOSD

#IFDEF SBLK_MOS
	IO_G = (((((BGATE AND TG) NOT SP) NOT INTERACT NATIVE) NOT MG) NOT GOX523P3VIMPMK) NOT RFSYMBOL 
	N_IO_G_1 = (IO_G AND NPLUS) AND (PSUB OR TWELL)
	N_IO_G_SBLK = N_IO_G_1 INTERACT SBLK == 1
	N_IO_G = N_IO_G_1 NOT N_IO_G_SBLK
	//N_IOBPW_G = (IO_G AND NPLUS) AND TWELL
	P_IO_G_1 = ((IO_G AND WEL) AND PPLUS) NOT TWELL
	P_IO_G_SBLK = P_IO_G_1 INTERACT SBLK == 1
	P_IO_G = P_IO_G_1 NOT P_IO_G_SBLK 

	IO_OD_G = (((((BGATE AND TG) NOT SP) NOT INTERACT NATIVE) NOT MG) AND GOX523P3VIMPMK) NOT RFSYMBOL
	N_IO_OD_G_1 = (IO_OD_G AND NPLUS) AND (PSUB OR TWELL) 
	N_IO_OD_G_SBLK = N_IO_OD_G_1 INTERACT SBLK == 1
	N_IO_OD_G	= N_IO_OD_G_1 NOT N_IO_OD_G_SBLK
	//N_IOBPW_OD_G = (IO_OD_G AND NPLUS) AND TWELL
	P_IO_OD_G_1 = ((IO_OD_G AND WEL) AND PPLUS) NOT TWELL
	P_IO_OD_G_SBLK = P_IO_OD_G_1 INTERACT SBLK == 1
	P_IO_OD_G	= P_IO_OD_G_1 NOT P_IO_OD_G_SBLK

	IO_G_RF = (((((BGATE AND TG) NOT SP) NOT INTERACT NATIVE) NOT MG) NOT GOX523P3VIMPMK) AND RFSYMBOL 
	N_IO_G_1_RF = (IO_G_RF AND NPLUS) AND PSUB 
	N_IO_G_SBLK_RF = N_IO_G_1_RF INTERACT SBLK == 1
	N_IO_G_RF = (N_IO_G_1_RF NOT N_IO_G_SBLK_RF) NOT PLY_NOSD
	N_IOBPW_G_RF = (((IO_G_RF AND NPLUS) AND TWELL) INSIDE NWEL) NOT PLY_NOSD
	P_IO_G_1_RF = (((IO_G_RF AND WEL) AND PPLUS) NOT TWELL) NOT PLY_NOSD
	P_IO_G_SBLK_RF = P_IO_G_1_RF INTERACT SBLK == 1
	P_IO_G_RF = P_IO_G_1_RF NOT P_IO_G_SBLK_RF 

#ELSE
	IO_G = (((((BGATE AND TG) NOT SP) NOT INTERACT NATIVE) NOT MG) NOT GOX523P3VIMPMK)NOT RFSYMBOL
	N_IO_G = (IO_G AND NPLUS) AND (PSUB OR TWELL) 
	//N_IOBPW_G = (IO_G AND NPLUS) AND TWELL
	P_IO_G = ((IO_G AND WEL) AND PPLUS) NOT TWELL

	IO_OD_G = (((((BGATE AND TG) NOT SP) NOT INTERACT NATIVE) NOT MG) AND GOX523P3VIMPMK)NOT RFSYMBOL
	N_IO_OD_G = (IO_OD_G AND NPLUS) AND (PSUB OR TWELL) 
	//N_IOBPW_OD_G = (IO_OD_G AND NPLUS) AND TWELL
	P_IO_OD_G = ((IO_OD_G AND WEL) AND PPLUS) NOT TWELL

	IO_G_RF = (((((BGATE AND TG) NOT SP) NOT INTERACT NATIVE) NOT MG) NOT GOX523P3VIMPMK)AND RFSYMBOL
	N_IO_G_RF = ((IO_G_RF AND NPLUS) AND PSUB) NOT PLY_NOSD 
	N_IOBPW_G_RF = (((IO_G_RF AND NPLUS) AND TWELL) INSIDE NWEL) NOT PLY_NOSD
	P_IO_G_RF = (((IO_G_RF AND WEL) AND PPLUS) NOT TWELL) NOT PLY_NOSD

#ENDIF

ZERO_G = ((BGATE INTERACT NATIVE) AND NPLUS) AND PSUB
N_NVT_G = (ZERO_G NOT TG) NOT MG
N_NVT_G_12 = (ZERO_G NOT TG) AND MG
N_NVT_TG = ZERO_G AND TG

/* 0.99um^2 LL 6TSRAM */
P_L099_LLHVT	= RAM_PBIT AND SP_12
NGATE_LLHVT_099 = RAM_NBIT AND SP_12 
N_PD099_LLHVT	= AREA NGATE_LLHVT_099 > 0.0122	/* PD:0.0136,PG:0.0108 */
N_PG099_LLHVT	= NGATE_LLHVT_099 NOT N_PD099_LLHVT

/* 0.99um^2 SP 6TSRAM */
P_L099_SPHVT = RAM_PBIT AND SP_11
NGATE_SPHVT_099 = RAM_NBIT AND SP_11
N_PD099_SPHVT = AREA NGATE_SPHVT_099 > 0.0122 /* PD:0.0136,PG:0.0108 */
N_PG099_SPHVT = NGATE_SPHVT_099 NOT N_PD099_SPHVT

/* 0.99um^2 SP 6TSRAM */
P_L99_SPHVT = RAM_PBIT AND SP_7
NGATE_SPHVT_99 = RAM_NBIT AND SP_7
N_PD99_SPHVT = AREA NGATE_SPHVT_99 > 0.0120 /* PD:0.0136,PG:0.0108 */
N_PG99_SPHVT = NGATE_SPHVT_99 NOT N_PD99_SPHVT

/* 1.16um^2 LL 6TSRAM */
P_L116_LLHVT	= RAM_PBIT AND SP_6
NGATE_LLHVT_116 = RAM_NBIT AND SP_6 
N_PD116_LLHVT	= AREA NGATE_LLHVT_116 > 0.0142	/* PD:0.0144,PG:0.014 */
N_PG116_LLHVT	= NGATE_LLHVT_116 NOT N_PD116_LLHVT

/* 1.16um^2 SP 6TSRAM */
P_L116_SPHVT = RAM_PBIT AND SP_5
NGATE_SPHVT_116 = RAM_NBIT AND SP_5
N_PD116_SPHVT = AREA NGATE_SPHVT_116 > 0.0142 /* PD:0.0144,PG:0.014 */
N_PG116_SPHVT = NGATE_SPHVT_116 NOT N_PD116_SPHVT

/* 1.26um^2 LL 6TSRAM */
P_L126_LLHVT	= RAM_PBIT AND SP_1
NGATE_LLHVT_126	= RAM_NBIT AND SP_1 
N_PD126_LLHVT	= AREA NGATE_LLHVT_126 > 0.014	/* PD:0.016,PG:0.012 */
N_PG126_LLHVT	= NGATE_LLHVT_126 NOT N_PD126_LLHVT

/* 1.26um^2 SP 6TSRAM */
P_L126_SPHVT = RAM_PBIT AND SP_2
NGATE_SPHVT_126 = RAM_NBIT AND SP_2
N_PD126_SPHVT = AREA NGATE_SPHVT_126 > 0.014 /* PD:0.016,PG:0.012 */
N_PG126_SPHVT = NGATE_SPHVT_126 NOT N_PD126_SPHVT

/* 2.08um^2 LL 8TSRAM */
P_L208_LLHVT	= RAM_PBIT AND DP_11
NGATE_LLHVT_208	= RAM_NBIT AND DP_11 
N_PD208_LLHVT	= AREA NGATE_LLHVT_208 > 0.027	/* PD:0.040,PG:0.014 */
N_PG208_LLHVT	= NGATE_LLHVT_208 NOT N_PD208_LLHVT

/* 2.08um^2 SP 8TSRAM */
P_L208_SPHVT = RAM_PBIT AND DP_10
NGATE_SPHVT_208 = RAM_NBIT AND DP_10
N_PD208_SPHVT = AREA NGATE_SPHVT_208 > 0.027 /* PD:0.040,PG:0.014 */
N_PG208_SPHVT = NGATE_SPHVT_208 NOT N_PD208_SPHVT

/* 2.401um^2 SP 8TSRAM */
P_L240_SPHVT = RAM_PBIT AND DP_1
NGATE_SPHVT240 = RAM_NBIT AND DP_1
N_PD240_SPHVT = AREA NGATE_SPHVT240 > 0.03 /* PD:0.045,PG:0.013 */
N_PG240_SPHVT = NGATE_SPHVT240 NOT N_PD240_SPHVT

/* 1.994um^2 SPHVT 8TSRAM */
P_L199P4_SPHVT = RAM_PBIT AND DP_13
NGATE_SPHVT_199P4 = RAM_NBIT AND DP_13
N_PD199P4_SPHVT = AREA NGATE_SPHVT_199P4 > 0.027 /* PD:0.040,PG:0.014 */
N_PG199P4_SPHVT = NGATE_SPHVT_199P4 NOT N_PD199P4_SPHVT

/* 1.994um^2 LLHVT 8TSRAM */
P_L199P4_LLHVT = (( RAM_PBIT AND DP_14 ) AND LL_HVT ) AND MG
NGATE_LLHVT_199P4 = (( RAM_NBIT AND DP_14 ) AND LL_HVT ) AND MG
N_PD199P4_LLHVT = AREA NGATE_LLHVT_199P4 > 0.027 /* PD:0.050,PG:0.014 */
N_PG199P4_LLHVT = NGATE_LLHVT_199P4 NOT N_PD199P4_LLHVT
//--------------------------------
// Define Metal Fuse
//--------------------------------
#IFDEF TOP_METAL_ME9_2T1F
	FUSE_METAL = ((ME9 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
	FUSE_METAL = ((ME8 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
	FUSE_METAL = ((ME8 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
	FUSE_METAL = ((ME8 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
	FUSE_METAL = ((ME7 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
	FUSE_METAL = ((ME7 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
	FUSE_METAL = ((ME7 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
	FUSE_METAL = ((ME7 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
	FUSE_METAL = ((ME6 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
	FUSE_METAL = ((ME6 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
	FUSE_METAL = ((ME6 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
	FUSE_METAL = ((ME5 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

#IFDEF TOP_METAL_ME4_1T0F
	FUSE_METAL = ((ME4 INTERACT CU_FUSE_PAD) AND SAB) AND FUSEMARK
#ENDIF

//------------------------------
// Define Capacitors
//------------------------------
#IFDEF TOP_METAL_ME4_1T0F
	CMMC =( MMCTP AND (MMCBP AND (M4DMBK AND M3DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M4DMBK AND M3DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M4DMBK AND M3DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF
#IFDEF TOP_METAL_ME5_1T0F
	CMMC =( MMCTP AND (MMCBP AND (M5DMBK AND M4DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M5DMBK AND M4DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M5DMBK AND M4DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
	CMMC =( MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
	CMMC =( MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
	CMMC =( MMCTP AND (MMCBP AND (M5DMBK AND M4DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M5DMBK AND M4DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M5DMBK AND M4DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
	CMMC =( MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
	CMMC =( MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
	CMMC =( MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
	CMMC =( MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M6DMBK AND M5DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
	CMMC =( MMCTP AND (MMCBP AND (M8DMBK AND M7DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M8DMBK AND M7DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M8DMBK AND M7DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
	CMMC =( MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
	CMMC =( MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M7DMBK AND M6DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

#IFDEF TOP_METAL_ME9_2T1F
	CMMC =( MMCTP AND (MMCBP AND (M8DMBK AND M7DMBK))) NOT INTERACT RFSYMBOL
	CMMC_RFNW = ((MMCTP AND (MMCBP AND (M8DMBK AND M7DMBK))) AND NWELL) AND RFSYMBOL
	CMMC_RF_A = ((MMCTP AND (MMCBP AND (M8DMBK AND M7DMBK))) NOT NWELL) AND RFSYMBOL
#ENDIF

CMMC_RF3 = CMMC_RF_A AND SIZE4 // 3 terminals MIMCAPS_RFKF ( in PSUB)
CMMC_RF2 = CMMC_RF_A NOT CMMC_RF3 // 2 terminals MIMCAPS_RFKF

CMMCE = GROW CMMC RIGHT BY 0.1 LEFT BY 0.1

MMCTP_C = MMCTP NOT RFSYMBOL
MMCTP_I = MMCTP AND RFSYMBOL
MMCBP_C = MMCBP NOT RFSYMBOL
MMCBP_I = MMCBP AND RFSYMBOL

// NFET in N-Well capacitor device //
NCAPGATE_HVT_10 = ((((BGATE AND NPLUS) AND NCAP) AND WEL) NOT MG) NOT TG
NCAPGATE_10_1 = (((((BGATE AND NPLUS) AND MISIMPBK) AND WEL) NOT MG) NOT TG) NOT RFSYMBOL
NCAPGATE_10_2 = (SDSYM AND DIFF) INTERACT NCAPGATE_10_1
NCAPGATE_10_3 = NCAPGATE_10_1 NOT NCAPGATE_10_2
NCAPGATE_10 = NCAPGATE_10_2 OR NCAPGATE_10_3
NCAPGATE_HVT_12 = (((((BGATE AND NPLUS) AND NCAP) AND WEL) AND MG) AND LL_HVT) NOT TG
NCAPGATE_12_1 = ((((((BGATE AND NPLUS) AND MISIMPBK) AND WEL) AND MG) NOT TG) AND LL_HVT) NOT RFSYMBOL
NCAPGATE_12_2 = (SDSYM AND DIFF) INTERACT NCAPGATE_12_1
NCAPGATE_12_3 = NCAPGATE_12_1 NOT NCAPGATE_12_2
NCAPGATE_12 = NCAPGATE_12_2 OR NCAPGATE_12_3
#IFDEF 1.8V_IO
	NCAPGATE_18_1 = (((((BGATE AND NPLUS) AND MISIMPBK) AND WEL) NOT MG) AND TG) NOT RFSYMBOL
	NCAPGATE_18_2 = (SDSYM AND DIFF) INTERACT NCAPGATE_18_1
	NCAPGATE_18_3 = NCAPGATE_18_1 NOT NCAPGATE_18_2
	NCAPGATE_18 = NCAPGATE_18_2 OR NCAPGATE_18_3
#ELSE
	#IFDEF 3.3V_IO
		NCAPGATE_N_33_1 = ((((BGATE AND NPLUS) AND NCAP) AND WEL) NOT MG) AND TG
		NCAPGATE_N_33_2 = (SDSYM AND DIFF) INTERACT NCAPGATE_N_33_1
		NCAPGATE_N_33_3 = NCAPGATE_N_33_1 NOT NCAPGATE_N_33_2
		NCAPGATE_N_33 = NCAPGATE_N_33_2 OR NCAPGATE_N_33_3
		NCAPGATE_33_1 = (((((BGATE AND NPLUS) AND MISIMPBK) AND WEL) NOT MG) AND TG) NOT RFSYMBOL
		NCAPGATE_33_2 = (SDSYM AND DIFF) INTERACT NCAPGATE_33_1
		NCAPGATE_33_3 = NCAPGATE_33_1 NOT NCAPGATE_33_2
		NCAPGATE_33 = NCAPGATE_33_2 OR NCAPGATE_33_3
	#ELSE
		NCAPGATE_N_25 = ((((BGATE AND NPLUS) AND NCAP) AND WEL) NOT MG) AND TG
		NCAPGATE_25_1 = (((((BGATE AND NPLUS) AND MISIMPBK) AND WEL) NOT MG) AND TG) NOT RFSYMBOL
		NCAPGATE_25_2 = (SDSYM AND DIFF) INTERACT NCAPGATE_25_1
		NCAPGATE_25_3 = NCAPGATE_25_1 NOT NCAPGATE_25_2
		NCAPGATE_25 = NCAPGATE_25_2 OR NCAPGATE_25_3
	#ENDIF
#ENDIF

// NFET in N-Well capacitor device //
ERCVARMIS = ((BGATE AND NPLUS) AND PLY_I) AND WEL
VARMIS_12 = ((((BGATE AND NPLUS) AND PLY_I) AND WEL) AND MG) AND RFSYMBOL
VARMIS_10_SP = (((((BGATE AND NPLUS) AND PLY_I) AND WEL) NOT MG)AND SP) AND RFSYMBOL

#IFDEF 1.8V_IO
	VARMIS_18 = ((((BGATE AND NPLUS) AND PLY_I) AND WEL) AND TG) AND RFSYMBOL
#ENDIF

#IFDEF 2.5V_IO
	VARMIS_25 = ((((BGATE AND NPLUS) AND PLY_I) AND WEL) AND TG) AND RFSYMBOL
#ENDIF

#IFDEF 2.5V_3.3VOD_IO
	VARMIS_25 = ((((BGATE AND NPLUS) AND PLY_I) AND WEL) AND TG) AND RFSYMBOL
#ENDIF

//-----------------------
// Define RF PAD device
//-----------------------
rf_pad = (AL_RDL AND BOACMK) AND RFSYMBOL

rf_1 = ((((((((ME1_I OR ME2_I) OR ME3_I) OR ME4_I)OR ME5_I )OR ME6_I) OR ME7_I)OR ME8_I)OR ME9_I) INTERACT rf_pad
rf_2 = (SIZE rf_pad BY 0.05 )NOT (SIZE rf_1 BY 0.03)

typea_pad = rf_pad AND BOACMK
type9_pad = (ME9_I INTERACT typea_pad) OR rf_2
type8_pad = (ME8_I INTERACT typea_pad) OR rf_2
type7_pad = (ME7_I INTERACT typea_pad) OR rf_2
type6_pad = (ME6_I INTERACT typea_pad) OR rf_2
type5_pad = (ME5_I INTERACT typea_pad) OR rf_2
type4_pad = (ME4_I INTERACT typea_pad) OR rf_2
type3_pad = (ME3_I INTERACT typea_pad) OR rf_2
type2_pad = (ME2_I INTERACT typea_pad) OR rf_2
type1_pad = (ME1_I INTERACT typea_pad) OR rf_2

//-----------------------
// Define BJT
//-----------------------
ERCBJT = SIZE (NWEL INTERACT BIPOLAR) BY 0.1
BIPOLAR1 = BIPOLAR NOT INTERACT ((PO1 OR MG) OR NCAP)
PNPNWEL = NWEL AND (BIPOLAR1 INTERACT SAB)
PNP_E = (PSD INSIDE PNPNWEL) AND BIPOLAR
PNPBJT = (HOLES PTAP INNER) ENCLOSE PNPNWEL

PNP_E_32 = RECTANGLE PNP_E <3.5 BY <3.5
PNPBJT32 = PNPBJT ENCLOSE PNP_E_32
PNP_E_L32 = PNP_E NOT PNP_E_32

NPNTWEL = TWELL AND (BIPOLAR1 INTERACT SAB)
NPN_E = NSD INSIDE NPNTWEL
NPNBJT = (HOLES NTAP) ENCLOSE NPNTWEL

NPN_E_32 = RECTANGLE NPN_E <3.5 BY <3.5
NPNBJT32 = NPNBJT ENCLOSE NPN_E_32
NPN_E_L32 = NPN_E NOT NPN_E_32

//-----------------------
// Define Inductor 
//-----------------------
RFSYMBOL1_1 = SIZE RFSYMBOL BY -5
RFSYMBOL1 = SIZE RFSYMBOL1_1 BY 5

ME9_IND = ME9 AND IND
ME9L = ME9_IND AND RFSYMBOL1
ME8_IND = ME8 AND IND
ME8L = ME8_IND AND RFSYMBOL1
ME7_IND = ME7 AND IND
ME7L = ME7_IND AND RFSYMBOL1
ME6_IND = ME6 AND IND
ME6L = ME6_IND AND RFSYMBOL1
ME5_IND = ME5 AND IND
ME5L = ME5_IND AND RFSYMBOL1
ME4_IND = ME4 AND IND
ME4L = ME4_IND AND RFSYMBOL1
ME3_IND = ME3 AND IND
ME3L = ME3_IND AND RFSYMBOL1
ME2_IND = ME2 AND IND
ME2L = ME2_IND AND RFSYMBOL1

ME8LS = ME8_IND INTERACT RFSYMBOL
ME7LS = ME7_IND INTERACT RFSYMBOL
ME6LS = ME6_IND INTERACT RFSYMBOL
ME5LS = ME5_IND INTERACT RFSYMBOL
ME4LS = ME4_IND INTERACT RFSYMBOL
ME3LS = ME3_IND INTERACT RFSYMBOL
ME2LS = ME2_IND INTERACT RFSYMBOL

ME7LS_Q = ((ME7_IND INTERACT RFSYMBOL) NOT INTERACT ME6) INTERACT SIZEA
ME6LS_Q = ((ME6_IND INTERACT RFSYMBOL) NOT INTERACT ME5) INTERACT SIZEA
ME5LS_Q = ((ME5_IND INTERACT RFSYMBOL) NOT INTERACT ME4) INTERACT SIZEA
ME4LS_Q = ((ME4_IND INTERACT RFSYMBOL) NOT INTERACT ME3) INTERACT SIZEA
ME3LS_Q = ((ME3_IND INTERACT RFSYMBOL) NOT INTERACT ME2) INTERACT SIZEA
ME2LS_Q = ((ME2_IND INTERACT RFSYMBOL) NOT INTERACT ME1) INTERACT SIZEA

LDIMETER9= EXTENTS ME9L
LDIMETER8= EXTENTS ME8L
LDIMETER7= EXTENTS ME7L
LDIMETER6= EXTENTS ME6L
LDIMETER5= EXTENTS ME5L
LDIMETER4= EXTENTS ME4L

LDTA_81 = LDIMETER9 NOT ME9L
LDTA_82 = EXTENTS LDTA_81
LDTA_8 = LDIMETER9 NOT LDTA_82

LDTA_71 = LDIMETER8 NOT ME8L
LDTA_72 = EXTENTS LDTA_71
LDTA_7 = LDIMETER8 NOT LDTA_72

LDTA_61 = LDIMETER7 NOT ME7L
LDTA_62 = EXTENTS LDTA_61
LDTA_6 = LDIMETER7 NOT LDTA_62

LDTA_1 = LDIMETER6 NOT ME6L
LDTA_2 = EXTENTS LDTA_1
LDTA_5 = LDIMETER6 NOT LDTA_2

LDTA_41 = LDIMETER5 NOT ME5L
LDTA_42 = EXTENTS LDTA_41
LDTA_4 = LDIMETER5 NOT LDTA_42

LDTA_31 = LDIMETER4 NOT ME4L
LDTA_32 = EXTENTS LDTA_31
LDTA_3 = LDIMETER4 NOT LDTA_32


ME8LT_1 = ME8LS AND ME9L
ME8LT = (ME8LT_1 INTERACT VI8) OR LDTA_8

ME7LT_1 = ME7LS AND ME8L
ME7LT = (ME7LT_1 INTERACT VI7) OR LDTA_7

ME6LT_1 = ME6LS AND ME7L
ME6LT = (ME6LT_1 INTERACT VI6) OR LDTA_6

ME5LT_1 = ME5LS AND ME6L
ME5LT = (ME5LT_1 INTERACT VI5) OR LDTA_5

ME4LT_1 = ME4LS AND ME5L
ME4LT = (ME4LT_1 INTERACT VI4) OR LDTA_4

ME3LT_1 = ME3LS AND ME4L
ME3LT = (ME3LT_1 INTERACT VI3) OR LDTA_3

ME8LT1_1 = ME8LS AND ME9L
ME8LT1_2 = SIZE ME8LT1_1 BY 0.2

ME7LT1_1 = ME7LS AND ME8L
ME7LT1_2 = SIZE ME7LT1_1 BY 0.2

ME8LT1 = SIZE6 AND ME9L
ME7LT1 = SIZE6 AND ME8L
ME6LT1 = SIZE6 AND ME7L
ME5LT1 = SIZE6 AND ME6L
ME4LT1 = SIZE6 AND ME4L
ME3LT1 = SIZE6 AND ME3L

ME8LT2_1= ME8LT NOT INTERACT ME7LS
ME8LT2= ME8LT2_1 OR LDTA_8

ME7LT2_1= ME7LT NOT INTERACT ME6LS
ME7LT2= ME7LT2_1 OR LDTA_7

ME6LT2_1= ME6LT NOT INTERACT ME5LS
ME6LT2= ME6LT2_1 OR LDTA_6

ME5LT2_1= ME5LT NOT INTERACT ME4LS
ME5LT2= ME5LT2_1 OR LDTA_5

ME4LT2_1= ME4LT NOT INTERACT ME3LS
ME4LT2= ME4LT2_1 OR LDTA_4

ME3LT2_1= ME3LT NOT INTERACT ME2LS
ME3LT2= ME3LT2_1 OR LDTA_3

ME8LU_O_1 = COPY ME8LS
ME8LU_O = ME8LS AND LDIMETER8

ME7LU_O_1 = ME7LS NOT ME9L
ME7LU_O = (ME7LS NOT ME9L) AND LDIMETER8

ME6LU_O_1 = ME6LS NOT ME8L
ME6LU_O = (ME6LS NOT ME8L) AND LDIMETER7

ME5LU_O_1 = ME5LS NOT ME7L
ME5LU_O = (ME5LS NOT ME7L) AND LDIMETER6

ME4LU_O_1 = ME4LS NOT ME6L
ME4LU_O = (ME4LS NOT ME6L) AND LDIMETER5

ME3LU_O_1 = ME3LS NOT ME5L
ME3LU_O = (ME3LS NOT ME5L) AND LDIMETER4

ME8LU_1 = SIZE6 NOT ME8LT1
ME8LU_2 = ME8LU_1 INTERACT ME8LT1 == 2
ME8LU = SIZE ME8LU_2 BY 0.2

ME7LU_1 = SIZE6 NOT ME7LT1
ME7LU_2 = ME7LU_1 INTERACT ME7LT1 == 2
ME7LU = SIZE ME7LU_2 BY 0.2

ME6LU_1 = SIZE6 NOT ME6LT1
ME6LU_2 = ME6LU_1 INTERACT ME6LT1 == 2
ME6LU = SIZE ME6LU_2 BY 0.2

ME5LU_1 = SIZE6 NOT ME5LT1
ME5LU_2 = ME5LU_1 INTERACT ME5LT1 == 2
ME5LU = SIZE ME5LU_2 BY 0.2

ME4LU_1 = SIZE6 NOT ME4LT1
ME4LU_2 = ME4LU_1 INTERACT ME4LT1 == 2
ME4LU = SIZE ME4LU_2 BY 0.2

ME3LU_1 = SIZE6 NOT ME3LT1
ME3LU_2 = ME3LU_1 INTERACT ME3LT1 == 2
ME3LU = SIZE ME3LU_2 BY 0.2

IND_CR_9 = (ME9L OR ME8L) OR ME7LS_Q
IND_CR_8 = (ME8L OR ME7L) OR ME6LS_Q
IND_CR_7 = (ME7L OR ME6L) OR ME5LS_Q
IND_CR_6 = (ME6L OR ME5L) OR ME4LS_Q
IND_CR_5 = (ME5L OR ME4L) OR ME3LS_Q
IND_CR_4 = (ME4L OR ME3L) OR ME2LS_Q

N_IND_CR_SY_9 = (RFSYMBOL INTERACT IND_CR_9) INTERACT SIZEA
N_IND_CR_SY_8 = (RFSYMBOL INTERACT IND_CR_8) INTERACT SIZEA
N_IND_CR_SY_7 = (RFSYMBOL INTERACT IND_CR_7) INTERACT SIZEA
N_IND_CR_SY_6 = (RFSYMBOL INTERACT IND_CR_6) INTERACT SIZEA
N_IND_CR_SY_5 = (RFSYMBOL INTERACT IND_CR_5) INTERACT SIZEA
N_IND_CR_SY_4 = (RFSYMBOL INTERACT IND_CR_4) INTERACT SIZEA

N_IND_SY_9 = ((RFSYMBOL INTERACT IND_CR_9) INTERACT NWEL) INTERACT SIZE9
N_IND_SY_8 = ((RFSYMBOL INTERACT IND_CR_8) INTERACT NWEL) INTERACT SIZE9
N_IND_SY_7 = ((RFSYMBOL INTERACT IND_CR_7) INTERACT NWEL) INTERACT SIZE9
N_IND_SY_6 = ((RFSYMBOL INTERACT IND_CR_6) INTERACT NWEL) INTERACT SIZE9
N_IND_SY_5 = ((RFSYMBOL INTERACT IND_CR_5) INTERACT NWEL) INTERACT SIZE9
N_IND_SY_4 = ((RFSYMBOL INTERACT IND_CR_4) INTERACT NWEL) INTERACT SIZE9

N_IND_SY_9_P = ((RFSYMBOL INTERACT IND_CR_9) NOT INTERACT NWEL) INTERACT SIZE12
N_IND_SY_8_P = ((RFSYMBOL INTERACT IND_CR_8) NOT INTERACT NWEL) INTERACT SIZE12
N_IND_SY_7_P = ((RFSYMBOL INTERACT IND_CR_7) NOT INTERACT NWEL) INTERACT SIZE12
N_IND_SY_6_P = ((RFSYMBOL INTERACT IND_CR_6) NOT INTERACT NWEL) INTERACT SIZE12
N_IND_SY_5_P = ((RFSYMBOL INTERACT IND_CR_5) NOT INTERACT NWEL) INTERACT SIZE12
N_IND_SY_4_P = ((RFSYMBOL INTERACT IND_CR_4) NOT INTERACT NWEL) INTERACT SIZE12

N_IND_SYC_9 = ((RFSYMBOL INTERACT IND_CR_9) INTERACT NWEL) INTERACT SIZE8
N_IND_SYC_8 = ((RFSYMBOL INTERACT IND_CR_8) INTERACT NWEL) INTERACT SIZE8
N_IND_SYC_7 = ((RFSYMBOL INTERACT IND_CR_7) INTERACT NWEL) INTERACT SIZE8
N_IND_SYC_6 = ((RFSYMBOL INTERACT IND_CR_6) INTERACT NWEL) INTERACT SIZE8
N_IND_SYC_5 = ((RFSYMBOL INTERACT IND_CR_5) INTERACT NWEL) INTERACT SIZE8
N_IND_SYC_4 = ((RFSYMBOL INTERACT IND_CR_4) INTERACT NWEL) INTERACT SIZE8

N_IND_SYC_9_P = ((RFSYMBOL INTERACT IND_CR_9) NOT INTERACT NWEL) INTERACT SIZE11
N_IND_SYC_8_P = ((RFSYMBOL INTERACT IND_CR_8) NOT INTERACT NWEL) INTERACT SIZE11
N_IND_SYC_7_P = ((RFSYMBOL INTERACT IND_CR_7) NOT INTERACT NWEL) INTERACT SIZE11
N_IND_SYC_6_P = ((RFSYMBOL INTERACT IND_CR_6) NOT INTERACT NWEL) INTERACT SIZE11
N_IND_SYC_5_P = ((RFSYMBOL INTERACT IND_CR_5) NOT INTERACT NWEL) INTERACT SIZE11
N_IND_SYC_4_P = ((RFSYMBOL INTERACT IND_CR_4) NOT INTERACT NWEL) INTERACT SIZE11

SIZEA = ((((SIZE8 OR SIZE9) OR SIZE11) OR SIZE12) OR SIZE7) OR SIZE10

N_IND_CR_9 = ((RFSYMBOL INTERACT IND_CR_9) INTERACT NWEL) INTERACT SIZE7
N_IND_CR_8 = ((RFSYMBOL INTERACT IND_CR_8) INTERACT NWEL) INTERACT SIZE7
N_IND_CR_7 = ((RFSYMBOL INTERACT IND_CR_7) INTERACT NWEL) INTERACT SIZE7
N_IND_CR_6 = ((RFSYMBOL INTERACT IND_CR_6) INTERACT NWEL) INTERACT SIZE7
N_IND_CR_5 = ((RFSYMBOL INTERACT IND_CR_5) INTERACT NWEL) INTERACT SIZE7
N_IND_CR_4 = ((RFSYMBOL INTERACT IND_CR_4) INTERACT NWEL) INTERACT SIZE7

N_IND_CR_9_P = ((RFSYMBOL INTERACT IND_CR_9) NOT INTERACT NWEL) INTERACT SIZE10
N_IND_CR_8_P = ((RFSYMBOL INTERACT IND_CR_8) NOT INTERACT NWEL) INTERACT SIZE10
N_IND_CR_7_P = ((RFSYMBOL INTERACT IND_CR_7) NOT INTERACT NWEL) INTERACT SIZE10
N_IND_CR_6_P = ((RFSYMBOL INTERACT IND_CR_6) NOT INTERACT NWEL) INTERACT SIZE10
N_IND_CR_5_P = ((RFSYMBOL INTERACT IND_CR_5) NOT INTERACT NWEL) INTERACT SIZE10
N_IND_CR_4_P = ((RFSYMBOL INTERACT IND_CR_4) NOT INTERACT NWEL) INTERACT SIZE10

/* Define Stacked Inductor using ME1-6 */

//LLMARK = ((RFSYMBOL AND LSYMBOL) AND IND) AND WEL
LLMARK = RFSYMBOL AND IND
lay1 = (ME1 AND LLMARK) NOT SIZE1 //can not conflict with Planar inductor
lay2 = (ME2 AND LLMARK) NOT SIZE2 //can not conflict with Planar inductor
lay3 = ((ME3 AND LLMARK) NOT SIZE3) NOT INTERACT ME3LS_Q //can not conflict with Planar inductor
//lay3 = (ME3 AND LLMARK) NOT SIZE3
lay4 = (ME4 AND LLMARK) NOT INTERACT ME4LS_Q //can not conflict with Planar inductor
lay5 = (ME5 AND LLMARK) NOT INTERACT ME5LS_Q //can not conflict with Planar inductor
lay6 = (ME6 AND LLMARK) NOT INTERACT ME6LS_Q //can not conflict with Planar inductor
IND_SQ = ((((lay1 OR lay2) OR lay3) OR lay4) OR lay5) OR lay6

#IFDEF TOP_METAL_ME9_2T1F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_9) NOT INTERACT N_IND_CR_9_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_9
#ENDIF
#IFDEF TOP_METAL_ME8_2T1F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_8) NOT INTERACT N_IND_CR_8_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_8
#ENDIF
#IFDEF TOP_METAL_ME8_1T1F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_8) NOT INTERACT N_IND_CR_8_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_8
#ENDIF
#IFDEF TOP_METAL_ME8_2T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_8) NOT INTERACT N_IND_CR_8_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_8
#ENDIF
#IFDEF TOP_METAL_ME7_2T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_7) NOT INTERACT N_IND_CR_7_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_7
#ENDIF
#IFDEF TOP_METAL_ME7_2T1F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_7) NOT INTERACT N_IND_CR_7_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_7
#ENDIF
#IFDEF TOP_METAL_ME7_1T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_7) NOT INTERACT N_IND_CR_7_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_7
#ENDIF
#IFDEF TOP_METAL_ME7_1T1F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_7) NOT INTERACT N_IND_CR_7_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_7
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_6) NOT INTERACT N_IND_CR_6_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_6
#ENDIF
#IFDEF TOP_METAL_ME6_1T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_6) NOT INTERACT N_IND_CR_6_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_6
#ENDIF
#IFDEF TOP_METAL_ME6_1T1F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_6) NOT INTERACT N_IND_CR_6_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_6
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_5) NOT INTERACT N_IND_CR_5_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_5
#ENDIF

#IFDEF TOP_METAL_ME4_1T0F
	N_IND_SQ_P = (((EXTENTS IND_SQ) NOT INTERACT NWEL) NOT INTERACT	N_IND_CR_SY_4) NOT INTERACT N_IND_CR_4_P
	N_IND_SQ = (NWEL ENCLOSE IND_SQ) NOT INTERACT N_IND_CR_SY_4
#ENDIF

IND1 = SIZE IND BY -1
//lay1a = ((SIZE (SIZE ME1_C BY -0.3) BY 0.3)NOT INTERACT ((SIZE1 OR SIZE2) OR SIZE3)) INTERACT IND_SQ
lay1a = ((ME1_C NOT INTERACT ((SIZE1 OR SIZE2) OR SIZE3)) INTERACT IND_SQ) INTERACT IND1
lay1b = ((ME1_C NOT lay1a) INTERACT IND_SQ) INTERACT IND1
lay2a = ((ME2_C INTERACT (SIZE1 OR SIZE2)) INTERACT IND_SQ) INTERACT IND1
lay2b = ((ME2_C NOT lay2a) INTERACT IND_SQ) INTERACT IND1
lay3a = ((ME3_C INTERACT (SIZE2 OR SIZE3)) INTERACT IND_SQ) INTERACT IND1
lay3b = ((ME3_C NOT lay3a) INTERACT IND_SQ) INTERACT IND1
lay4a = ((ME4_C INTERACT SIZE3) INTERACT IND_SQ) INTERACT IND1
lay4b = ((ME4_C NOT lay4a) INTERACT IND_SQ) INTERACT IND1
lay5a = ((ME5_C NOT INTERACT ((SIZE1 OR SIZE2) OR SIZE3)) INTERACT IND_SQ) INTERACT IND1
lay5b = ((ME5_C NOT lay5a) INTERACT IND_SQ) INTERACT IND1
lay6a = ((ME6_C NOT INTERACT ((SIZE1 OR SIZE2) OR SIZE3)) INTERACT IND_SQ) INTERACT IND1
lay6b = ((ME6_C NOT lay6a) INTERACT IND_SQ) INTERACT IND1

Lterm1 = ((((SIZE (SIZE ME1_C BY -0.3) BY 0.3) OR lay2a) OR lay3a) OR lay4a) INTERACT IND_SQ
Lterm2 = (((((lay2b OR lay3b) OR lay4b) OR ME5_C) OR ME6_C) INTERACT IND_SQ) INTERACT N_IND_SQ_P
Lterm = Lterm1 OR Lterm2

SQLDIMETER=EXTENTS IND_SQ
CENTER=HOLES (SIZE(SIZE IND_SQ BY 1) BY -1)

SQ_DATW = ((GROW CENTER RIGHT BY 45 LEFT BY 45) AND IND_SQ) AND RFSYMBOL
SQ_DATS = (((GROW CENTER RIGHT BY 45 LEFT BY 45) NOT IND_SQ) AND RFSYMBOL) NOT INTERACT CENTER

q1=SQLDIMETER NOT (SIZE SQLDIMETER BY -1)
q2=(SIZE SQLDIMETER BY -2) NOT (SIZE SQLDIMETER BY -3)
q3=(SIZE SQLDIMETER BY -4) NOT (SIZE SQLDIMETER BY -5)
q4=(SIZE SQLDIMETER BY -6) NOT (SIZE SQLDIMETER BY -7)
q5=(SIZE SQLDIMETER BY -8) NOT (SIZE SQLDIMETER BY -9)
q6=(SIZE SQLDIMETER BY -10) NOT (SIZE SQLDIMETER BY -11)
ns1=q1 AND (SQLDIMETER INTERACT lay1)
ns2=q2 AND (SQLDIMETER INTERACT lay2)
ns3=q3 AND (SQLDIMETER INTERACT lay3)
ns4=q4 AND (SQLDIMETER INTERACT lay4)
ns5=q5 AND (SQLDIMETER INTERACT lay5)
ns6=q6 AND (SQLDIMETER INTERACT lay6)
us1=q1 AND (SIZE1 AND LLMARK)
us2=q2 AND (SIZE2 AND LLMARK)
us3=q3 AND (SIZE3 AND LLMARK)
aux=copy q4

SQ_NS=((((ns1 OR ns2) OR ns3) OR ns4) OR ns5) OR ns6
SQ_BM1=us1 OR aux
SQ_BM2=us2 OR aux
SQ_BM3=us3 OR aux

//-----------------------------
// Define Metal resistor
//-----------------------------
ME1_RF_I = COPY lay1
ME2_RF_I = COPY lay2
ME3_RF_I = ME3L OR lay3
ME4_RF_I = ME4L OR lay4
ME5_RF_I = ME5L OR lay5
ME6_RF_I = ME6L OR lay6
ME7_RF_I = COPY ME7L
ME8_RF_I = COPY ME8L
ME9_RF_I = COPY ME9L

ME1_I = (ME1 AND RFSYMBOL) NOT ME1_RF_I 
ME2_I = (ME2 AND RFSYMBOL) NOT ME2_RF_I
ME3_I = (ME3 AND RFSYMBOL) NOT ME3_RF_I
ME4_I = (ME4 AND RFSYMBOL) NOT ME4_RF_I
ME5_I = (ME5 AND RFSYMBOL) NOT ME5_RF_I 
ME6_I = (ME6 AND RFSYMBOL) NOT ME6_RF_I
ME7_I = (ME7 AND RFSYMBOL) NOT ME7_RF_I
ME8_I = (ME8 AND RFSYMBOL) NOT ME8_RF_I
ME9_I = (ME9 AND RFSYMBOL) NOT ME9_RF_I

ME1RES = ME1 AND M1RESMK
ME1_IND_C = (ME1 NOT ME1RES) NOT ME1_I 
ME1_C = ME1_IND_C NOT ME1_RF_I

ME2RES = ME2 AND M2RESMK
ME2_IND_C = (ME2 NOT ME2RES) NOT ME2_I
ME2_C = ME2_IND_C NOT ME2_RF_I

ME3RES = ME3 AND M3RESMK
ME3_IND_C = (ME3 NOT ME3RES) NOT ME3_I
ME3_C = ME3_IND_C NOT ME3_RF_I

ME4RES = ME4 AND M4RESMK
ME4_IND_C = (ME4 NOT ME4RES) NOT ME4_I
ME4_C = (ME4_IND_C NOT ME4_RF_I) NOT FUSE_METAL

ME5RES = ME5 AND M5RESMK
ME5_IND_C = (ME5 NOT ME5RES) NOT ME5_I
ME5_C = (ME5_IND_C NOT ME5_RF_I) NOT FUSE_METAL

ME6RES = ME6 AND M6RESMK
ME6_IND_C = (ME6 NOT ME6RES) NOT ME6_I
ME6_C = (ME6_IND_C NOT ME6_RF_I) NOT FUSE_METAL

ME7RES = ME7 AND M7RESMK
ME7_IND_C = (ME7 NOT ME7RES) NOT ME7_I
ME7_C = (ME7_IND_C NOT ME7_RF_I) NOT FUSE_METAL

ME8RES = ME8 AND M8RESMK
ME8_IND_C = (ME8 NOT ME8RES) NOT ME8_I
ME8_C = (ME8_IND_C NOT ME8_RF_I) NOT FUSE_METAL

ME9RES = ME9 AND M9RESMK
ME9_IND_C = (ME9 NOT ME9RES) NOT ME9_I
ME9_C = (ME9_IND_C NOT ME9_RF_I) NOT FUSE_METAL

ALRES = AL_RDL AND ALRESMK
AL_RDL_C = (AL_RDL NOT ALRESMK ) NOT AL_RDL_I
AL_RDL_I = AL_RDL AND RFSYMBOL

///////////////////////////////
// Establish Layer Connectivity
///////////////////////////////
#IFDEF TOP_METAL_ME4_1T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI3 AND MMCBP) NOT MMCTP
	TPTMV = VI3 AND MMCTP
	CONNECT AL_RDL_C ME4_C BY METMV
	CONNECT ME4_C MMCTP_C BY TPTMV
	CONNECT ME4_C MMCBP_C BY BPTMV
	CONNECT AL_RDL_I ME4_I BY METMV
	CONNECT ME4_I MMCTP_I BY TPTMV
	CONNECT ME4_I MMCBP_I BY BPTMV
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI4 AND MMCBP) NOT MMCTP
	TPTMV = VI4 AND MMCTP
	CONNECT AL_RDL_C ME5_C BY METMV
	CONNECT ME5_C MMCTP_C BY TPTMV
	CONNECT ME5_C MMCBP_C BY BPTMV
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME5_I BY METMV
	CONNECT ME5_I MMCTP_I BY TPTMV
	CONNECT ME5_I MMCBP_I BY BPTMV
	CONNECT ME5_I ME4_I BY VI4
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI5 AND MMCBP) NOT MMCTP
	TPTMV = VI5 AND MMCTP
	CONNECT AL_RDL_C ME6_C BY METMV
	CONNECT ME6_C MMCTP_C BY TPTMV
	CONNECT ME6_C MMCBP_C BY BPTMV
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME6_I BY METMV
	CONNECT ME6_I MMCTP_I BY TPTMV
	CONNECT ME6_I MMCBP_I BY BPTMV
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME6_2T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI5 AND MMCBP) NOT MMCTP
	TPTMV = VI5 AND MMCTP
	CONNECT AL_RDL_C ME6_C BY METMV
	CONNECT ME6_C MMCTP_C BY TPTMV
	CONNECT ME6_C MMCBP_C BY BPTMV
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME6_I BY METMV
	CONNECT ME6_I MMCTP_I BY TPTMV
	CONNECT ME6_I MMCBP_I BY BPTMV
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME6_1T1F
	METMV = COPY TMV_RDL
	BPTMV = (VI4 AND MMCBP) NOT MMCTP
	TPTMV = VI4 AND MMCTP
	CONNECT AL_RDL_C ME6_C BY METMV
	CONNECT ME5_C MMCTP_C BY TPTMV
	CONNECT ME5_C MMCBP_C BY BPTMV
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME6_I BY METMV
	CONNECT ME5_I MMCTP_I BY TPTMV
	CONNECT ME5_I MMCBP_I BY BPTMV
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI6 AND MMCBP) NOT MMCTP
	TPTMV = VI6 AND MMCTP
	CONNECT AL_RDL_C ME7_C BY METMV
	CONNECT ME7_C MMCTP_C BY TPTMV
	CONNECT ME7_C MMCBP_C BY BPTMV
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME7_I BY METMV
	CONNECT ME7_I MMCTP_I BY TPTMV
	CONNECT ME7_I MMCBP_I BY BPTMV
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME7_2T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI6 AND MMCBP) NOT MMCTP
	TPTMV = VI6 AND MMCTP
	CONNECT AL_RDL_C ME7_C BY METMV
	CONNECT ME7_C MMCTP_C BY TPTMV
	CONNECT ME7_C MMCBP_C BY BPTMV
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME7_I BY METMV
	CONNECT ME7_I MMCTP_I BY TPTMV
	CONNECT ME7_I MMCBP_I BY BPTMV
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME7_1T1F
	METMV = COPY TMV_RDL
	BPTMV = (VI5 AND MMCBP) NOT MMCTP
	TPTMV = VI5 AND MMCTP
	CONNECT AL_RDL_C ME7_C BY METMV
	CONNECT ME6_C MMCTP_C BY TPTMV
	CONNECT ME6_C MMCBP_C BY BPTMV
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME7_I BY METMV
	CONNECT ME6_I MMCTP_I BY TPTMV
	CONNECT ME6_I MMCBP_I BY BPTMV
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME7_2T1F
	METMV = COPY TMV_RDL
	BPTMV = (VI5 AND MMCBP) NOT MMCTP
	TPTMV = VI5 AND MMCTP
	CONNECT AL_RDL_C ME7_C BY METMV
	CONNECT ME6_C MMCTP_C BY TPTMV
	CONNECT ME6_C MMCBP_C BY BPTMV
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME7_I BY METMV
	CONNECT ME6_I MMCTP_I BY TPTMV
	CONNECT ME6_I MMCBP_I BY BPTMV
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
	METMV = COPY TMV_RDL
	BPTMV = (VI7 AND MMCBP) NOT MMCTP
	TPTMV = VI7 AND MMCTP
	CONNECT AL_RDL_C ME8_C BY METMV
	CONNECT ME8_C MMCTP_C BY TPTMV
	CONNECT ME8_C MMCBP_C BY BPTMV
	CONNECT ME8_C ME7_C BY VI7
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME8_I BY METMV
	CONNECT ME8_I MMCTP_I BY TPTMV
	CONNECT ME8_I MMCBP_I BY BPTMV
	CONNECT ME8_I ME7_I BY VI7
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME8_1T1F
	METMV = COPY TMV_RDL
	BPTMV = (VI6 AND MMCBP) NOT MMCTP
	TPTMV = VI6 AND MMCTP
	CONNECT AL_RDL_C ME8_C BY METMV
	CONNECT ME7_C MMCTP_C BY TPTMV
	CONNECT ME7_C MMCBP_C BY BPTMV
	CONNECT ME8_C ME7_C BY VI7
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME8_I BY METMV
	CONNECT ME7_I MMCTP_I BY TPTMV
	CONNECT ME7_I MMCBP_I BY BPTMV
	CONNECT ME8_I ME7_I BY VI7
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF
#IFDEF TOP_METAL_ME8_2T1F
	METMV = COPY TMV_RDL
	BPTMV = (VI6 AND MMCBP) NOT MMCTP
	TPTMV = VI6 AND MMCTP
	CONNECT AL_RDL_C ME8_C BY METMV
	CONNECT ME7_C MMCTP_C BY TPTMV
	CONNECT ME7_C MMCBP_C BY BPTMV
	CONNECT ME8_C ME7_C BY VI7
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME8_I BY METMV
	CONNECT ME7_I MMCTP_I BY TPTMV
	CONNECT ME7_I MMCBP_I BY BPTMV
	CONNECT ME8_I ME7_I BY VI7
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF

#IFDEF TOP_METAL_ME9_2T1F
	METMV = COPY TMV_RDL
	BPTMV = (VI7 AND MMCBP) NOT MMCTP
	TPTMV = VI7 AND MMCTP
	CONNECT AL_RDL_C ME9_C BY METMV
	CONNECT ME8_C MMCTP_C BY TPTMV
	CONNECT ME8_C MMCBP_C BY BPTMV
	CONNECT ME9_C ME8_C BY VI8
	CONNECT ME8_C ME7_C BY VI7
	CONNECT ME7_C ME6_C BY VI6
	CONNECT ME6_C ME5_C BY VI5
	CONNECT ME5_C ME4_C BY VI4
	CONNECT AL_RDL_I ME9_I BY METMV
	CONNECT ME8_I MMCTP_I BY TPTMV
	CONNECT ME8_I MMCBP_I BY BPTMV
	CONNECT ME9_I ME8_I BY VI8
	CONNECT ME8_I ME7_I BY VI7
	CONNECT ME7_I ME6_I BY VI6
	CONNECT ME6_I ME5_I BY VI5
	CONNECT ME5_I ME4_I BY VI4
#ENDIF

CONNECT ME4_C ME3_C BY VI3
CONNECT ME3_C ME2_C BY VI2
CONNECT ME2_C ME1_C BY VI1
CONNECT ME1_C PLY_C BY PO_CONT
CONNECT ME1_C PLY_X BY CONT_PO1_MNS

CONNECT ME4_I ME3_I BY VI3
CONNECT ME3_I ME2_I BY VI2
CONNECT ME2_I ME1_I BY VI1
CONNECT ME1_I PLY_I BY PO_CONT
CONNECT ME1_I PLY_I_RF BY PO_CONT
CONNECT ME1_I PLY_NOSD BY PO_CONT

#IFDEF RCFLOW_CCI
	CONNECT N_SPLVT_G PLY_C
	CONNECT P_SPLVT_G PLY_C
	CONNECT N_SP_G PLY_C
	CONNECT P_SP_G PLY_C
	CONNECT N_SPHVT_G PLY_C
	CONNECT P_SPHVT_G PLY_C
	CONNECT N_LL_G PLY_C
	CONNECT P_LL_G PLY_C
	CONNECT N_LLHVT_G PLY_C
	CONNECT P_LLHVT_G PLY_C
	CONNECT N_LLLVT_G PLY_C
	CONNECT P_LLLVT_G PLY_C
	CONNECT N_IO_G PLY_C
	CONNECT P_IO_G PLY_C
	CONNECT N_IO_OD_G PLY_C
	CONNECT P_IO_OD_G PLY_C
	#IFDEF SBLK_MOS
		CONNECT N_IO_G_SBLK PLY_C
		CONNECT P_IO_G_SBLK PLY_C
		CONNECT N_IO_OD_G_SBLK PLY_C
		CONNECT P_IO_OD_G_SBLK PLY_C
	#ENDIF
	CONNECT N_NVT_G PLY_C
	CONNECT N_NVT_G_12 PLY_C
	CONNECT N_NVT_TG PLY_C
	CONNECT NCAPGATE_HVT_10 PLY_C
	CONNECT NCAPGATE_HVT_12 PLY_C
	CONNECT NCAPGATE_10_1 PLY_C
	CONNECT NCAPGATE_12_1 PLY_C
	#IFDEF 1.8V_IO
		CONNECT NCAPGATE_18_1 PLY_C
	#ENDIF
	#IFDEF 2.5V_IO
		CONNECT NCAPGATE_25_1 PLY_C
		CONNECT NCAPGATE_N_25 PLY_C
	#ENDIF
	#IFDEF 3.3V_IO
		CONNECT NCAPGATE_33_1 PLY_C
		CONNECT NCAPGATE_N_33_1 PLY_C
	#ENDIF
	#IFDEF 2.5V_3.3VOD_IO
		CONNECT NCAPGATE_25_1 PLY_C
		CONNECT NCAPGATE_N_25 PLY_C
	#ENDIF
	CONNECT P_L099_LLHVT PLY_C
	CONNECT N_PD099_LLHVT PLY_C
	CONNECT N_PG099_LLHVT PLY_C
	CONNECT P_L099_SPHVT PLY_C
	CONNECT N_PD099_SPHVT PLY_C
	CONNECT N_PG099_SPHVT PLY_C
	CONNECT P_L99_SPHVT PLY_C
	CONNECT N_PD99_SPHVT PLY_C
	CONNECT N_PG99_SPHVT PLY_C
	CONNECT P_L116_LLHVT PLY_C
	CONNECT N_PD116_LLHVT PLY_C
	CONNECT N_PG116_LLHVT PLY_C
	CONNECT P_L116_SPHVT PLY_C
	CONNECT N_PD116_SPHVT PLY_C
	CONNECT N_PG116_SPHVT PLY_C
	CONNECT P_L126_LLHVT PLY_C
	CONNECT N_PD126_LLHVT PLY_C
	CONNECT N_PG126_LLHVT PLY_C
	CONNECT P_L126_SPHVT PLY_C
	CONNECT N_PD126_SPHVT PLY_C
	CONNECT N_PG126_SPHVT PLY_C
	CONNECT P_L208_LLHVT PLY_C
	CONNECT N_PD208_LLHVT PLY_C
	CONNECT N_PG208_LLHVT PLY_C
	CONNECT P_L208_SPHVT PLY_C
	CONNECT N_PD208_SPHVT PLY_C
	CONNECT N_PG208_SPHVT PLY_C
	CONNECT P_L240_SPHVT PLY_C
	CONNECT N_PD240_SPHVT PLY_C
	CONNECT N_PG240_SPHVT PLY_C
	CONNECT P_L199P4_SPHVT PLY_C
	CONNECT N_PD199P4_SPHVT PLY_C
	CONNECT N_PG199P4_SPHVT PLY_C
	CONNECT P_L199P4_LLHVT PLY_C
	CONNECT N_PD199P4_LLHVT PLY_C
	CONNECT N_PG199P4_LLHVT PLY_C
#ENDIF

CONNECT ME1_C ME1_I
CONNECT ME2_C ME2_I
CONNECT ME3_C ME3_I
CONNECT ME4_C ME4_I
CONNECT ME5_C ME5_I
CONNECT ME6_C ME6_I
CONNECT ME7_C ME7_I
CONNECT ME8_C ME8_I
CONNECT ME9_C ME9_I

CONNECT AL_RDL_C AL_RDL_I
CONNECT PLY_C PLY_I
CONNECT PLY_C PLY_I_RF
CONNECT PLY_C PLY_NOSD
CONNECT NSD_C NSD_I_S
CONNECT NSD_C NSD_I_B
CONNECT NSD_C NSD_I
CONNECT PSD_C PSD_I
CONNECT PSD_C PSD_I_S
CONNECT MMCTP_C MMCTP_I
CONNECT MMCBP_C MMCBP_I

#IFDEF SBLK_MOS
	CONNECT ME1_C PSD_C BY DIF_CONT
	CONNECT ME1_C PSD_S BY DIF_CONT
	CONNECT ME1_C PSD_NS BY DIF_CONT

	CONNECT ME1_C NSD_C BY DIF_CONT
	CONNECT ME1_C NSD_S BY DIF_CONT
	CONNECT ME1_C NSD_NS BY DIF_CONT

	CONNECT ME1_I PSD_I BY DIF_CONT
	CONNECT ME1_I NSD_I BY DIF_CONT
	CONNECT ME1_I NSD_I_B BY DIF_CONT

	CONNECT ME1_I PSD_I_S BY DIF_CONT
	CONNECT ME1_I NSD_I_S BY DIF_CONT

#ELSE
	CONNECT ME1_C PSD_C BY DIF_CONT
	CONNECT ME1_C NSD_C BY DIF_CONT

	CONNECT ME1_I PSD_I BY DIF_CONT
	CONNECT ME1_I NSD_I BY DIF_CONT
	CONNECT ME1_I NSD_I_B BY DIF_CONT

	CONNECT ME1_I PSD_I_S BY DIF_CONT
	CONNECT ME1_I NSD_I_S BY DIF_CONT

#ENDIF

#IFDEF SBLK_MOS
	SCONNECT NSD_C WEL BY NTAP
	//SCONNECT NSD_S WEL BY NTAP_S
	//SCONNECT NSD_NS WEL BY NTAP_NS

	SCONNECT PSD_C TWELL BY TTAP

	SCONNECT PSD_C PSUB BY PTAP
	//SCONNECT PSD_S PSUB BY PTAP_S
	//SCONNECT PSD_NS PSUB BY PTAP_NS

	//SCONNECT NSD_S WELL BY NTAP_S
	//SCONNECT NSD_NS WELL BY NTAP_NS
	SCONNECT NSD_C WELL BY NTAP

	SCONNECT NSD_I WEL BY NTAP
	SCONNECT NSD_I_B WEL BY NTAP
	SCONNECT PSD_I TWELL BY TTAP
	SCONNECT PSD_I PSUB BY PTAP
	SCONNECT NSD_I WELL BY NTAP
	#IFDEF RF_WELL_SHARED
		SCONNECT NSD_C N_WELL BY NTAP
		SCONNECT PSD_C PWELL BY PTAP
		SCONNECT NSD_I N_WELL BY NTAP
		SCONNECT NSD_I_B N_WELL BY NTAP
		SCONNECT PSD_I PWELL BY PTAP
	#ENDIF

#ELSE
	SCONNECT NSD_C WEL BY NTAP
	SCONNECT PSD_C TWELL BY TTAP
	SCONNECT PSD_C PSUB BY PTAP
	SCONNECT NSD_C WELL BY NTAP

	SCONNECT NSD_I WEL BY NTAP
	SCONNECT NSD_I_B WEL BY NTAP
	SCONNECT PSD_I TWELL BY TTAP
	SCONNECT PSD_I PSUB BY PTAP
	SCONNECT NSD_I WELL BY NTAP
	#IFDEF RF_WELL_SHARED
		SCONNECT NSD_C N_WELL BY NTAP
		SCONNECT PSD_C PWELL BY PTAP
		SCONNECT NSD_I N_WELL BY NTAP
		SCONNECT NSD_I_B N_WELL BY NTAP
		SCONNECT PSD_I PWELL BY PTAP
	#ENDIF

#ENDIF

SCONNECT NSD_C NPBDIF BY NNBDIF_C
SCONNECT PSD_C NPBDIF BY PPBDIF_C

SCONNECT NSD_I NPBDIF BY NNBDIF_I
SCONNECT PSD_I NPBDIF BY PPBDIF_I

CONNECT ME1_C lay1b
CONNECT ME2_C lay2b
CONNECT ME3_C lay3b
CONNECT ME4_C lay4b
CONNECT ME5_C lay5b
CONNECT ME6_C lay6b

CONNECT ME1_C lay1a
CONNECT ME2_C lay2a
CONNECT ME3_C lay3a
CONNECT ME4_C lay4a
CONNECT ME5_C lay5a
CONNECT ME6_C lay6a

CONNECT lay1a Lterm1
CONNECT lay2a Lterm1
CONNECT lay3a Lterm1
CONNECT lay4a Lterm1
CONNECT lay5a Lterm2
CONNECT lay6a Lterm2

CONNECT lay1b Lterm1
CONNECT lay2b Lterm2
CONNECT lay3b Lterm2
CONNECT lay4b Lterm2
CONNECT lay5b Lterm2
CONNECT lay6b Lterm2

CONNECT lay1a lay2a BY VI1
CONNECT lay2a lay3a BY VI2
CONNECT lay3a lay4a BY VI3

CONNECT lay2b lay3b BY VI2
CONNECT lay3b lay4b BY VI3
CONNECT lay4b lay5b BY VI4
CONNECT lay5b lay6b BY VI5

CONNECT ME1_C PNP_E_32 BY DIF_CONT
CONNECT ME1_C NPN_E_32 BY DIF_CONT

//////////////////////////
// Transistor Devices
//////////////////////////

NSD_NOCONT = NSD_I1 NOT INTERACT CONT
PSD_NOCONT = PSD_I1 NOT INTERACT CONT
SD_NOCONT = NSD_NOCONT OR PSD_NOCONT
PLY_NOSD = SIZE (PLY_I INTERACT (NSD_NOCONT OR PSD_NOCONT)) BY 0.05
PLY_I_RF = PLY_I NOT PLY_NOSD

NSD_I_RF = NSD_I1 NOT NSD_NOCONT
PSD_I_RF = PSD_I1 NOT PSD_NOCONT
NSD_I_S = NSD_I_RF INTERACT RFMOS_S
NSD_I_B = NSD_I1 NOT INTERACT PLY_I

NSD_I = (NSD_I_RF NOT NSD_I_S) NOT NSD_I_B
PSD_I_S = PSD_I_RF INTERACT RFMOS_S
PSD_I = PSD_I_RF NOT PSD_I_S

#IFDEF PEXRUN_MC_HSPICE
	DEVICE N_10_SPLVT N_SPLVT_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_SPLVT_G PLY_C N_SPLVT_G DIFF BNDIFF
	DEVICE N_10_SPLVT N_SPLVT_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_SPLVT_G PLY_C N_SPLVT_G DIFF BNDIFF

	DEVICE P_10_SPLVT P_SPLVT_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
	CMACRO MOSLOD P_SPLVT_G PLY_C P_SPLVT_G DIFF BPDIFF

	DEVICE N_10_SP N_SP_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_SP_G PLY_C N_SP_G DIFF BNDIFF
	DEVICE N_10_SP N_SP_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_SP_G PLY_C N_SP_G DIFF BNDIFF

	DEVICE P_10_SP P_SP_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
	CMACRO MOSLOD P_SP_G PLY_C P_SP_G DIFF BPDIFF

	DEVICE N_10_SPHVT N_SPHVT_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_SPHVT_G PLY_C N_SPHVT_G DIFF BNDIFF
	DEVICE N_10_SPHVT N_SPHVT_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF> <BNDIFF>
	CMACRO MOSLOD N_SPHVT_G PLY_C N_SPHVT_G DIFF BNDIFF

	DEVICE P_10_SPHVT P_SPHVT_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
	CMACRO MOSLOD P_SPHVT_G PLY_C P_SPHVT_G DIFF BPDIFF

	DEVICE N_12_LL N_LL_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_LL_G PLY_C N_LL_G DIFF BNDIFF
	DEVICE N_12_LL N_LL_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_LL_G PLY_C N_LL_G DIFF BNDIFF

	DEVICE P_12_LL P_LL_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
	CMACRO MOSLOD P_LL_G PLY_C P_LL_G DIFF BPDIFF

	DEVICE N_12_LLHVT N_LLHVT_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_LLHVT_G PLY_C N_LLHVT_G DIFF BNDIFF
	DEVICE N_12_LLHVT N_LLHVT_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_LLHVT_G PLY_C N_LLHVT_G DIFF BNDIFF

	DEVICE P_12_LLHVT P_LLHVT_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
	CMACRO MOSLOD P_LLHVT_G PLY_C P_LLHVT_G DIFF BPDIFF

	DEVICE N_12_LLLVT N_LLLVT_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_LLLVT_G PLY_C N_LLLVT_G DIFF BNDIFF
	DEVICE N_12_LLLVT N_LLLVT_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
	CMACRO MOSLOD N_LLLVT_G PLY_C N_LLLVT_G DIFF BNDIFF

	DEVICE P_12_LLLVT P_LLLVT_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
	CMACRO MOSLOD P_LLLVT_G PLY_C P_LLLVT_G DIFF BPDIFF

#ELSE
	#IFDEF PEXRUN
		DEVICE MN(N_10_SPLVT) N_SPLVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_SPLVT_G NSD_C DIFF BNDIFF
		DEVICE MN(N_10_SPLVT) N_SPLVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_SPLVT_G NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_10_SPLVT) L L 3
		TRACE PROPERTY MN(N_10_SPLVT) W W 3

		DEVICE MP(P_10_SPLVT) P_SPLVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
		CMACRO MOSPROP P_SPLVT_G PSD_C DIFF BPDIFF
		TRACE PROPERTY MP(P_10_SPLVT) L L 3
		TRACE PROPERTY MP(P_10_SPLVT) W W 3

		DEVICE MN(N_10_SP) N_SP_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_SP_G NSD_C DIFF BNDIFF
		DEVICE MN(N_10_SP) N_SP_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_SP_G NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_10_SP) L L 3
		TRACE PROPERTY MN(N_10_SP) W W 3

		DEVICE MP(P_10_SP) P_SP_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
		CMACRO MOSPROP P_SP_G PSD_C DIFF BPDIFF
		TRACE PROPERTY MP(P_10_SP) L L 3
		TRACE PROPERTY MP(P_10_SP) W W 3

		DEVICE MN(N_10_SPHVT) N_SPHVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_SPHVT_G NSD_C DIFF BNDIFF
		DEVICE MN(N_10_SPHVT) N_SPHVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF> <BNDIFF>
		CMACRO MOSPROP N_SPHVT_G NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_10_SPHVT) L L 3
		TRACE PROPERTY MN(N_10_SPHVT) W W 3

		DEVICE MP(P_10_SPHVT) P_SPHVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
		CMACRO MOSPROP P_SPHVT_G PSD_C DIFF BPDIFF
		TRACE PROPERTY MP(P_10_SPHVT) L L 3
		TRACE PROPERTY MP(P_10_SPHVT) W W 3

		DEVICE MN(N_12_LL) N_LL_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_LL_G NSD_C DIFF BNDIFF
		DEVICE MN(N_12_LL) N_LL_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_LL_G NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_12_LL) L L 3
		TRACE PROPERTY MN(N_12_LL) W W 3

		DEVICE MP(P_12_LL) P_LL_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
		CMACRO MOSPROP P_LL_G PSD_C DIFF BPDIFF
		TRACE PROPERTY MP(P_12_LL) L L 3
		TRACE PROPERTY MP(P_12_LL) W W 3

		DEVICE MN(N_12_LLHVT) N_LLHVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_LLHVT_G NSD_C DIFF BNDIFF
		DEVICE MN(N_12_LLHVT) N_LLHVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_LLHVT_G NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_12_LLHVT) L L 3
		TRACE PROPERTY MN(N_12_LLHVT) W W 3

		DEVICE MP(P_12_LLHVT) P_LLHVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
		CMACRO MOSPROP P_LLHVT_G PSD_C DIFF BPDIFF
		TRACE PROPERTY MP(P_12_LLHVT) L L 3
		TRACE PROPERTY MP(P_12_LLHVT) W W 3

		DEVICE MN(N_12_LLLVT) N_LLLVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_LLLVT_G NSD_C DIFF BNDIFF
		DEVICE MN(N_12_LLLVT) N_LLLVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_LLLVT_G NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_12_LLLVT) L L 3
		TRACE PROPERTY MN(N_12_LLLVT) W W 3

		DEVICE MP(P_12_LLLVT) P_LLLVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
		CMACRO MOSPROP P_LLLVT_G PSD_C DIFF BPDIFF
		TRACE PROPERTY MP(P_12_LLLVT) L L 3
		TRACE PROPERTY MP(P_12_LLLVT) W W 3
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE MN(N_10_SPLVT) N_SPLVT_G N_SPLVT_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SPLVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_10_SPLVT) N_SPLVT_G N_SPLVT_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SPLVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_10_SPLVT) L L 3
			TRACE PROPERTY MN(N_10_SPLVT) W W 3

			DEVICE MP(P_10_SPLVT) P_SPLVT_G P_SPLVT_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_SPLVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_10_SPLVT) L L 3
			TRACE PROPERTY MP(P_10_SPLVT) W W 3

			DEVICE MN(N_10_SP) N_SP_G N_SP_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SP_G NSD_C DIFF BNDIFF
			DEVICE MN(N_10_SP) N_SP_G N_SP_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SP_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_10_SP) L L 3
			TRACE PROPERTY MN(N_10_SP) W W 3

			DEVICE MP(P_10_SP) P_SP_G P_SP_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_SP_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_10_SP) L L 3
			TRACE PROPERTY MP(P_10_SP) W W 3

			DEVICE MN(N_10_SPHVT) N_SPHVT_G N_SPHVT_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SPHVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_10_SPHVT) N_SPHVT_G N_SPHVT_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF> <BNDIFF>
			CMACRO MOSPROP N_SPHVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_10_SPHVT) L L 3
			TRACE PROPERTY MN(N_10_SPHVT) W W 3

			DEVICE MP(P_10_SPHVT) P_SPHVT_G P_SPHVT_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_SPHVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_10_SPHVT) L L 3
			TRACE PROPERTY MP(P_10_SPHVT) W W 3

			DEVICE MN(N_12_LL) N_LL_G N_LL_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LL_G NSD_C DIFF BNDIFF
			DEVICE MN(N_12_LL) N_LL_G N_LL_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LL_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_12_LL) L L 3
			TRACE PROPERTY MN(N_12_LL) W W 3

			DEVICE MP(P_12_LL) P_LL_G P_LL_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_LL_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_12_LL) L L 3
			TRACE PROPERTY MP(P_12_LL) W W 3

			DEVICE MN(N_12_LLHVT) N_LLHVT_G N_LLHVT_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLHVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_12_LLHVT) N_LLHVT_G N_LLHVT_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLHVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_12_LLHVT) L L 3
			TRACE PROPERTY MN(N_12_LLHVT) W W 3

			DEVICE MP(P_12_LLHVT) P_LLHVT_G P_LLHVT_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_LLHVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_12_LLHVT) L L 3
			TRACE PROPERTY MP(P_12_LLHVT) W W 3

			DEVICE MN(N_12_LLLVT) N_LLLVT_G N_LLLVT_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLLVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_12_LLLVT) N_LLLVT_G N_LLLVT_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLLVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_12_LLLVT) L L 3
			TRACE PROPERTY MN(N_12_LLLVT) W W 3

			DEVICE MP(P_12_LLLVT) P_LLLVT_G P_LLLVT_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_LLLVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_12_LLLVT) L L 3
			TRACE PROPERTY MP(P_12_LLLVT) W W 3
		#ELSE
			DEVICE MN(N_10_SPLVT) N_SPLVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SPLVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_10_SPLVT) N_SPLVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SPLVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_10_SPLVT) L L 3
			TRACE PROPERTY MN(N_10_SPLVT) W W 3

			DEVICE MP(P_10_SPLVT) P_SPLVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_SPLVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_10_SPLVT) L L 3
			TRACE PROPERTY MP(P_10_SPLVT) W W 3

			DEVICE MN(N_10_SP) N_SP_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SP_G NSD_C DIFF BNDIFF
			DEVICE MN(N_10_SP) N_SP_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SP_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_10_SP) L L 3
			TRACE PROPERTY MN(N_10_SP) W W 3

			DEVICE MP(P_10_SP) P_SP_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_SP_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_10_SP) L L 3
			TRACE PROPERTY MP(P_10_SP) W W 3

			DEVICE MN(N_10_SPHVT) N_SPHVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_SPHVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_10_SPHVT) N_SPHVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF> <BNDIFF>
			CMACRO MOSPROP N_SPHVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_10_SPHVT) L L 3
			TRACE PROPERTY MN(N_10_SPHVT) W W 3

			DEVICE MP(P_10_SPHVT) P_SPHVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_SPHVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_10_SPHVT) L L 3
			TRACE PROPERTY MP(P_10_SPHVT) W W 3

			DEVICE MN(N_12_LL) N_LL_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LL_G NSD_C DIFF BNDIFF
			DEVICE MN(N_12_LL) N_LL_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LL_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_12_LL) L L 3
			TRACE PROPERTY MN(N_12_LL) W W 3

			DEVICE MP(P_12_LL) P_LL_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_LL_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_12_LL) L L 3
			TRACE PROPERTY MP(P_12_LL) W W 3

			DEVICE MN(N_12_LLHVT) N_LLHVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLHVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_12_LLHVT) N_LLHVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLHVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_12_LLHVT) L L 3
			TRACE PROPERTY MN(N_12_LLHVT) W W 3

			DEVICE MP(P_12_LLHVT) P_LLHVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_LLHVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_12_LLHVT) L L 3
			TRACE PROPERTY MP(P_12_LLHVT) W W 3

			DEVICE MN(N_12_LLLVT) N_LLLVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLLVT_G NSD_C DIFF BNDIFF
			DEVICE MN(N_12_LLLVT) N_LLLVT_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_LLLVT_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_12_LLLVT) L L 3
			TRACE PROPERTY MN(N_12_LLLVT) W W 3

			DEVICE MP(P_12_LLLVT) P_LLLVT_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_LLLVT_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_12_LLLVT) L L 3
			TRACE PROPERTY MP(P_12_LLLVT) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// 1.2V SP RF MOS
D_N_SP_G_RF_A = D_N_SP_G_RF NOT PO1
N_CONT_10_1 = CONT AND D_N_SP_G_RF_A
N_CONT_10_2 = ME1_I AND D_N_SP_G_RF_A
N_CONT_10_3 = SIZE N_CONT_10_2 BY -0.06
N_CONT_10_4 = (SIZE(EXTENTS (N_CONT_10_1 OR N_CONT_10_3)) BY 0.06) AND D_N_SP_G_RF_A

D_N_SP_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_SP_G_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I N_SP_G_RF BY PO_CONT
	D_N_SP_G_RF_T1 = PSUB INTERACT N_SP_G_RF
	CONNECT PSD_C D_N_SP_G_RF_T1 BY PTAP
	DEVICE N_10_SPRF D_N_SP_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_SP_G_RF_T1(B) <N_SP_G_RF> <N_CONT_10_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_SP_G_RF)
		WF = PERIMETER_COINCIDE(N_SP_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_SP_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(N_CONT_10_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_10_SPRF LF LF 3
	TRACE PROPERTY N_10_SPRF WF WF 3
	TRACE PROPERTY N_10_SPRF NF NF 3
	TRACE PROPERTY N_10_SPRF CON CON 3
#ELSE
	DEVICE N_10_SPRF D_N_SP_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_SP_G_RF> <N_CONT_10_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_SP_G_RF)
		WF = PERIMETER_COINCIDE(N_SP_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_SP_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(N_CONT_10_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_10_SPRF LF LF 3
	TRACE PROPERTY N_10_SPRF WF WF 3
	TRACE PROPERTY N_10_SPRF NF NF 3
	TRACE PROPERTY N_10_SPRF CON CON 3
#ENDIF

D_P_SP_G_RF_A = D_P_SP_G_RF NOT PO1
P_CONT_10_1 = CONT AND D_P_SP_G_RF_A
P_CONT_10_2 = ME1_I AND D_P_SP_G_RF_A
P_CONT_10_3 = SIZE P_CONT_10_2 BY -0.06
P_CONT_10_4 = (SIZE(EXTENTS (P_CONT_10_1 OR P_CONT_10_3)) BY 0.06) AND D_P_SP_G_RF_A

D_P_SP_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_SP_G_RF
RFD_P_SP_G_RF = NWELL ENCLOSE D_P_SP_G_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I P_SP_G_RF BY PO_CONT
	D_P_SP_G_RF_T1 = PSUB INTERACT RFD_P_SP_G_RF
	D_P_SP_G_RF_T2 = WEL INTERACT RFD_P_SP_G_RF
	CONNECT PSD_C D_P_SP_G_RF_T1 BY PTAP
	CONNECT NSD_I_B D_P_SP_G_RF_T2 BY NTAP
	DEVICE P_10_SPRF RFD_P_SP_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_SP_G_RF_T2(B) D_P_SP_G_RF_T1(PSUB) <P_SP_G_RF> <P_CONT_10_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(P_SP_G_RF)
		WF = PERIMETER_COINCIDE(P_SP_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(P_SP_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(P_CONT_10_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY P_10_SPRF LF LF 3
	TRACE PROPERTY P_10_SPRF WF WF 3
	TRACE PROPERTY P_10_SPRF NF NF 3
	TRACE PROPERTY P_10_SPRF CON CON 3
#ELSE
	DEVICE P_10_SPRF RFD_P_SP_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_SP_G_RF> <P_CONT_10_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(P_SP_G_RF)
		WF = PERIMETER_COINCIDE(P_SP_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(P_SP_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(P_CONT_10_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY P_10_SPRF LF LF 3
	TRACE PROPERTY P_10_SPRF WF WF 3
	TRACE PROPERTY P_10_SPRF NF NF 3
	TRACE PROPERTY P_10_SPRF CON CON 3
#ENDIF

// 1.2V SP Triple Well RF NMOS
D_N_SPBPW_G_RF_A = D_N_SPBPW_G_RF NOT PO1
T_CONT_10_1 = CONT AND D_N_SPBPW_G_RF_A
T_CONT_10_2 = ME1_I AND D_N_SPBPW_G_RF_A
T_CONT_10_3 = SIZE T_CONT_10_2 BY -0.06
T_CONT_10_4 = (SIZE(EXTENTS (T_CONT_10_1 OR T_CONT_10_3)) BY 0.06) AND D_N_SPBPW_G_RF_A

D_N_SPBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_SPBPW_G_RF
RFD_N_SPBPW_G_RF = NWEL ENCLOSE D_N_SPBPW_G_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I N_SPBPW_G_RF BY PO_CONT
	D_N_SPBPW_G_RF_T1 = PSUB INTERACT RFD_N_SPBPW_G_RF
	D_N_SPBPW_G_RF_T2 = WEL INTERACT RFD_N_SPBPW_G_RF
	D_N_SPBPW_G_RF_T3 = TWELL INTERACT RFD_N_SPBPW_G_RF
	CONNECT PSD_C D_N_SPBPW_G_RF_T1 BY PTAP
	CONNECT NSD_I_B D_N_SPBPW_G_RF_T2 BY NTAP
	CONNECT PSD_I D_N_SPBPW_G_RF_T3 BY TTAP
	DEVICE N_BPW_10_SPRF RFD_N_SPBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_SPBPW_G_RF_T3(B) D_N_SPBPW_G_RF_T2(NW) D_N_SPBPW_G_RF_T1(PSUB) <N_SPBPW_G_RF> <T_CONT_10_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_SPBPW_G_RF)
		WF = PERIMETER_COINCIDE(N_SPBPW_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_SPBPW_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(T_CONT_10_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_BPW_10_SPRF LF LF 3
	TRACE PROPERTY N_BPW_10_SPRF WF WF 3
	TRACE PROPERTY N_BPW_10_SPRF NF NF 3
	TRACE PROPERTY N_BPW_10_SPRF CON CON 3
#ELSE
	DEVICE N_BPW_10_SPRF RFD_N_SPBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_SPBPW_G_RF> <T_CONT_10_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_SPBPW_G_RF)
		WF = PERIMETER_COINCIDE(N_SPBPW_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_SPBPW_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(T_CONT_10_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_BPW_10_SPRF LF LF 3
	TRACE PROPERTY N_BPW_10_SPRF WF WF 3
	TRACE PROPERTY N_BPW_10_SPRF NF NF 3
	TRACE PROPERTY N_BPW_10_SPRF CON CON 3
#ENDIF

// 1.2V LL RF MOS
D_N_LL_G_RF_A = D_N_LL_G_RF NOT PO1
N_CONT_12_1 = CONT AND D_N_LL_G_RF_A
N_CONT_12_2 = ME1_I AND D_N_LL_G_RF_A
N_CONT_12_3 = SIZE N_CONT_12_2 BY -0.06
N_CONT_12_4 = (SIZE(EXTENTS (N_CONT_12_1 OR N_CONT_12_3)) BY 0.06) AND D_N_LL_G_RF_A

D_N_LL_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_LL_G_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I N_LL_G_RF BY PO_CONT
	D_N_LL_G_RF_T1 = PSUB INTERACT N_LL_G_RF
	CONNECT PSD_C D_N_LL_G_RF_T1 BY PTAP
	DEVICE N_12_LLRF D_N_LL_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_LL_G_RF_T1(B) <N_LL_G_RF> <N_CONT_12_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_LL_G_RF)
		WF = PERIMETER_COINCIDE(N_LL_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_LL_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(N_CONT_12_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_12_LLRF LF LF 3
	TRACE PROPERTY N_12_LLRF WF WF 3
	TRACE PROPERTY N_12_LLRF NF NF 3
	TRACE PROPERTY N_12_LLRF CON CON 3
#ELSE
	DEVICE N_12_LLRF D_N_LL_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_LL_G_RF> <N_CONT_12_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_LL_G_RF)
		WF = PERIMETER_COINCIDE(N_LL_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_LL_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(N_CONT_12_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_12_LLRF LF LF 3
	TRACE PROPERTY N_12_LLRF WF WF 3
	TRACE PROPERTY N_12_LLRF NF NF 3
	TRACE PROPERTY N_12_LLRF CON CON 3
#ENDIF

#IFDEF RF_WELL_SHARED
	N_WELL = DFM PROPERTY NWEL
	SHARNT = DFM PROPERTY N_WELL D_P_LL_G_RF D_N_LLBPW_G_RF [ COUNT_P = COUNT(D_P_LL_G_RF) ] [ COUNT_T = COUNT(D_N_LLBPW_G_RF) ] [ NAREA = AREA(N_WELL) ] [ NPERIM = PERIM(N_WELL) ]
	SHARNT2 = DFM PROPERTY TWELL D_N_LLBPW_G_RF [ COUNT_T = COUNT(D_N_LLBPW_G_RF) ] [ TAREA = AREA(TWELL) ] [ TPERIM = PERIM(TWELL) ]
	
	D_P_LL_G_RF_A = D_P_LL_G_RF NOT PO1
	P_CONT_12_1 = CONT AND D_P_LL_G_RF_A
	P_CONT_12_2 = ME1_I AND D_P_LL_G_RF_A
	P_CONT_12_3 = SIZE P_CONT_12_2 BY -0.06
	P_CONT_12_4 = (SIZE(EXTENTS (P_CONT_12_1 OR P_CONT_12_3)) BY 0.06) AND D_P_LL_G_RF_A
	
	D_P_LL_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_LL_G_RF
	RFD_P_LL_G_RF = NWELL ENCLOSE D_P_LL_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_LL_G_RF BY PO_CONT
		D_P_LL_G_RF_T1 = PWELL INTERACT RFD_P_LL_G_RF
		D_P_LL_G_RF_T2 = N_WELL INTERACT RFD_P_LL_G_RF
		CONNECT PSD_C D_P_LL_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_LL_G_RF_T2 BY NTAP
		DEVICE P_12_LLRF D_P_LL_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_LL_G_RF_T2(B) D_P_LL_G_RF_T1(PSUB) <P_LL_G_RF> <P_CONT_12_4> <SHARNT>
		[
			PROPERTY LF,WF,NF,CON,p_area_nw,p_pj_nw
			NF = COUNT(P_LL_G_RF)
			WF = PERIMETER_COINCIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_12_4)/WF/(NF+1)/0.2E-6)
			multiple_number = DFM_NUMeric_VALue(SHARNT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT,"COUNT_T")
			p_area_nw = DFM_NUMeric_VALue(SHARNT,"NAREA")*1e-12/multiple_number
			p_pj_nw = DFM_NUMeric_VALue(SHARNT,"NPERIM")*1e-6/multiple_number
		]
		TRACE PROPERTY P_12_LLRF LF LF 3
		TRACE PROPERTY P_12_LLRF WF WF 3
		TRACE PROPERTY P_12_LLRF NF NF 3
		TRACE PROPERTY P_12_LLRF CON CON 3
	#ELSE
		DEVICE P_12_LLRF D_P_LL_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) N_WELL(B) PWELL(PSUB) <P_LL_G_RF> <P_CONT_12_4> <SHARNT>
		[
			PROPERTY LF,WF,NF,CON,p_area_nw,p_pj_nw
			NF = COUNT(P_LL_G_RF)
			WF = PERIMETER_COINCIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_12_4)/WF/(NF+1)/0.2E-6)
			multiple_number = DFM_NUMeric_VALue(SHARNT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT,"COUNT_T")
			p_area_nw = DFM_NUMeric_VALue(SHARNT,"NAREA")*1e-12/multiple_number
			p_pj_nw = DFM_NUMeric_VALue(SHARNT,"NPERIM")*1e-6/multiple_number
		]
		TRACE PROPERTY P_12_LLRF LF LF 3
		TRACE PROPERTY P_12_LLRF WF WF 3
		TRACE PROPERTY P_12_LLRF NF NF 3
		TRACE PROPERTY P_12_LLRF CON CON 3
	#ENDIF
	
	// 1.2V LL Triple Well RF NMOS
	
	D_N_LLBPW_G_RF_A = D_N_LLBPW_G_RF NOT PO1
	T_CONT_12_1 = CONT AND D_N_LLBPW_G_RF_A
	T_CONT_12_2 = ME1_I AND D_N_LLBPW_G_RF_A
	T_CONT_12_3 = SIZE T_CONT_12_2 BY -0.06
	T_CONT_12_4 = (SIZE(EXTENTS (T_CONT_12_1 OR T_CONT_12_3)) BY 0.06) AND D_N_LLBPW_G_RF_A
	
	D_N_LLBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_LLBPW_G_RF
	RFD_N_LLBPW_G_RF = NWEL ENCLOSE D_N_LLBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_LLBPW_G_RF BY PO_CONT
		D_N_LLBPW_G_RF_T1 = PWELL INTERACT RFD_N_LLBPW_G_RF
		D_N_LLBPW_G_RF_T2 = N_WELL INTERACT RFD_N_LLBPW_G_RF
		D_N_LLBPW_G_RF_T3 = TWELL INTERACT RFD_N_LLBPW_G_RF
		CONNECT PSD_C D_N_LLBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_LLBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_LLBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_12_LLRF D_N_LLBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_LLBPW_G_RF_T3(B) D_N_LLBPW_G_RF_T2(NW) D_N_LLBPW_G_RF_T1(PSUB) <N_LLBPW_G_RF> <T_CONT_12_4> <SHARNT> <SHARNT2>
		[
			PROPERTY LF,WF,NF,CON,p_area_nw,p_pj_nw,p_area_tw,p_pj_tw
			NF = COUNT(N_LLBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_12_4)/WF/(NF+1)/0.2E-6)
			multiple_number = DFM_NUMeric_VALue(SHARNT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT,"COUNT_T")
			p_area_nw = DFM_NUMeric_VALue(SHARNT,"NAREA")*1e-12/multiple_number
			p_pj_nw = DFM_NUMeric_VALue(SHARNT,"NPERIM")*1e-6/multiple_number
			multiple_number2 = DFM_NUMeric_VALue(SHARNT2,"COUNT_T")
			p_area_tw = DFM_NUMeric_VALue(SHARNT2,"TAREA")*1e-12/multiple_number2
			p_pj_tw = DFM_NUMeric_VALue(SHARNT2,"TPERIM")*1e-6/multiple_number2
		]
		TRACE PROPERTY N_BPW_12_LLRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLRF CON CON 3
	#ELSE
		DEVICE N_BPW_12_LLRF D_N_LLBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) N_WELL(NW) PWELL(PSUB) <N_LLBPW_G_RF> <T_CONT_12_4> <SHARNT> <SHARNT2>
		[
			PROPERTY LF,WF,NF,CON,p_area_nw,p_pj_nw,p_area_tw,p_pj_tw
			NF = COUNT(N_LLBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_12_4)/WF/(NF+1)/0.2E-6)
			multiple_number = DFM_NUMeric_VALue(SHARNT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT,"COUNT_T")
			p_area_nw = DFM_NUMeric_VALue(SHARNT,"NAREA")*1e-12/multiple_number
			p_pj_nw = DFM_NUMeric_VALue(SHARNT,"NPERIM")*1e-6/multiple_number
			multiple_number2 = DFM_NUMeric_VALue(SHARNT2,"COUNT_T")
			p_area_tw = DFM_NUMeric_VALue(SHARNT2,"TAREA")*1e-12/multiple_number2
			p_pj_tw = DFM_NUMeric_VALue(SHARNT2,"TPERIM")*1e-6/multiple_number2
		]
		TRACE PROPERTY N_BPW_12_LLRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLRF CON CON 3
	#ENDIF
#ELSE
	D_P_LL_G_RF_A = D_P_LL_G_RF NOT PO1
	P_CONT_12_1 = CONT AND D_P_LL_G_RF_A
	P_CONT_12_2 = ME1_I AND D_P_LL_G_RF_A
	P_CONT_12_3 = SIZE P_CONT_12_2 BY -0.06
	P_CONT_12_4 = (SIZE(EXTENTS (P_CONT_12_1 OR P_CONT_12_3)) BY 0.06) AND D_P_LL_G_RF_A
	
	D_P_LL_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_LL_G_RF
	RFD_P_LL_G_RF = NWELL ENCLOSE D_P_LL_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_LL_G_RF BY PO_CONT
		D_P_LL_G_RF_T1 = PSUB INTERACT RFD_P_LL_G_RF
		D_P_LL_G_RF_T2 = WEL INTERACT RFD_P_LL_G_RF
		CONNECT PSD_C D_P_LL_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_LL_G_RF_T2 BY NTAP
		DEVICE P_12_LLRF RFD_P_LL_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_LL_G_RF_T2(B) D_P_LL_G_RF_T1(PSUB) <P_LL_G_RF> <P_CONT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_LL_G_RF)
			WF = PERIMETER_COINCIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_12_LLRF LF LF 3
		TRACE PROPERTY P_12_LLRF WF WF 3
		TRACE PROPERTY P_12_LLRF NF NF 3
		TRACE PROPERTY P_12_LLRF CON CON 3
	#ELSE
		DEVICE P_12_LLRF RFD_P_LL_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_LL_G_RF> <P_CONT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_LL_G_RF)
			WF = PERIMETER_COINCIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LL_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_12_LLRF LF LF 3
		TRACE PROPERTY P_12_LLRF WF WF 3
		TRACE PROPERTY P_12_LLRF NF NF 3
		TRACE PROPERTY P_12_LLRF CON CON 3
	#ENDIF
	
	// 1.2V LL Triple Well RF NMOS
	
	D_N_LLBPW_G_RF_A = D_N_LLBPW_G_RF NOT PO1
	T_CONT_12_1 = CONT AND D_N_LLBPW_G_RF_A
	T_CONT_12_2 = ME1_I AND D_N_LLBPW_G_RF_A
	T_CONT_12_3 = SIZE T_CONT_12_2 BY -0.06
	T_CONT_12_4 = (SIZE(EXTENTS (T_CONT_12_1 OR T_CONT_12_3)) BY 0.06) AND D_N_LLBPW_G_RF_A
	
	D_N_LLBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_LLBPW_G_RF
	RFD_N_LLBPW_G_RF = NWEL ENCLOSE D_N_LLBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_LLBPW_G_RF BY PO_CONT
		D_N_LLBPW_G_RF_T1 = PSUB INTERACT RFD_N_LLBPW_G_RF
		D_N_LLBPW_G_RF_T2 = WEL INTERACT RFD_N_LLBPW_G_RF
		D_N_LLBPW_G_RF_T3 = TWELL INTERACT RFD_N_LLBPW_G_RF
		CONNECT PSD_C D_N_LLBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_LLBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_LLBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_12_LLRF RFD_N_LLBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_LLBPW_G_RF_T3(B) D_N_LLBPW_G_RF_T2(NW) D_N_LLBPW_G_RF_T1(PSUB) <N_LLBPW_G_RF> <T_CONT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_LLBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_12_LLRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLRF CON CON 3
	#ELSE
		DEVICE N_BPW_12_LLRF RFD_N_LLBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_LLBPW_G_RF> <T_CONT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_LLBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_12_LLRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLRF CON CON 3
	#ENDIF
#ENDIF

// 1.2V LLLVT RF MOS
D_N_LLLVT_G_RF_A = D_N_LLLVT_G_RF NOT PO1
N_CONT_LVT_12_1 = CONT AND D_N_LLLVT_G_RF_A
N_CONT_LVT_12_2 = ME1_I AND D_N_LLLVT_G_RF_A
N_CONT_LVT_12_3 = SIZE N_CONT_LVT_12_2 BY -0.06
N_CONT_LVT_12_4 = (SIZE(EXTENTS (N_CONT_LVT_12_1 OR N_CONT_LVT_12_3)) BY 0.06) AND D_N_LLLVT_G_RF_A

D_N_LLLVT_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_LLLVT_G_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I N_LLLVT_G_RF BY PO_CONT
	D_N_LLLVT_G_RF_T1 = PSUB INTERACT N_LLLVT_G_RF
	CONNECT PSD_C D_N_LLLVT_G_RF_T1 BY PTAP
	DEVICE N_12_LLLVTRF D_N_LLLVT_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_LLLVT_G_RF_T1(B) <N_LLLVT_G_RF> <N_CONT_LVT_12_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_LLLVT_G_RF)
		WF = PERIMETER_COINCIDE(N_LLLVT_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_LLLVT_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(N_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_12_LLLVTRF LF LF 3
	TRACE PROPERTY N_12_LLLVTRF WF WF 3
	TRACE PROPERTY N_12_LLLVTRF NF NF 3
	TRACE PROPERTY N_12_LLLVTRF CON CON 3
#ELSE
	DEVICE N_12_LLLVTRF D_N_LLLVT_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_LLLVT_G_RF> <N_CONT_LVT_12_4>
	[
		PROPERTY LF,WF,NF,CON
		NF = COUNT(N_LLLVT_G_RF)
		WF = PERIMETER_COINCIDE(N_LLLVT_G_RF,PLY_I_RF)/(2*NF)
		LF = PERIMETER_INSIDE(N_LLLVT_G_RF,PLY_I_RF)/(2*NF)
		CON = TRUNC(AREA(N_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
	]
	TRACE PROPERTY N_12_LLLVTRF LF LF 3
	TRACE PROPERTY N_12_LLLVTRF WF WF 3
	TRACE PROPERTY N_12_LLLVTRF NF NF 3
	TRACE PROPERTY N_12_LLLVTRF CON CON 3
#ENDIF

#IFDEF RF_WELL_SHARED
	SHARNT_LVT = DFM PROPERTY N_WELL D_P_LLLVT_G_RF D_N_LLLVTBPW_G_RF [ COUNT_P = COUNT(D_P_LLLVT_G_RF) ] [ COUNT_T = COUNT(D_N_LLLVTBPW_G_RF) ] [ NAREA = AREA(N_WELL) ] [ NPERIM = PERIM(N_WELL) ]
	SHARNT_LVT2 = DFM PROPERTY TWELL D_N_LLLVTBPW_G_RF [ COUNT_T = COUNT(D_N_LLLVTBPW_G_RF) ] [ TAREA = AREA(TWELL) ] [ TPERIM = PERIM(TWELL) ]
	
	D_P_LLLVT_G_RF_A = D_P_LLLVT_G_RF NOT PO1
	P_CONT_LVT_12_1 = CONT AND D_P_LLLVT_G_RF_A
	P_CONT_LVT_12_2 = ME1_I AND D_P_LLLVT_G_RF_A
	P_CONT_LVT_12_3 = SIZE P_CONT_LVT_12_2 BY -0.06
	P_CONT_LVT_12_4 = (SIZE(EXTENTS (P_CONT_LVT_12_1 OR P_CONT_LVT_12_3)) BY 0.06) AND D_P_LLLVT_G_RF_A
	
	D_P_LLLVT_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_LLLVT_G_RF
	RFD_P_LLLVT_G_RF = NWELL ENCLOSE D_P_LLLVT_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_LLLVT_G_RF BY PO_CONT
		D_P_LLLVT_G_RF_T1 = PWELL INTERACT RFD_P_LLLVT_G_RF
		D_P_LLLVT_G_RF_T2 = N_WELL INTERACT RFD_P_LLLVT_G_RF
		CONNECT PSD_C D_P_LLLVT_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_LLLVT_G_RF_T2 BY NTAP
		DEVICE P_12_LLLVTRF D_P_LLLVT_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_LLLVT_G_RF_T2(B) D_P_LLLVT_G_RF_T1(PSUB) <P_LLLVT_G_RF> <P_CONT_LVT_12_4> <SHARNT_LVT>
		[
			PROPERTY LF,WF,NF,CON//,p_area_nw,p_pj_nw
			NF = COUNT(P_LLLVT_G_RF)
			WF = PERIMETER_COINCIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
			//multiple_number = DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_T")
			//p_area_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NAREA")*1e-12/multiple_number
			//p_pj_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NPERIM")*1e-6/multiple_number
		]
		TRACE PROPERTY P_12_LLLVTRF LF LF 3
		TRACE PROPERTY P_12_LLLVTRF WF WF 3
		TRACE PROPERTY P_12_LLLVTRF NF NF 3
		TRACE PROPERTY P_12_LLLVTRF CON CON 3
	#ELSE
		DEVICE P_12_LLLVTRF D_P_LLLVT_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) N_WELL(B) PWELL(PSUB) <P_LLLVT_G_RF> <P_CONT_LVT_12_4> <SHARNT_LVT>
		[
			PROPERTY LF,WF,NF,CON//,p_area_nw,p_pj_nw
			NF = COUNT(P_LLLVT_G_RF)
			WF = PERIMETER_COINCIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
			//multiple_number = DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_T")
			//p_area_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NAREA")*1e-12/multiple_number
			//p_pj_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NPERIM")*1e-6/multiple_number
		]
		TRACE PROPERTY P_12_LLLVTRF LF LF 3
		TRACE PROPERTY P_12_LLLVTRF WF WF 3
		TRACE PROPERTY P_12_LLLVTRF NF NF 3
		TRACE PROPERTY P_12_LLLVTRF CON CON 3
	#ENDIF
	
	// 1.2V LLLVT Triple Well RF NMOS
	
	D_N_LLLVTBPW_G_RF_A = D_N_LLLVTBPW_G_RF NOT PO1
	T_CONT_LVT_12_1 = CONT AND D_N_LLLVTBPW_G_RF_A
	T_CONT_LVT_12_2 = ME1_I AND D_N_LLLVTBPW_G_RF_A
	T_CONT_LVT_12_3 = SIZE T_CONT_LVT_12_2 BY -0.06
	T_CONT_LVT_12_4 = (SIZE(EXTENTS (T_CONT_LVT_12_1 OR T_CONT_LVT_12_3)) BY 0.06) AND D_N_LLLVTBPW_G_RF_A
	
	D_N_LLLVTBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_LLLVTBPW_G_RF
	RFD_N_LLLVTBPW_G_RF = NWEL ENCLOSE D_N_LLLVTBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_LLLVTBPW_G_RF BY PO_CONT
		D_N_LLLVTBPW_G_RF_T1 = PWELL INTERACT RFD_N_LLLVTBPW_G_RF
		D_N_LLLVTBPW_G_RF_T2 = N_WELL INTERACT RFD_N_LLLVTBPW_G_RF
		D_N_LLLVTBPW_G_RF_T3 = TWELL INTERACT RFD_N_LLLVTBPW_G_RF
		CONNECT PSD_C D_N_LLLVTBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_LLLVTBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_LLLVTBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_12_LLLVTRF D_N_LLLVTBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_LLLVTBPW_G_RF_T3(B) D_N_LLLVTBPW_G_RF_T2(NW) D_N_LLLVTBPW_G_RF_T1(PSUB) <N_LLLVTBPW_G_RF> <T_CONT_LVT_12_4> <SHARNT_LVT> <SHARNT_LVT2>
		[
			PROPERTY LF,WF,NF,CON,p_area_nw,p_pj_nw,p_area_tw,p_pj_tw
			NF = COUNT(N_LLLVTBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
			multiple_number = DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_T")
			p_area_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NAREA")*1e-12/multiple_number
			p_pj_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NPERIM")*1e-6/multiple_number
			multiple_number2 = DFM_NUMeric_VALue(SHARNT_LVT2,"COUNT_T")
			p_area_tw = DFM_NUMeric_VALue(SHARNT_LVT2,"TAREA")*1e-12/multiple_number2
			p_pj_tw = DFM_NUMeric_VALue(SHARNT_LVT2,"TPERIM")*1e-6/multiple_number2
		]
		TRACE PROPERTY N_BPW_12_LLLVTRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF CON CON 3
	#ELSE
		DEVICE N_BPW_12_LLLVTRF D_N_LLLVTBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) N_WELL(NW) PWELL(PSUB) <N_LLLVTBPW_G_RF> <T_CONT_LVT_12_4> <SHARNT_LVT> <SHARNT_LVT2>
		[
			PROPERTY LF,WF,NF,CON,p_area_nw,p_pj_nw,p_area_tw,p_pj_tw
			NF = COUNT(N_LLLVTBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
			multiple_number = DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_P") + DFM_NUMeric_VALue(SHARNT_LVT,"COUNT_T")
			p_area_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NAREA")*1e-12/multiple_number
			p_pj_nw = DFM_NUMeric_VALue(SHARNT_LVT,"NPERIM")*1e-6/multiple_number
			multiple_number2 = DFM_NUMeric_VALue(SHARNT_LVT2,"COUNT_T")
			p_area_tw = DFM_NUMeric_VALue(SHARNT_LVT2,"TAREA")*1e-12/multiple_number2
			p_pj_tw = DFM_NUMeric_VALue(SHARNT_LVT2,"TPERIM")*1e-6/multiple_number2
		]
		TRACE PROPERTY N_BPW_12_LLLVTRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF CON CON 3
	#ENDIF
#ELSE
	D_P_LLLVT_G_RF_A = D_P_LLLVT_G_RF NOT PO1
	P_CONT_LVT_12_1 = CONT AND D_P_LLLVT_G_RF_A
	P_CONT_LVT_12_2 = ME1_I AND D_P_LLLVT_G_RF_A
	P_CONT_LVT_12_3 = SIZE P_CONT_LVT_12_2 BY -0.06
	P_CONT_LVT_12_4 = (SIZE(EXTENTS (P_CONT_LVT_12_1 OR P_CONT_LVT_12_3)) BY 0.06) AND D_P_LLLVT_G_RF_A
	
	D_P_LLLVT_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_LLLVT_G_RF
	RFD_P_LLLVT_G_RF = NWELL ENCLOSE D_P_LLLVT_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_LLLVT_G_RF BY PO_CONT
		D_P_LLLVT_G_RF_T1 = PSUB INTERACT RFD_P_LLLVT_G_RF
		D_P_LLLVT_G_RF_T2 = WEL INTERACT RFD_P_LLLVT_G_RF
		CONNECT PSD_C D_P_LLLVT_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_LLLVT_G_RF_T2 BY NTAP
		DEVICE P_12_LLLVTRF RFD_P_LLLVT_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_LLLVT_G_RF_T2(B) D_P_LLLVT_G_RF_T1(PSUB) <P_LLLVT_G_RF> <P_CONT_LVT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_LLLVT_G_RF)
			WF = PERIMETER_COINCIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_12_LLLVTRF LF LF 3
		TRACE PROPERTY P_12_LLLVTRF WF WF 3
		TRACE PROPERTY P_12_LLLVTRF NF NF 3
		TRACE PROPERTY P_12_LLLVTRF CON CON 3
	#ELSE
		DEVICE P_12_LLLVTRF RFD_P_LLLVT_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_LLLVT_G_RF> <P_CONT_LVT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_LLLVT_G_RF)
			WF = PERIMETER_COINCIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_LLLVT_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_12_LLLVTRF LF LF 3
		TRACE PROPERTY P_12_LLLVTRF WF WF 3
		TRACE PROPERTY P_12_LLLVTRF NF NF 3
		TRACE PROPERTY P_12_LLLVTRF CON CON 3
	#ENDIF
	
	// 1.2V LLLVT Triple Well RF NMOS
	
	D_N_LLLVTBPW_G_RF_A = D_N_LLLVTBPW_G_RF NOT PO1
	T_CONT_LVT_12_1 = CONT AND D_N_LLLVTBPW_G_RF_A
	T_CONT_LVT_12_2 = ME1_I AND D_N_LLLVTBPW_G_RF_A
	T_CONT_LVT_12_3 = SIZE T_CONT_LVT_12_2 BY -0.06
	T_CONT_LVT_12_4 = (SIZE(EXTENTS (T_CONT_LVT_12_1 OR T_CONT_LVT_12_3)) BY 0.06) AND D_N_LLLVTBPW_G_RF_A
	
	D_N_LLLVTBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_LLLVTBPW_G_RF
	RFD_N_LLLVTBPW_G_RF = NWEL ENCLOSE D_N_LLLVTBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_LLLVTBPW_G_RF BY PO_CONT
		D_N_LLLVTBPW_G_RF_T1 = PSUB INTERACT RFD_N_LLLVTBPW_G_RF
		D_N_LLLVTBPW_G_RF_T2 = WEL INTERACT RFD_N_LLLVTBPW_G_RF
		D_N_LLLVTBPW_G_RF_T3 = TWELL INTERACT RFD_N_LLLVTBPW_G_RF
		CONNECT PSD_C D_N_LLLVTBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_LLLVTBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_LLLVTBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_12_LLLVTRF RFD_N_LLLVTBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_LLLVTBPW_G_RF_T3(B) D_N_LLLVTBPW_G_RF_T2(NW) D_N_LLLVTBPW_G_RF_T1(PSUB) <N_LLLVTBPW_G_RF> <T_CONT_LVT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_LLLVTBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_12_LLLVTRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF CON CON 3
	#ELSE
		DEVICE N_BPW_12_LLLVTRF RFD_N_LLLVTBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_LLLVTBPW_G_RF> <T_CONT_LVT_12_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_LLLVTBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_LLLVTBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_LVT_12_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_12_LLLVTRF LF LF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF WF WF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF NF NF 3
		TRACE PROPERTY N_BPW_12_LLLVTRF CON CON 3
	#ENDIF
#ENDIF

#IFDEF 1.8V_IO
	#IFDEF SBLK_MOS
		#IFDEF RCFLOW_CCI
			DEVICE LDDN(N_18_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_18_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_18_SBLK) L L 3
			TRACE PROPERTY LDDN(N_18_SBLK) W W 3

			DEVICE LDDP(P_18_SBLK) P_IO_G_SBLK PSD_S(D) P_IO_G_SBLK(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF><PLY_C>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_18_SBLK) L L 3
			TRACE PROPERTY LDDP(P_18_SBLK) W W 3

			DEVICE MN(N_18) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_18) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_18) L L 3
			TRACE PROPERTY MN(N_18) W W 3

			DEVICE MP(P_18) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_18) L L 3
			TRACE PROPERTY MP(P_18) W W 3
		#ELSE
			DEVICE LDDN(N_18_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_18_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_18_SBLK) L L 3
			TRACE PROPERTY LDDN(N_18_SBLK) W W 3

			DEVICE LDDP(P_18_SBLK) P_IO_G_SBLK PSD_S(D) PLY_C(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_18_SBLK) L L 3
			TRACE PROPERTY LDDP(P_18_SBLK) W W 3

			DEVICE MN(N_18) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_18) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_18) L L 3
			TRACE PROPERTY MN(N_18) W W 3

			DEVICE MP(P_18) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_18) L L 3
			TRACE PROPERTY MP(P_18) W W 3
		#ENDIF
	#ELSE
		#IFDEF PEXRUN_MC_HSPICE
			DEVICE N_18 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF
			DEVICE N_18 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF

			DEVICE P_18 P_IO_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G PLY_C P_IO_G DIFF BPDIFF
		#ELSE
			#IFDEF PEXRUN
				DEVICE MN(N_18) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_18) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_18) L L 3
				TRACE PROPERTY MN(N_18) W W 3

				DEVICE MP(P_18) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_18) L L 3
				TRACE PROPERTY MP(P_18) W W 3
			#ELSE
				#IFDEF RCFLOW_CCI
					DEVICE MN(N_18) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
					CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
					DEVICE MN(N_18) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
					CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
					TRACE PROPERTY MN(N_18) L L 3
					TRACE PROPERTY MN(N_18) W W 3

					DEVICE MP(P_18) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
					CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
					TRACE PROPERTY MP(P_18) L L 3
					TRACE PROPERTY MP(P_18) W W 3
				#ELSE
					DEVICE MN(N_18) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
					CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
					DEVICE MN(N_18) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
					CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
					TRACE PROPERTY MN(N_18) L L 3
					TRACE PROPERTY MN(N_18) W W 3

					DEVICE MP(P_18) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
					CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
					TRACE PROPERTY MP(P_18) L L 3
					TRACE PROPERTY MP(P_18) W W 3
				#ENDIF
			#ENDIF
		#ENDIF
	#ENDIF
	//RF 1.8V IO //
	D_N_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IO_G_RF BY PO_CONT
		D_N_IO_G_RF_T1 = PSUB INTERACT D_N_IO_G_RF
		CONNECT PSD_C D_N_IO_G_RF_T1 BY PTAP
		DEVICE N_18_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IO_G_RF_T1(B) <N_IO_G_RF>
		[
			PROPERTY LF,WF,NF
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
		]
		TRACE PROPERTY N_18_RF LF LF 3
		TRACE PROPERTY N_18_RF WF WF 3
		TRACE PROPERTY N_18_RF NF NF 3
	#ELSE
		DEVICE N_18_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_IO_G_RF>
		[
			PROPERTY LF,WF,NF
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
		]
		TRACE PROPERTY N_18_RF LF LF 3
		TRACE PROPERTY N_18_RF WF WF 3
		TRACE PROPERTY N_18_RF NF NF 3
	#ENDIF

	D_P_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_IO_G_RF
	RFD_P_IO_G_RF = NWELL ENCLOSE D_P_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_IO_G_RF BY PO_CONT
		D_P_IO_G_RF_T1 = PSUB INTERACT RFD_P_IO_G_RF
		D_P_IO_G_RF_T2 = WEL INTERACT RFD_P_IO_G_RF
		CONNECT PSD_C D_P_IO_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_IO_G_RF_T2 BY NTAP
		DEVICE P_18_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_IO_G_RF_T2(B) D_P_IO_G_RF_T1(PSUB) <P_IO_G_RF>
		[
			PROPERTY LF,WF,NF
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
		]
		TRACE PROPERTY P_18_RF LF LF 3
		TRACE PROPERTY P_18_RF WF WF 3
		TRACE PROPERTY P_18_RF NF NF 3
	#ELSE
		DEVICE P_18_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_IO_G_RF>
		[
			PROPERTY LF,WF,NF
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
		]
		TRACE PROPERTY P_18_RF LF LF 3
		TRACE PROPERTY P_18_RF WF WF 3
		TRACE PROPERTY P_18_RF NF NF 3
	#ENDIF
	// 1.8V Triple Well RF NMOS
	D_N_IOBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IOBPW_G_RF
	RFD_N_IOBPW_G_RF = NWEL ENCLOSE D_N_IOBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IOBPW_G_RF BY PO_CONT
		D_N_IOBPW_G_RF_T1 = PSUB INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T2 = WEL INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T3 = TWELL INTERACT RFD_N_IOBPW_G_RF
		CONNECT PSD_C D_N_IOBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_IOBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_IOBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_18_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IOBPW_G_RF_T3(B) D_N_IOBPW_G_RF_T2(NW) D_N_IOBPW_G_RF_T1(PSUB) <N_IOBPW_G_RF>
		[
			PROPERTY LF,WF,NF
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
		]
		TRACE PROPERTY N_BPW_18_RF LF LF 3
		TRACE PROPERTY N_BPW_18_RF WF WF 3
		TRACE PROPERTY N_BPW_18_RF NF NF 3
	#ELSE
		DEVICE N_BPW_18_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_IOBPW_G_RF>
		[
			PROPERTY LF,WF,NF
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
		]
		TRACE PROPERTY N_BPW_18_RF LF LF 3
		TRACE PROPERTY N_BPW_18_RF WF WF 3
		TRACE PROPERTY N_BPW_18_RF NF NF 3
	#ENDIF
	#IFDEF RCFLOW_CCI
		DEVICE MN(N_18_NVT) N_NVT_TG N_NVT_TG(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_18_NVT) L L 3
		TRACE PROPERTY MN(N_18_NVT) W W 3
	#ELSE
		DEVICE MN(N_18_NVT) N_NVT_TG PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_18_NVT) L L 3
		TRACE PROPERTY MN(N_18_NVT) W W 3
	#ENDIF

	////////////////////
	// Ncap Capacitor //
	////////////////////
	// Thick oxide NFET in N-well capacitor //
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE C(NCAP_18_NO_VT_IMP) NCAPGATE_18 PLY_C(POS) WEL(NEG) <NCAPGATE_18_1> NETLIST MODEL "NCAP_18_NO_VT_IMP" NETLIST ELEMENT "X"
		[
			PROPERTY WF,LF,NF
			NF = COUNT(NCAPGATE_18_1)
			LF = PERIMETER_INSIDE (NCAPGATE_18_1, PLY_C) / (NF*2)
			Ammc = area (NCAPGATE_18_1)
			WF = Ammc / LF / NF
		]
		TRACE PROPERTY C(NCAP_18_NO_VT_IMP) NF NF 3
		TRACE PROPERTY C(NCAP_18_NO_VT_IMP) LF LF 3
		TRACE PROPERTY C(NCAP_18_NO_VT_IMP) WF WF 3
	#ELSE
		#IFDEF PEXRUN
			DEVICE C(NCAP_18_NO_VT_IMP) NCAPGATE_18 PLY_C(POS) WEL(NEG) <NCAPGATE_18_1> NETLIST MODEL "NCAP_18_NO_VT_IMP" NETLIST ELEMENT "X"
			[
				PROPERTY WF,LF,NF
				NF = COUNT(NCAPGATE_18_1)
				LF = PERIMETER_INSIDE (NCAPGATE_18_1, PLY_C) / (NF*2)
				Ammc = area (NCAPGATE_18_1)
				WF = Ammc / LF / NF
			]
			TRACE PROPERTY C(NCAP_18_NO_VT_IMP) NF NF 3
			TRACE PROPERTY C(NCAP_18_NO_VT_IMP) LF LF 3
			TRACE PROPERTY C(NCAP_18_NO_VT_IMP) WF WF 3
		#ELSE
			#IFDEF RCFLOW_CCI
				NCAPGATE_18_T2 = WEL INTERACT NCAPGATE_18
				CONNECT NSD_C NCAPGATE_18_T2 BY NTAP
				DEVICE C(NCAP_18_NO_VT_IMP) NCAPGATE_18 NCAPGATE_18_1(POS) NCAPGATE_18_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_18_NO_VT_IMP" NETLIST ELEMENT "X"
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_18_1)
					LF = PERIMETER_COINCIDE (NCAPGATE_18_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_18_1)
					WF = Ammc / LF / NF
				]
				TRACE PROPERTY C(NCAP_18_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_18_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_18_NO_VT_IMP) WF WF 3
			#ELSE
				DEVICE C(NCAP_18_NO_VT_IMP) NCAPGATE_18 PLY_C(POS) WEL(NEG) <NCAPGATE_18_1>
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_18_1)
					LF = PERIMETER_INSIDE (NCAPGATE_18_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_18_1)
					WF = Ammc / LF / NF
				]
				TRACE PROPERTY C(NCAP_18_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_18_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_18_NO_VT_IMP) WF WF 3
			#ENDIF
		#ENDIF
	#ENDIF
#ENDIF

#IFDEF 2.5V_IO
	#IFDEF SBLK_MOS
		#IFDEF RCFLOW_CCI
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) PSUB(B)<DIFF> <BNDIFF> <PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) TWELL(B)<DIFF> <BNDIFF> <PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_25_SBLK) L L 3
			TRACE PROPERTY LDDN(N_25_SBLK) W W 3

			DEVICE LDDP(P_25_SBLK) P_IO_G_SBLK PSD_S(D) P_IO_G_SBLK(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF> <PLY_C>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_25_SBLK) L L 3
			TRACE PROPERTY LDDP(P_25_SBLK) W W 3

			DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_25) L L 3
			TRACE PROPERTY MN(N_25) W W 3

			DEVICE MP(P_25) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF> <BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_25) L L 3
			TRACE PROPERTY MP(P_25) W W 3
		#ELSE
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) PSUB(B)<DIFF> <BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) TWELL(B)<DIFF> <BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_25_SBLK) L L 3
			TRACE PROPERTY LDDN(N_25_SBLK) W W 3

			DEVICE LDDP(P_25_SBLK) P_IO_G_SBLK PSD_S(D) PLY_C(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_25_SBLK) L L 3
			TRACE PROPERTY LDDP(P_25_SBLK) W W 3

			DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_25) L L 3
			TRACE PROPERTY MN(N_25) W W 3

			DEVICE MP(P_25) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF> <BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_25) L L 3
			TRACE PROPERTY MP(P_25) W W 3
		#ENDIF
	#ELSE
		#IFDEF PEXRUN_MC_HSPICE
			DEVICE N_25 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF
			DEVICE N_25 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF

			DEVICE P_25 P_IO_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF> <BPDIFF>
			CMACRO MOSLOD P_IO_G PLY_C P_IO_G DIFF BPDIFF
		#ELSE
			#IFDEF RCFLOW_CCI
				DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_25) L L 3
				TRACE PROPERTY MN(N_25) W W 3

				DEVICE MP(P_25) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_25) L L 3
				TRACE PROPERTY MP(P_25) W W 3
			#ELSE
				DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_25) L L 3
				TRACE PROPERTY MN(N_25) W W 3

				DEVICE MP(P_25) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_25) L L 3
				TRACE PROPERTY MP(P_25) W W 3
			#ENDIF
		#ENDIF
	#ENDIF
	//RF 2.5V IO //

	D_N_IO_G_RF_A = D_N_IO_G_RF NOT PO1
	N_CONT_25_1 = CONT AND D_N_IO_G_RF_A
	N_CONT_25_2 = ME1_I AND D_N_IO_G_RF_A
	N_CONT_25_3 = SIZE N_CONT_25_2 BY -0.06
	N_CONT_25_4 = (SIZE(EXTENTS (N_CONT_25_1 OR N_CONT_25_3)) BY 0.06) AND D_N_IO_G_RF_A

	D_N_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IO_G_RF BY PO_CONT
		D_N_IO_G_RF_T1 = PSUB INTERACT D_N_IO_G_RF
		CONNECT PSD_C D_N_IO_G_RF_T1 BY PTAP
		DEVICE N_25_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IO_G_RF_T1(B) <N_IO_G_RF> <N_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(N_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_25_RF LF LF 3
		TRACE PROPERTY N_25_RF WF WF 3
		TRACE PROPERTY N_25_RF NF NF 3
		TRACE PROPERTY N_25_RF CON CON 3
	#ELSE
		DEVICE N_25_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_IO_G_RF> <N_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(N_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_25_RF LF LF 3
		TRACE PROPERTY N_25_RF WF WF 3
		TRACE PROPERTY N_25_RF NF NF 3
		TRACE PROPERTY N_25_RF CON CON 3
	#ENDIF

	D_P_IO_G_RF_A = D_P_IO_G_RF NOT PO1
	P_CONT_25_1 = CONT AND D_P_IO_G_RF_A
	P_CONT_25_2 = ME1_I AND D_P_IO_G_RF_A
	P_CONT_25_3 = SIZE P_CONT_25_2 BY -0.06
	P_CONT_25_4 = (SIZE(EXTENTS (P_CONT_25_1 OR P_CONT_25_3)) BY 0.06) AND D_P_IO_G_RF_A

	D_P_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_IO_G_RF
	RFD_P_IO_G_RF = NWELL ENCLOSE D_P_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_IO_G_RF BY PO_CONT
		D_P_IO_G_RF_T1 = PSUB INTERACT RFD_P_IO_G_RF
		D_P_IO_G_RF_T2 = WEL INTERACT RFD_P_IO_G_RF
		CONNECT PSD_C D_P_IO_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_IO_G_RF_T2 BY NTAP
		DEVICE P_25_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_IO_G_RF_T2(B) D_P_IO_G_RF_T1(PSUB) <P_IO_G_RF><P_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_25_RF LF LF 3
		TRACE PROPERTY P_25_RF WF WF 3
		TRACE PROPERTY P_25_RF NF NF 3
		TRACE PROPERTY P_25_RF CON CON 3
	#ELSE
		DEVICE P_25_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_IO_G_RF><P_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_25_RF LF LF 3
		TRACE PROPERTY P_25_RF WF WF 3
		TRACE PROPERTY P_25_RF NF NF 3
		TRACE PROPERTY P_25_RF CON CON 3
	#ENDIF
	// 2.5V Triple Well RF NMOS

	D_N_IOBPW_G_RF_A = D_N_IOBPW_G_RF NOT PO1
	T_CONT_25_1 = CONT AND D_N_IOBPW_G_RF_A
	T_CONT_25_2 = ME1_I AND D_N_IOBPW_G_RF_A
	T_CONT_25_3 = SIZE T_CONT_25_2 BY -0.06
	T_CONT_25_4 = (SIZE(EXTENTS (T_CONT_25_1 OR T_CONT_25_3)) BY 0.06) AND D_N_IOBPW_G_RF_A

	D_N_IOBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IOBPW_G_RF
	RFD_N_IOBPW_G_RF = NWEL ENCLOSE D_N_IOBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IOBPW_G_RF BY PO_CONT
		D_N_IOBPW_G_RF_T1 = PSUB INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T2 = WEL INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T3 = TWELL INTERACT RFD_N_IOBPW_G_RF
		CONNECT PSD_C D_N_IOBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_IOBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_IOBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_25_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IOBPW_G_RF_T3(B) D_N_IOBPW_G_RF_T2(NW) D_N_IOBPW_G_RF_T1(PSUB) <N_IOBPW_G_RF><T_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_25_RF LF LF 3
		TRACE PROPERTY N_BPW_25_RF WF WF 3
		TRACE PROPERTY N_BPW_25_RF NF NF 3
		TRACE PROPERTY N_BPW_25_RF CON CON 3
	#ELSE
		DEVICE N_BPW_25_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_IOBPW_G_RF><T_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_25_RF LF LF 3
		TRACE PROPERTY N_BPW_25_RF WF WF 3
		TRACE PROPERTY N_BPW_25_RF NF NF 3
		TRACE PROPERTY N_BPW_25_RF CON CON 3
	#ENDIF

	#IFDEF RCFLOW_CCI
		DEVICE MN(N_25_NVT) N_NVT_TG N_NVT_TG(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_25_NVT) L L 3
		TRACE PROPERTY MN(N_25_NVT) W W 3
	#ELSE
		DEVICE MN(N_25_NVT) N_NVT_TG PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_25_NVT) L L 3
		TRACE PROPERTY MN(N_25_NVT) W W 3
	#ENDIF
	//////////////////////////////////
	// Ncap Capacitor
	//////////////////////////////////

	// Thick oxide NFET in N-well capacitor //
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 PLY_C(POS) WEL(NEG) <NCAPGATE_25_1> NETLIST MODEL "NCAP_25_NO_VT_IMP" NETLIST ELEMENT "X"
		[
			PROPERTY WF,LF,NF
			NF = COUNT(NCAPGATE_25_1)
			LF = PERIMETER_INSIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
			Ammc = area (NCAPGATE_25_1)
			WF = Ammc / LF / NF
		]
		DEVICE C(NCAP_25) NCAPGATE_N_25 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_25" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			L = PERIMETER_INSIDE (NCAPGATE_N_25, PLY_C) / 2
			Ammc = area (NCAPGATE_N_25)
			W = Ammc / L
		]
		TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
		TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
		TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
		TRACE PROPERTY C(NCAP_25) L L 3
		TRACE PROPERTY C(NCAP_25) W W 3
	#ELSE
		#IFDEF PEXRUN
			DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 PLY_C(POS) WEL(NEG) <NCAPGATE_25_1> NETLIST MODEL "NCAP_25_NO_VT_IMP" NETLIST ELEMENT "X"
			[
				PROPERTY WF,LF,NF
				NF = COUNT(NCAPGATE_25_1)
				LF = PERIMETER_INSIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
				Ammc = area (NCAPGATE_25_1)
				WF = Ammc / LF / NF
			]
			DEVICE C(NCAP_25) NCAPGATE_N_25 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_25" NETLIST ELEMENT "X"
			[
				PROPERTY W,L
				L = PERIMETER_INSIDE (NCAPGATE_N_25, PLY_C) / 2
				Ammc = area (NCAPGATE_N_25)
				W = Ammc / L
			]
			TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
			TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
			TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
			TRACE PROPERTY C(NCAP_25) L L 3
			TRACE PROPERTY C(NCAP_25) W W 3
		#ELSE
			#IFDEF RCFLOW_CCI
				NCAPGATE_25_T2 = WEL INTERACT NCAPGATE_25
				CONNECT NSD_C NCAPGATE_25_T2 BY NTAP
				NCAPGATE_N_25_T2 = WEL INTERACT NCAPGATE_N_25
				CONNECT NSD_C NCAPGATE_N_25_T2 BY NTAP
				DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 NCAPGATE_25_1(POS) NCAPGATE_25_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_25_NO_VT_IMP" NETLIST ELEMENT "X"
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_25_1)
					LF = PERIMETER_COINCIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_25_1)
					WF = Ammc / LF / NF
				]
				DEVICE C(NCAP_25) NCAPGATE_N_25 NCAPGATE_N_25(POS) NCAPGATE_N_25_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_25" NETLIST ELEMENT "X"
				[
					PROPERTY W,L
					L = PERIMETER_COINCIDE (NCAPGATE_N_25, PLY_C) / 2
					Ammc = area (NCAPGATE_N_25)
					W = Ammc / L
				]
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
				TRACE PROPERTY C(NCAP_25) L L 3
				TRACE PROPERTY C(NCAP_25) W W 3
			#ELSE
				DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 PLY_C(POS) WEL(NEG) <NCAPGATE_25_1>
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_25_1)
					LF = PERIMETER_INSIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_25_1)
					WF = Ammc / LF / NF
				]
				DEVICE C(NCAP_25) NCAPGATE_N_25 PLY_C(POS) WEL(NEG)
				[
					PROPERTY W,L
					L = PERIMETER_INSIDE (NCAPGATE_N_25, PLY_C) / 2
					Ammc = area (NCAPGATE_N_25)
					W = Ammc / L
				]
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
				TRACE PROPERTY C(NCAP_25) L L 3
				TRACE PROPERTY C(NCAP_25) W W 3
			#ENDIF
		#ENDIF
	#ENDIF
#ENDIF

#IFDEF 3.3V_IO
	#IFDEF SBLK_MOS
		#IFDEF RCFLOW_CCI
			DEVICE LDDN(N_33_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_33_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_33_SBLK) L L 3
			TRACE PROPERTY LDDN(N_33_SBLK) W W 3

			DEVICE LDDP(P_33_SBLK) P_IO_G_SBLK PSD_S(D) P_IO_G_SBLK(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF><PLY_C>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_33_SBLK) L L 3
			TRACE PROPERTY LDDP(P_33_SBLK) W W 3

			DEVICE MN(N_33) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_33) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_33) L L 3
			TRACE PROPERTY MN(N_33) W W 3

			DEVICE MP(P_33) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_33) L L 3
			TRACE PROPERTY MP(P_33) W W 3
		#ELSE
			DEVICE LDDN(N_33_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_33_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_33_SBLK) L L 3
			TRACE PROPERTY LDDN(N_33_SBLK) W W 3

			DEVICE LDDP(P_33_SBLK) P_IO_G_SBLK PSD_S(D) PLY_C(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_33_SBLK) L L 3
			TRACE PROPERTY LDDP(P_33_SBLK) W W 3

			DEVICE MN(N_33) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_33) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_33) L L 3
			TRACE PROPERTY MN(N_33) W W 3

			DEVICE MP(P_33) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_33) L L 3
			TRACE PROPERTY MP(P_33) W W 3
		#ENDIF
	#ELSE
		#IFDEF PEXRUN_MC_HSPICE
			DEVICE N_33 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF
			DEVICE N_33 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF

			DEVICE P_33 P_IO_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G PLY_C P_IO_G DIFF BPDIFF
		#ELSE
			#IFDEF RCFLOW_CCI
				DEVICE MN(N_33) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_33) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_33) L L 3
				TRACE PROPERTY MN(N_33) W W 3

				DEVICE MP(P_33) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_33) L L 3
				TRACE PROPERTY MP(P_33) W W 3
			#ELSE
				DEVICE MN(N_33) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_33) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_33) L L 3
				TRACE PROPERTY MN(N_33) W W 3

				DEVICE MP(P_33) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_33) L L 3
				TRACE PROPERTY MP(P_33) W W 3
			#ENDIF
		#ENDIF
	#ENDIF
	//RF 3.3V IO //
	D_N_IO_G_RF_A = D_N_IO_G_RF NOT PO1
	N_CONT_33_1 = CONT AND D_N_IO_G_RF_A
	N_CONT_33_2 = ME1_I AND D_N_IO_G_RF_A
	N_CONT_33_3 = SIZE N_CONT_33_2 BY -0.06
	N_CONT_33_4 = (SIZE(EXTENTS (N_CONT_33_1 OR N_CONT_33_3)) BY 0.06) AND D_N_IO_G_RF_A

	D_N_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IO_G_RF BY PO_CONT
		D_N_IO_G_RF_T1 = PSUB INTERACT D_N_IO_G_RF
		CONNECT PSD_C D_N_IO_G_RF_T1 BY PTAP
		DEVICE N_33_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IO_G_RF_T1(B) <N_IO_G_RF> <N_CONT_33_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(N_CONT_33_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_33_RF LF LF 3
		TRACE PROPERTY N_33_RF WF WF 3
		TRACE PROPERTY N_33_RF NF NF 3
		TRACE PROPERTY N_33_RF CON CON 3
	#ELSE
		DEVICE N_33_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_IO_G_RF> <N_CONT_33_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(N_CONT_33_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_33_RF LF LF 3
		TRACE PROPERTY N_33_RF WF WF 3
		TRACE PROPERTY N_33_RF NF NF 3
		TRACE PROPERTY N_33_RF CON CON 3
	#ENDIF

	D_P_IO_G_RF_A = D_P_IO_G_RF NOT PO1
	P_CONT_33_1 = CONT AND D_P_IO_G_RF_A
	P_CONT_33_2 = ME1_I AND D_P_IO_G_RF_A
	P_CONT_33_3 = SIZE P_CONT_33_2 BY -0.06
	P_CONT_33_4 = (SIZE(EXTENTS (P_CONT_33_1 OR P_CONT_33_3)) BY 0.06) AND D_P_IO_G_RF_A

	D_P_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_IO_G_RF
	RFD_P_IO_G_RF = NWELL ENCLOSE D_P_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_IO_G_RF BY PO_CONT
		D_P_IO_G_RF_T1 = PSUB INTERACT RFD_P_IO_G_RF
		D_P_IO_G_RF_T2 = WEL INTERACT RFD_P_IO_G_RF
		CONNECT PSD_C D_P_IO_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_IO_G_RF_T2 BY NTAP
		DEVICE P_33_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_IO_G_RF_T2(B) D_P_IO_G_RF_T1(PSUB) <P_IO_G_RF> <P_CONT_33_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_33_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_33_RF LF LF 3
		TRACE PROPERTY P_33_RF WF WF 3
		TRACE PROPERTY P_33_RF NF NF 3
		TRACE PROPERTY P_33_RF CON CON 3
	#ELSE
		DEVICE P_33_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_IO_G_RF> <P_CONT_33_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_33_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_33_RF LF LF 3
		TRACE PROPERTY P_33_RF WF WF 3
		TRACE PROPERTY P_33_RF NF NF 3
		TRACE PROPERTY P_33_RF CON CON 3
	#ENDIF
	// 3.3V Triple Well RF NMOS
	D_N_IOBPW_G_RF_A = D_N_IOBPW_G_RF NOT PO1
	T_CONT_33_1 = CONT AND D_N_IOBPW_G_RF_A
	T_CONT_33_2 = ME1_I AND D_N_IOBPW_G_RF_A
	T_CONT_33_3 = SIZE T_CONT_33_2 BY -0.06
	T_CONT_33_4 = (SIZE(EXTENTS (T_CONT_33_1 OR T_CONT_33_3)) BY 0.06) AND D_N_IOBPW_G_RF_A

	D_N_IOBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IOBPW_G_RF
	RFD_N_IOBPW_G_RF = NWEL ENCLOSE D_N_IOBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IOBPW_G_RF BY PO_CONT
		D_N_IOBPW_G_RF_T1 = PSUB INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T2 = WEL INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T3 = TWELL INTERACT RFD_N_IOBPW_G_RF
		CONNECT PSD_C D_N_IOBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_IOBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_IOBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_33_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IOBPW_G_RF_T3(B) D_N_IOBPW_G_RF_T2(NW) D_N_IOBPW_G_RF_T1(PSUB) <N_IOBPW_G_RF> <T_CONT_33_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_33_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_33_RF LF LF 3
		TRACE PROPERTY N_BPW_33_RF WF WF 3
		TRACE PROPERTY N_BPW_33_RF NF NF 3
		TRACE PROPERTY N_BPW_33_RF CON CON 3
	#ELSE
		DEVICE N_BPW_33_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_IOBPW_G_RF> <T_CONT_33_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_33_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_33_RF LF LF 3
		TRACE PROPERTY N_BPW_33_RF WF WF 3
		TRACE PROPERTY N_BPW_33_RF NF NF 3
		TRACE PROPERTY N_BPW_33_RF CON CON 3
	#ENDIF

	#IFDEF RCFLOW_CCI
		DEVICE MN(N_33_NVT) N_NVT_TG N_NVT_TG(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_33_NVT) L L 3
		TRACE PROPERTY MN(N_33_NVT) W W 3
	#ELSE
		DEVICE MN(N_33_NVT) N_NVT_TG PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_33_NVT) L L 3
		TRACE PROPERTY MN(N_33_NVT) W W 3
	#ENDIF
	//////////////////////////////////
	// Ncap Capacitor
	//////////////////////////////////
	// Thick oxide NFET in N-well capacitor //
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE C(NCAP_33_NO_VT_IMP) NCAPGATE_33 PLY_C(POS) WEL(NEG) <NCAPGATE_33_1> NETLIST MODEL "NCAP_33_NO_VT_IMP" NETLIST ELEMENT "X"
		[
			PROPERTY WF,LF,NF
			NF = COUNT(NCAPGATE_33_1)
			LF = PERIMETER_INSIDE (NCAPGATE_33_1, PLY_C) / (NF*2)
			Ammc = area (NCAPGATE_33_1)
			WF = Ammc / LF / NF
		]
		DEVICE C(NCAP_33) NCAPGATE_N_33 PLY_C(POS) WEL(NEG) <NCAPGATE_N_33_1> NETLIST MODEL "NCAP_33" NETLIST ELEMENT "X"
		[
			PROPERTY WF,LF,NF
			NF = COUNT(NCAPGATE_N_33_1)
			LF = PERIMETER_INSIDE (NCAPGATE_N_33_1, PLY_C) / (NF*2)
			Ammc = area (NCAPGATE_N_33_1)
			WF = Ammc / LF / NF
		]
		TRACE PROPERTY C(NCAP_33_NO_VT_IMP) NF NF 3
		TRACE PROPERTY C(NCAP_33_NO_VT_IMP) LF LF 3
		TRACE PROPERTY C(NCAP_33_NO_VT_IMP) WF WF 3
		TRACE PROPERTY C(NCAP_33) NF NF 3
		TRACE PROPERTY C(NCAP_33) LF LF 3
		TRACE PROPERTY C(NCAP_33) WF WF 3
	#ELSE
		#IFDEF PEXRUN
			DEVICE C(NCAP_33_NO_VT_IMP) NCAPGATE_33 PLY_C(POS) WEL(NEG) <NCAPGATE_33_1> NETLIST MODEL "NCAP_33_NO_VT_IMP" NETLIST ELEMENT "X"
			[
				PROPERTY WF,LF,NF
				NF = COUNT(NCAPGATE_33_1)
				LF = PERIMETER_INSIDE (NCAPGATE_33_1, PLY_C) / (NF*2)
				Ammc = area (NCAPGATE_33_1)
				WF = Ammc / LF / NF
			]
			DEVICE C(NCAP_33) NCAPGATE_N_33 PLY_C(POS) WEL(NEG) <NCAPGATE_N_33_1> NETLIST MODEL "NCAP_33" NETLIST ELEMENT "X"
			[
				PROPERTY WF,LF,NF
				NF = COUNT(NCAPGATE_N_33_1)
				LF = PERIMETER_INSIDE (NCAPGATE_N_33_1, PLY_C) / (NF*2)
				Ammc = area (NCAPGATE_N_33_1)
				WF = Ammc / LF / NF
			]
			TRACE PROPERTY C(NCAP_33_NO_VT_IMP) NF NF 3
			TRACE PROPERTY C(NCAP_33_NO_VT_IMP) LF LF 3
			TRACE PROPERTY C(NCAP_33_NO_VT_IMP) WF WF 3
			TRACE PROPERTY C(NCAP_33) NF NF 3
			TRACE PROPERTY C(NCAP_33) LF LF 3
			TRACE PROPERTY C(NCAP_33) WF WF 3
		#ELSE
			#IFDEF RCFLOW_CCI
				NCAPGATE_33_T2 = WEL INTERACT NCAPGATE_33
				CONNECT NSD_C NCAPGATE_33_T2 BY NTAP
				NCAPGATE_N_33_T2 = WEL INTERACT NCAPGATE_N_33
				CONNECT NSD_C NCAPGATE_N_33_T2 BY NTAP
				DEVICE C(NCAP_33_NO_VT_IMP) NCAPGATE_33 NCAPGATE_33_1(POS) NCAPGATE_33_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_33_NO_VT_IMP" NETLIST ELEMENT "X"
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_33_1)
					LF = PERIMETER_COINCIDE (NCAPGATE_33_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_33_1)
					WF = Ammc / LF / NF
				]
				DEVICE C(NCAP_33) NCAPGATE_N_33 NCAPGATE_N_33_1(POS) NCAPGATE_N_33_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_33" NETLIST ELEMENT "X"
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_N_33_1)
					LF = PERIMETER_COINCIDE (NCAPGATE_N_33_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_N_33_1)
					WF = Ammc / LF / NF
				]
				TRACE PROPERTY C(NCAP_33_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_33_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_33_NO_VT_IMP) WF WF 3
				TRACE PROPERTY C(NCAP_33) NF NF 3
				TRACE PROPERTY C(NCAP_33) LF LF 3
				TRACE PROPERTY C(NCAP_33) WF WF 3
			#ELSE
				DEVICE C(NCAP_33_NO_VT_IMP) NCAPGATE_33 PLY_C(POS) WEL(NEG) <NCAPGATE_33_1>
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_33_1)
					LF = PERIMETER_INSIDE (NCAPGATE_33_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_33_1)
					WF = Ammc / LF / NF
				]
				DEVICE C(NCAP_33) NCAPGATE_N_33 PLY_C(POS) WEL(NEG) <NCAPGATE_N_33_1>
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_N_33_1)
					LF = PERIMETER_INSIDE (NCAPGATE_N_33_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_N_33_1)
					WF = Ammc / LF / NF
				]
				TRACE PROPERTY C(NCAP_33_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_33_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_33_NO_VT_IMP) WF WF 3
				TRACE PROPERTY C(NCAP_33) NF NF 3
				TRACE PROPERTY C(NCAP_33) LF LF 3
				TRACE PROPERTY C(NCAP_33) WF WF 3
			#ENDIF
		#ENDIF
	#ENDIF
#ENDIF

#IFDEF 2.5V_3.3VOD_IO
	#IFDEF SBLK_MOS
		#IFDEF RCFLOW_CCI
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) N_IO_G_SBLK(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_25_SBLK) L L 3
			TRACE PROPERTY LDDN(N_25_SBLK) W W 3

			DEVICE LDDP(P_25_SBLK) P_IO_G_SBLK PSD_S(D) P_IO_G_SBLK(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF><PLY_C>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_25_SBLK) L L 3
			TRACE PROPERTY LDDP(P_25_SBLK) W W 3

			DEVICE LDDN(N_33_GOX52_SBLK) N_IO_OD_G_SBLK NSD_S(D) N_IO_OD_G_SBLK(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_OD_G_SBLK PLY_C N_IO_OD_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_33_GOX52_SBLK) N_IO_OD_G_SBLK NSD_S(D) N_IO_OD_G_SBLK(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF><PLY_C>
			CMACRO MOSLOD N_IO_OD_G_SBLK PLY_C N_IO_OD_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_33_GOX52_SBLK) L L 3
			TRACE PROPERTY LDDN(N_33_GOX52_SBLK) W W 3

			DEVICE LDDP(P_33_GOX52_SBLK) P_IO_OD_G_SBLK PSD_S(D) P_IO_OD_G_SBLK(G) PSD_NS(S) WEL(B)<DIFF> <BPDIFF><PLY_C>
			CMACRO MOSLOD P_IO_OD_G_SBLK PLY_C P_IO_OD_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_33_GOX52_SBLK) L L 3
			TRACE PROPERTY LDDP(P_33_GOX52_SBLK) W W 3

			DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_25) L L 3
			TRACE PROPERTY MN(N_25) W W 3

			DEVICE MP(P_25) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_25) L L 3
			TRACE PROPERTY MP(P_25) W W 3

			DEVICE MN(N_33_GOX52) N_IO_OD_G N_IO_OD_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
			DEVICE MN(N_33_GOX52) N_IO_OD_G N_IO_OD_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_33_GOX52) L L 3
			TRACE PROPERTY MN(N_33_GOX52) W W 3

			DEVICE MP(P_33_GOX52) P_IO_OD_G P_IO_OD_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_OD_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_33_GOX52) L L 3
			TRACE PROPERTY MP(P_33_GOX52) W W 3
		#ELSE
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_25_SBLK) N_IO_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G_SBLK PLY_C N_IO_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_25_SBLK) L L 3
			TRACE PROPERTY LDDN(N_25_SBLK) W W 3

			DEVICE LDDP(P_25_SBLK) P_IO_G_SBLK PSD_S(D) PLY_C(G) PSD_NS(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G_SBLK PLY_C P_IO_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_25_SBLK) L L 3
			TRACE PROPERTY LDDP(P_25_SBLK) W W 3

			DEVICE LDDN(N_33_GOX52_SBLK) N_IO_OD_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_OD_G_SBLK PLY_C N_IO_OD_G_SBLK DIFF BNDIFF
			DEVICE LDDN(N_33_GOX52_SBLK) N_IO_OD_G_SBLK NSD_S(D) PLY_C(G) NSD_NS(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_OD_G_SBLK PLY_C N_IO_OD_G_SBLK DIFF BNDIFF
			TRACE PROPERTY LDDN(N_33_GOX52_SBLK) L L 3
			TRACE PROPERTY LDDN(N_33_GOX52_SBLK) W W 3

			DEVICE LDDP(P_33_GOX52_SBLK) P_IO_OD_G_SBLK PSD_S(D) PLY_C(G) PSD_NS(S) WEL(B)<DIFF> <BPDIFF>
			CMACRO MOSLOD P_IO_OD_G_SBLK PLY_C P_IO_OD_G_SBLK DIFF BPDIFF
			TRACE PROPERTY LDDP(P_33_GOX52_SBLK) L L 3
			TRACE PROPERTY LDDP(P_33_GOX52_SBLK) W W 3

			DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_25) L L 3
			TRACE PROPERTY MN(N_25) W W 3

			DEVICE MP(P_25) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_25) L L 3
			TRACE PROPERTY MP(P_25) W W 3

			DEVICE MN(N_33_GOX52) N_IO_OD_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
			DEVICE MN(N_33_GOX52) N_IO_OD_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
			TRACE PROPERTY MN(N_33_GOX52) L L 3
			TRACE PROPERTY MN(N_33_GOX52) W W 3

			DEVICE MP(P_33_GOX52) P_IO_OD_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSPROP P_IO_OD_G PSD_C DIFF BPDIFF
			TRACE PROPERTY MP(P_33_GOX52) L L 3
			TRACE PROPERTY MP(P_33_GOX52) W W 3
		#ENDIF
	#ELSE
		#IFDEF PEXRUN_MC_HSPICE
			DEVICE N_25 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF
			DEVICE N_25 N_IO_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_G PLY_C N_IO_G DIFF BNDIFF

			DEVICE P_25 P_IO_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_G PLY_C P_IO_G DIFF BPDIFF

			DEVICE N_33_GOX52 N_IO_OD_G NSD_C(D) PLY_C(G) NSD_C(S) PSUB(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_OD_G PLY_C N_IO_OD_G DIFF BNDIFF
			DEVICE N_33_GOX52 N_IO_OD_G NSD_C(D) PLY_C(G) NSD_C(S) TWELL(B)<DIFF><BNDIFF>
			CMACRO MOSLOD N_IO_OD_G PLY_C N_IO_OD_G DIFF BNDIFF

			DEVICE P_33_GOX52 P_IO_OD_G PSD_C(D) PLY_C(G) PSD_C(S) WEL(B)<DIFF><BPDIFF>
			CMACRO MOSLOD P_IO_OD_G PLY_C P_IO_OD_G DIFF BPDIFF
		#ELSE
			#IFDEF RCFLOW_CCI
				DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_25) N_IO_G N_IO_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_25) L L 3
				TRACE PROPERTY MN(N_25) W W 3

				DEVICE MP(P_25) P_IO_G P_IO_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_25) L L 3
				TRACE PROPERTY MP(P_25) W W 3

				DEVICE MN(N_33_GOX52) N_IO_OD_G N_IO_OD_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
				DEVICE MN(N_33_GOX52) N_IO_OD_G N_IO_OD_G(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_33_GOX52) L L 3
				TRACE PROPERTY MN(N_33_GOX52) W W 3

				DEVICE MP(P_33_GOX52) P_IO_OD_G P_IO_OD_G(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_OD_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_33_GOX52) L L 3
				TRACE PROPERTY MP(P_33_GOX52) W W 3
			#ELSE
				DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				DEVICE MN(N_25) N_IO_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_25) L L 3
				TRACE PROPERTY MN(N_25) W W 3

				DEVICE MP(P_25) P_IO_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_25) L L 3
				TRACE PROPERTY MP(P_25) W W 3

				DEVICE MN(N_33_GOX52) N_IO_OD_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
				DEVICE MN(N_33_GOX52) N_IO_OD_G PLY_C(G) NSD_C(S) NSD_C(D) TWELL(B)<DIFF><BNDIFF>
				CMACRO MOSPROP N_IO_OD_G NSD_C DIFF BNDIFF
				TRACE PROPERTY MN(N_33_GOX52) L L 3
				TRACE PROPERTY MN(N_33_GOX52) W W 3

				DEVICE MP(P_33_GOX52) P_IO_OD_G PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)<DIFF><BPDIFF>
				CMACRO MOSPROP P_IO_OD_G PSD_C DIFF BPDIFF
				TRACE PROPERTY MP(P_33_GOX52) L L 3
				TRACE PROPERTY MP(P_33_GOX52) W W 3
			#ENDIF
		#ENDIF
	#ENDIF
	//RF 2.5V IO //

	D_N_IO_G_RF_A = D_N_IO_G_RF NOT PO1
	N_CONT_25_1 = CONT AND D_N_IO_G_RF_A
	N_CONT_25_2 = ME1_I AND D_N_IO_G_RF_A
	N_CONT_25_3 = SIZE N_CONT_25_2 BY -0.06
	N_CONT_25_4 = (SIZE(EXTENTS (N_CONT_25_1 OR N_CONT_25_3)) BY 0.06) AND D_N_IO_G_RF_A

	D_N_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IO_G_RF BY PO_CONT
		D_N_IO_G_RF_T1 = PSUB INTERACT D_N_IO_G_RF
		CONNECT PSD_C D_N_IO_G_RF_T1 BY PTAP
		DEVICE N_25_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IO_G_RF_T1(B) <N_IO_G_RF> <N_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(N_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_25_RF LF LF 3
		TRACE PROPERTY N_25_RF WF WF 3
		TRACE PROPERTY N_25_RF NF NF 3
		TRACE PROPERTY N_25_RF CON CON 3
	#ELSE
		DEVICE N_25_RF D_N_IO_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) PSUB(B) <N_IO_G_RF> <N_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IO_G_RF)
			WF = PERIMETER_COINCIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(N_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_25_RF LF LF 3
		TRACE PROPERTY N_25_RF WF WF 3
		TRACE PROPERTY N_25_RF NF NF 3
		TRACE PROPERTY N_25_RF CON CON 3
	#ENDIF

	D_P_IO_G_RF_A = D_P_IO_G_RF NOT PO1
	P_CONT_25_1 = CONT AND D_P_IO_G_RF_A
	P_CONT_25_2 = ME1_I AND D_P_IO_G_RF_A
	P_CONT_25_3 = SIZE P_CONT_25_2 BY -0.06
	P_CONT_25_4 = (SIZE(EXTENTS (P_CONT_25_1 OR P_CONT_25_3)) BY 0.06) AND D_P_IO_G_RF_A

	D_P_IO_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT P_IO_G_RF
	RFD_P_IO_G_RF = NWELL ENCLOSE D_P_IO_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I P_IO_G_RF BY PO_CONT
		D_P_IO_G_RF_T1 = PSUB INTERACT RFD_P_IO_G_RF
		D_P_IO_G_RF_T2 = WEL INTERACT RFD_P_IO_G_RF
		CONNECT PSD_C D_P_IO_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_P_IO_G_RF_T2 BY NTAP
		DEVICE P_25_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) D_P_IO_G_RF_T2(B) D_P_IO_G_RF_T1(PSUB) <P_IO_G_RF> <P_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_25_RF LF LF 3
		TRACE PROPERTY P_25_RF WF WF 3
		TRACE PROPERTY P_25_RF NF NF 3
		TRACE PROPERTY P_25_RF CON CON 3
	#ELSE
		DEVICE P_25_RF RFD_P_IO_G_RF PSD_I(D) PLY_I_RF(G) PSD_I_S(S) WEL(B) PSUB(PSUB) <P_IO_G_RF> <P_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(P_IO_G_RF)
			WF = PERIMETER_COINCIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(P_IO_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(P_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY P_25_RF LF LF 3
		TRACE PROPERTY P_25_RF WF WF 3
		TRACE PROPERTY P_25_RF NF NF 3
		TRACE PROPERTY P_25_RF CON CON 3
	#ENDIF
	// 2.5V Triple Well RF NMOS

	D_N_IOBPW_G_RF_A = D_N_IOBPW_G_RF NOT PO1
	T_CONT_25_1 = CONT AND D_N_IOBPW_G_RF_A
	T_CONT_25_2 = ME1_I AND D_N_IOBPW_G_RF_A
	T_CONT_25_3 = SIZE T_CONT_25_2 BY -0.06
	T_CONT_25_4 = (SIZE(EXTENTS (T_CONT_25_1 OR T_CONT_25_3)) BY 0.06) AND D_N_IOBPW_G_RF_A

	D_N_IOBPW_G_RF = (DIFF NOT (PLY_NOSD OR SD_NOCONT)) INTERACT N_IOBPW_G_RF
	RFD_N_IOBPW_G_RF = NWEL ENCLOSE D_N_IOBPW_G_RF
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I N_IOBPW_G_RF BY PO_CONT
		D_N_IOBPW_G_RF_T1 = PSUB INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T2 = WEL INTERACT RFD_N_IOBPW_G_RF
		D_N_IOBPW_G_RF_T3 = TWELL INTERACT RFD_N_IOBPW_G_RF
		CONNECT PSD_C D_N_IOBPW_G_RF_T1 BY PTAP
		CONNECT NSD_I_B D_N_IOBPW_G_RF_T2 BY NTAP
		CONNECT PSD_I D_N_IOBPW_G_RF_T3 BY TTAP
		DEVICE N_BPW_25_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) D_N_IOBPW_G_RF_T3(B) D_N_IOBPW_G_RF_T2(NW) D_N_IOBPW_G_RF_T1(PSUB) <N_IOBPW_G_RF> <T_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_25_RF LF LF 3
		TRACE PROPERTY N_BPW_25_RF WF WF 3
		TRACE PROPERTY N_BPW_25_RF NF NF 3
		TRACE PROPERTY N_BPW_25_RF CON CON 3
	#ELSE
		DEVICE N_BPW_25_RF RFD_N_IOBPW_G_RF NSD_I(D) PLY_I_RF(G) NSD_I_S(S) TWELL(B) WEL(NW) PSUB(PSUB) <N_IOBPW_G_RF> <T_CONT_25_4>
		[
			PROPERTY LF,WF,NF,CON
			NF = COUNT(N_IOBPW_G_RF)
			WF = PERIMETER_COINCIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			LF = PERIMETER_INSIDE(N_IOBPW_G_RF,PLY_I_RF)/(2*NF)
			CON = TRUNC(AREA(T_CONT_25_4)/WF/(NF+1)/0.2E-6)
		]
		TRACE PROPERTY N_BPW_25_RF LF LF 3
		TRACE PROPERTY N_BPW_25_RF WF WF 3
		TRACE PROPERTY N_BPW_25_RF NF NF 3
		TRACE PROPERTY N_BPW_25_RF CON CON 3
	#ENDIF

	#IFDEF RCFLOW_CCI
		DEVICE MN(N_25_NVT) N_NVT_TG N_NVT_TG(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_25_NVT) L L 3
		TRACE PROPERTY MN(N_25_NVT) W W 3
	#ELSE
		DEVICE MN(N_25_NVT) N_NVT_TG PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
		CMACRO MOSPROP N_NVT_TG NSD_C DIFF BNDIFF
		TRACE PROPERTY MN(N_25_NVT) L L 3
		TRACE PROPERTY MN(N_25_NVT) W W 3
	#ENDIF
	//////////////////////////////////
	// Ncap Capacitor
	//////////////////////////////////
	// Thick oxide NFET in N-well capacitor //
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 PLY_C(POS) WEL(NEG) <NCAPGATE_25_1> NETLIST MODEL "NCAP_25_NO_VT_IMP" NETLIST ELEMENT "X"
		[
			PROPERTY WF,LF,NF
			NF = COUNT(NCAPGATE_25_1)
			LF = PERIMETER_INSIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
			Ammc = area (NCAPGATE_25_1)
			WF = Ammc / LF / NF
		]
		DEVICE C(NCAP_25) NCAPGATE_N_25 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_25" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			L = PERIMETER_INSIDE (NCAPGATE_N_25, PLY_C) / 2
			Ammc = area (NCAPGATE_N_25)
			W = Ammc / L
		]
		TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
		TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
		TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
		TRACE PROPERTY C(NCAP_25) L L 3
		TRACE PROPERTY C(NCAP_25) W W 3
	#ELSE
		#IFDEF PEXRUN
			DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 PLY_C(POS) WEL(NEG) <NCAPGATE_25_1> NETLIST MODEL "NCAP_25_NO_VT_IMP" NETLIST ELEMENT "X"
			[
				PROPERTY WF,LF,NF
				NF = COUNT(NCAPGATE_25_1)
				LF = PERIMETER_INSIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
				Ammc = area (NCAPGATE_25_1)
				WF = Ammc / LF / NF
			]
			DEVICE C(NCAP_25) NCAPGATE_N_25 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_25" NETLIST ELEMENT "X"
			[
				PROPERTY W,L
				L = PERIMETER_INSIDE (NCAPGATE_N_25, PLY_C) / 2
				Ammc = area (NCAPGATE_N_25)
				W = Ammc / L
			]
			TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
			TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
			TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
			TRACE PROPERTY C(NCAP_25) L L 3
			TRACE PROPERTY C(NCAP_25) W W 3
		#ELSE
			#IFDEF RCFLOW_CCI
				NCAPGATE_25_T2 = WEL INTERACT NCAPGATE_25
				CONNECT NSD_C NCAPGATE_25_T2 BY NTAP
				NCAPGATE_N_25_T2 = WEL INTERACT NCAPGATE_N_25
				CONNECT NSD_C NCAPGATE_N_25_T2 BY NTAP
				DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 NCAPGATE_25_1(POS) NCAPGATE_25_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_25_NO_VT_IMP" NETLIST ELEMENT "X"
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_25_1)
					LF = PERIMETER_COINCIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_25_1)
					WF = Ammc / LF / NF
				]
				DEVICE C(NCAP_25) NCAPGATE_N_25 NCAPGATE_N_25(POS) NCAPGATE_N_25_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_25" NETLIST ELEMENT "X"
				[
					PROPERTY W,L
					L = PERIMETER_COINCIDE (NCAPGATE_N_25, PLY_C) / 2
					Ammc = area (NCAPGATE_N_25)
					W = Ammc / L
				]
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
				TRACE PROPERTY C(NCAP_25) L L 3
				TRACE PROPERTY C(NCAP_25) W W 3
			#ELSE
				DEVICE C(NCAP_25_NO_VT_IMP) NCAPGATE_25 PLY_C(POS) WEL(NEG) <NCAPGATE_25_1>
				[
					PROPERTY WF,LF,NF
					NF = COUNT(NCAPGATE_25_1)
					LF = PERIMETER_INSIDE (NCAPGATE_25_1, PLY_C) / (NF*2)
					Ammc = area (NCAPGATE_25_1)
					WF = Ammc / LF / NF
				]
				DEVICE C(NCAP_25) NCAPGATE_N_25 PLY_C(POS) WEL(NEG)
				[
					PROPERTY W,L
					L = PERIMETER_INSIDE (NCAPGATE_N_25, PLY_C) / 2
					Ammc = area (NCAPGATE_N_25)
					W = Ammc / L
				]
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) NF NF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) LF LF 3
				TRACE PROPERTY C(NCAP_25_NO_VT_IMP) WF WF 3
				TRACE PROPERTY C(NCAP_25) L L 3
				TRACE PROPERTY C(NCAP_25) W W 3
			#ENDIF
		#ENDIF
	#ENDIF
#ENDIF
#IFDEF RCFLOW_CCI
	DEVICE MN(N_10_SPNVT) N_NVT_G N_NVT_G(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSPROP N_NVT_G NSD_C DIFF BNDIFF
	TRACE PROPERTY MN(N_10_SPNVT) L L 3
	TRACE PROPERTY MN(N_10_SPNVT) W W 3

	DEVICE MN(N_12_LLNVT) N_NVT_G_12 N_NVT_G_12(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSPROP N_NVT_G_12 NSD_C DIFF BNDIFF
	TRACE PROPERTY MN(N_12_LLNVT) L L 3
	TRACE PROPERTY MN(N_12_LLNVT) W W 3
#ELSE
	DEVICE MN(N_10_SPNVT) N_NVT_G PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSPROP N_NVT_G NSD_C DIFF BNDIFF
	TRACE PROPERTY MN(N_10_SPNVT) L L 3
	TRACE PROPERTY MN(N_10_SPNVT) W W 3

	DEVICE MN(N_12_LLNVT) N_NVT_G_12 PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)<DIFF><BNDIFF>
	CMACRO MOSPROP N_NVT_G_12 NSD_C DIFF BNDIFF
	TRACE PROPERTY MN(N_12_LLNVT) L L 3
	TRACE PROPERTY MN(N_12_LLNVT) W W 3
#ENDIF

/* SRAM CELL */
#IFDEF RCFLOW_CCI
	DEVICE MP(P_L99_LLHVT) P_L099_LLHVT P_L099_LLHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L99_LLHVT) L L 3
	TRACE PROPERTY MP(P_L99_LLHVT) W W 3

	DEVICE MN(N_PD99_LLHVT) N_PD099_LLHVT N_PD099_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD99_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD99_LLHVT) W W 3

	DEVICE MN(N_PG99_LLHVT) N_PG099_LLHVT N_PG099_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG99_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG99_LLHVT) W W 3

	DEVICE MP(P_L99_SPHVT) P_L099_SPHVT P_L099_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	DEVICE MN(N_PD99_SPHVT) N_PD099_SPHVT N_PD099_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	DEVICE MN(N_PG99_SPHVT) N_PG099_SPHVT N_PG099_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)

	DEVICE MP(P_L99_SPHVT) P_L99_SPHVT P_L99_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L99_SPHVT) L L 3
	TRACE PROPERTY MP(P_L99_SPHVT) W W 3

	DEVICE MN(N_PD99_SPHVT) N_PD99_SPHVT N_PD99_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD99_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD99_SPHVT) W W 3

	DEVICE MN(N_PG99_SPHVT) N_PG99_SPHVT N_PG99_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG99_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG99_SPHVT) W W 3

	DEVICE MP(P_L116_LLHVT) P_L116_LLHVT P_L116_LLHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L116_LLHVT) L L 3
	TRACE PROPERTY MP(P_L116_LLHVT) W W 3

	DEVICE MN(N_PD116_LLHVT) N_PD116_LLHVT N_PD116_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD116_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD116_LLHVT) W W 3

	DEVICE MN(N_PG116_LLHVT) N_PG116_LLHVT N_PG116_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG116_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG116_LLHVT) W W 3

	DEVICE MP(P_L116_SPHVT) P_L116_SPHVT P_L116_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L116_SPHVT) L L 3
	TRACE PROPERTY MP(P_L116_SPHVT) W W 3

	DEVICE MN(N_PD116_SPHVT) N_PD116_SPHVT N_PD116_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD116_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD116_SPHVT) W W 3

	DEVICE MN(N_PG116_SPHVT) N_PG116_SPHVT N_PG116_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG116_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG116_SPHVT) W W 3

	DEVICE MP(P_L126_LLHVT) P_L126_LLHVT P_L126_LLHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L126_LLHVT) L L 3
	TRACE PROPERTY MP(P_L126_LLHVT) W W 3

	DEVICE MN(N_PD126_LLHVT) N_PD126_LLHVT N_PD126_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD126_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD126_LLHVT) W W 3

	DEVICE MN(N_PG126_LLHVT) N_PG126_LLHVT N_PG126_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG126_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG126_LLHVT) W W 3

	DEVICE MP(P_L126_SPHVT) P_L126_SPHVT P_L126_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L126_SPHVT) L L 3
	TRACE PROPERTY MP(P_L126_SPHVT) W W 3

	DEVICE MN(N_PD126_SPHVT) N_PD126_SPHVT N_PD126_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD126_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD126_SPHVT) W W 3

	DEVICE MN(N_PG126_SPHVT) N_PG126_SPHVT N_PG126_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG126_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG126_SPHVT) W W 3

	DEVICE MP(P_L208_LLHVT) P_L208_LLHVT P_L208_LLHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L208_LLHVT) L L 3
	TRACE PROPERTY MP(P_L208_LLHVT) W W 3

	DEVICE MN(N_PD208_LLHVT) N_PD208_LLHVT N_PD208_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD208_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD208_LLHVT) W W 3

	DEVICE MN(N_PG208_LLHVT) N_PG208_LLHVT N_PG208_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG208_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG208_LLHVT) W W 3

	DEVICE MP(P_L208_SPHVT) P_L208_SPHVT P_L208_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L208_SPHVT) L L 3
	TRACE PROPERTY MP(P_L208_SPHVT) W W 3

	DEVICE MN(N_PD208_SPHVT) N_PD208_SPHVT N_PD208_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD208_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD208_SPHVT) W W 3

	DEVICE MN(N_PG208_SPHVT) N_PG208_SPHVT N_PG208_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG208_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG208_SPHVT) W W 3

	DEVICE MP(P_L240_SPHVT) P_L240_SPHVT P_L240_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B) 
	TRACE PROPERTY MP(P_L240_SPHVT) L L 3
	TRACE PROPERTY MP(P_L240_SPHVT) W W 3

	DEVICE MN(N_PD240_SPHVT) N_PD240_SPHVT N_PD240_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD240_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD240_SPHVT) W W 3

	DEVICE MN(N_PG240_SPHVT) N_PG240_SPHVT N_PG240_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG240_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG240_SPHVT) W W 3

	DEVICE MP(P_L199P4_SPHVT) P_L199P4_SPHVT P_L199P4_SPHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L199P4_SPHVT) L L 3
	TRACE PROPERTY MP(P_L199P4_SPHVT) W W 3

	DEVICE MN(N_PD199P4_SPHVT) N_PD199P4_SPHVT N_PD199P4_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD199P4_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD199P4_SPHVT) W W 3

	DEVICE MN(N_PG199P4_SPHVT) N_PG199P4_SPHVT N_PG199P4_SPHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG199P4_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG199P4_SPHVT) W W 3

	DEVICE MP(P_L199P4_LLHVT) P_L199P4_LLHVT P_L199P4_LLHVT(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L199P4_LLHVT) L L 3
	TRACE PROPERTY MP(P_L199P4_LLHVT) W W 3

	DEVICE MN(N_PD199P4_LLHVT) N_PD199P4_LLHVT N_PD199P4_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD199P4_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD199P4_LLHVT) W W 3

	DEVICE MN(N_PG199P4_LLHVT) N_PG199P4_LLHVT N_PG199P4_LLHVT(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG199P4_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG199P4_LLHVT) W W 3
#ELSE
	DEVICE MP(P_L99_LLHVT) P_L099_LLHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L99_LLHVT) L L 3
	TRACE PROPERTY MP(P_L99_LLHVT) W W 3

	DEVICE MN(N_PD99_LLHVT) N_PD099_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD99_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD99_LLHVT) W W 3

	DEVICE MN(N_PG99_LLHVT) N_PG099_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG99_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG99_LLHVT) W W 3

	DEVICE MP(P_L99_SPHVT) P_L099_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	DEVICE MN(N_PD99_SPHVT) N_PD099_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	DEVICE MN(N_PG99_SPHVT) N_PG099_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)

	DEVICE MP(P_L99_SPHVT) P_L99_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L99_SPHVT) L L 3
	TRACE PROPERTY MP(P_L99_SPHVT) W W 3

	DEVICE MN(N_PD99_SPHVT) N_PD99_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD99_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD99_SPHVT) W W 3

	DEVICE MN(N_PG99_SPHVT) N_PG99_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG99_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG99_SPHVT) W W 3

	DEVICE MP(P_L116_LLHVT) P_L116_LLHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L116_LLHVT) L L 3
	TRACE PROPERTY MP(P_L116_LLHVT) W W 3

	DEVICE MN(N_PD116_LLHVT) N_PD116_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD116_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD116_LLHVT) W W 3

	DEVICE MN(N_PG116_LLHVT) N_PG116_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG116_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG116_LLHVT) W W 3

	DEVICE MP(P_L116_SPHVT) P_L116_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L116_SPHVT) L L 3
	TRACE PROPERTY MP(P_L116_SPHVT) W W 3

	DEVICE MN(N_PD116_SPHVT) N_PD116_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD116_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD116_SPHVT) W W 3

	DEVICE MN(N_PG116_SPHVT) N_PG116_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG116_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG116_SPHVT) W W 3

	DEVICE MP(P_L126_LLHVT) P_L126_LLHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L126_LLHVT) L L 3
	TRACE PROPERTY MP(P_L126_LLHVT) W W 3

	DEVICE MN(N_PD126_LLHVT) N_PD126_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD126_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD126_LLHVT) W W 3

	DEVICE MN(N_PG126_LLHVT) N_PG126_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG126_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG126_LLHVT) W W 3

	DEVICE MP(P_L126_SPHVT) P_L126_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L126_SPHVT) L L 3
	TRACE PROPERTY MP(P_L126_SPHVT) W W 3

	DEVICE MN(N_PD126_SPHVT) N_PD126_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD126_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD126_SPHVT) W W 3

	DEVICE MN(N_PG126_SPHVT) N_PG126_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG126_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG126_SPHVT) W W 3

	DEVICE MP(P_L208_LLHVT) P_L208_LLHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L208_LLHVT) L L 3
	TRACE PROPERTY MP(P_L208_LLHVT) W W 3

	DEVICE MN(N_PD208_LLHVT) N_PD208_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD208_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD208_LLHVT) W W 3

	DEVICE MN(N_PG208_LLHVT) N_PG208_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG208_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG208_LLHVT) W W 3

	DEVICE MP(P_L208_SPHVT) P_L208_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L208_SPHVT) L L 3
	TRACE PROPERTY MP(P_L208_SPHVT) W W 3

	DEVICE MN(N_PD208_SPHVT) N_PD208_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD208_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD208_SPHVT) W W 3

	DEVICE MN(N_PG208_SPHVT) N_PG208_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG208_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG208_SPHVT) W W 3

	DEVICE MP(P_L240_SPHVT) P_L240_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B) 
	TRACE PROPERTY MP(P_L240_SPHVT) L L 3
	TRACE PROPERTY MP(P_L240_SPHVT) W W 3

	DEVICE MN(N_PD240_SPHVT) N_PD240_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD240_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD240_SPHVT) W W 3

	DEVICE MN(N_PG240_SPHVT) N_PG240_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG240_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG240_SPHVT) W W 3

	DEVICE MP(P_L199P4_SPHVT) P_L199P4_SPHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L199P4_SPHVT) L L 3
	TRACE PROPERTY MP(P_L199P4_SPHVT) W W 3

	DEVICE MN(N_PD199P4_SPHVT) N_PD199P4_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD199P4_SPHVT) L L 3
	TRACE PROPERTY MN(N_PD199P4_SPHVT) W W 3

	DEVICE MN(N_PG199P4_SPHVT) N_PG199P4_SPHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG199P4_SPHVT) L L 3
	TRACE PROPERTY MN(N_PG199P4_SPHVT) W W 3

	DEVICE MP(P_L199P4_LLHVT) P_L199P4_LLHVT PLY_C(G) PSD_C(S) PSD_C(D) WEL(B)
	TRACE PROPERTY MP(P_L199P4_LLHVT) L L 3
	TRACE PROPERTY MP(P_L199P4_LLHVT) W W 3

	DEVICE MN(N_PD199P4_LLHVT) N_PD199P4_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PD199P4_LLHVT) L L 3
	TRACE PROPERTY MN(N_PD199P4_LLHVT) W W 3

	DEVICE MN(N_PG199P4_LLHVT) N_PG199P4_LLHVT PLY_C(G) NSD_C(S) NSD_C(D) PSUB(B)
	TRACE PROPERTY MN(N_PG199P4_LLHVT) L L 3
	TRACE PROPERTY MN(N_PG199P4_LLHVT) W W 3
#ENDIF
//////////////////////////
// Resistor Devices
//////////////////////////
// N-well resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RSNWELL) WELRES WEL(POS) WEL(NEG) PSUB(SUB) NETLIST MODEL "RSNWELL" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(WELRES, WEL) / 2
		L = AREA(WELRES) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RSNWELL) WELRES WEL(POS) WEL(NEG) PSUB(SUB) NETLIST MODEL "RSNWELL" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(WELRES, WEL) / 2
			L = AREA(WELRES) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			WELRES_T1 = PSUB INTERACT WELRES
			WELRES_T2 = WEL INTERACT WELRES
			CONNECT PSD_C WELRES_T1 BY PTAP
			CONNECT NSD_C WELRES_T2 BY NTAP
			DEVICE R(RSNWELL) WELRES WELRES_T2(POS) WELRES_T2(NEG) WELRES_T1(SUB) NETLIST MODEL "RSNWELL" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				rs_nw = 370
				TCR =2E-3
				T = 25
				delta_W = -0.4e-6
				W = PERIMETER_COINCIDE(WELRES, WELRES_T2) / 2
				L = AREA(WELRES) / W
				R = l/(w + delta_W) * rs_nw*(1 + TCR*(T-25))
			]
			TRACE PROPERTY R(RSNWELL) R R 3
			//TRACE PROPERTY R(RSNWELL) L L 3
			//TRACE PROPERTY R(RSNWELL) W W 3
		#ELSE
			DEVICE R(RSNWELL) WELRES WEL(POS) WEL(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				rs_nw = 370
				TCR =2E-3
				T = 25
				delta_W = -0.4e-6
				W = PERIMETER_COINCIDE(WELRES, WEL) / 2
				L = AREA(WELRES) / W
				R = l/(w + delta_W) * rs_nw*(1 + TCR*(T-25))
			]
			TRACE PROPERTY R(RSNWELL) R R 3
			//TRACE PROPERTY R(RSNWELL) L L 3
			//TRACE PROPERTY R(RSNWELL) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// HR resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNHR1000) NSHRPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNHR1000" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG 
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSHRPYR, PLY_C) / 2
		L = AREA(NSHRPYR) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNHR1000) NSHRPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNHR1000" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSHRPYR, PLY_C) / 2
			L = AREA(NSHRPYR) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNHR1000) NSHRPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNHR1000" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				W = PERIMETER_COINCIDE(NSHRPYR, PLY_C) / 2
				L = AREA(NSHRPYR) / W
				RS = 1012
				REND = 162E-6
				DW = -0.034E-6
				R = (2*REND+RS*(L-0.76E-6))/(W+DW)
			]
			TRACE PROPERTY R(RNHR1000) R R 3
			// TRACE PROPERTY R(RNHR1000) L L 3
			// TRACE PROPERTY R(RNHR1000) W W 3
		#ELSE
			DEVICE R(RNHR1000) NSHRPYR PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				W = PERIMETER_COINCIDE(NSHRPYR, PLY_C) / 2
				L = AREA(NSHRPYR) / W
				RS = 1012
				REND = 162E-6
				DW = -0.034E-6
				R = (2*REND+RS*(L-0.76E-6))/(W+DW)
			]
			TRACE PROPERTY R(RNHR1000) R R 3
			// TRACE PROPERTY R(RNHR1000) L L 3
			// TRACE PROPERTY R(RNHR1000) W W 3
		#ENDIF
	#ENDIF
#ENDIF


// Non-Salicide N+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNNPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
		L = AREA(NSNPYR) / W
	]
	DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNNPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
		L = AREA(NSNPYR) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNNPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
			L = AREA(NSNPYR) / W
		]
		DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNNPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
			L = AREA(NSNPYR) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNNPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 100
				REND = 8E-6
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
				L = AREA(NSNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNNPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 100
				REND = 8E-6
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
				L = AREA(NSNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RNNPO) R R 3
			//TRACE PROPERTY R(RNNPO) L L 3
			//TRACE PROPERTY R(RNNPO) W W 3
		#ELSE
			DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 100
				REND = 8E-6
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
				L = AREA(NSNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			DEVICE R(RNNPO) NSNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS = 100
				REND = 8E-6
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(NSNPYR, PLY_C) / 2
				L = AREA(NSNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RNNPO) R R 3
			//TRACE PROPERTY R(RNNPO) L L 3
			//TRACE PROPERTY R(RNNPO) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Non-Salicide P+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
		L = AREA(NSPPYR) / W
	]
	DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
		L = AREA(NSPPYR) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
			L = AREA(NSPPYR) / W
		]
		DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
			L = AREA(NSPPYR) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
				L = AREA(NSPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
				L = AREA(NSPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			TRACE PROPERTY R(RNPPO) R R 3
			//TRACE PROPERTY R(RNPPO) L L 3
			//TRACE PROPERTY R(RNPPO) W W 3
		#ELSE
			DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
				L = AREA(NSPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			DEVICE R(RNPPO) NSPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(NSPPYR, PLY_C) / 2
				L = AREA(NSPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			TRACE PROPERTY R(RNPPO) R R 3
			//TRACE PROPERTY R(RNPPO) L L 3
			//TRACE PROPERTY R(RNPPO) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// CENTER SEGMENTS Non-Salicide P+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO_CS" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
		L = AREA(NSPPYR_CS) / W
	]
	DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO_CS" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
		L = AREA(NSPPYR_CS) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO_CS" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
			L = AREA(NSPPYR_CS) / W
		]
		DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO_CS" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
			L = AREA(NSPPYR_CS) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO_CS" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
				L = AREA(NSPPYR_CS) / W
				R = RS*(L+LTAP)/(W+DW)
			]
			DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO_CS" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
				L = AREA(NSPPYR_CS) / W
				R = RS*(L+LTAP)/(W+DW)
			]
			TRACE PROPERTY R(RNPPO_CS) R R 3
			//TRACE PROPERTY R(RNPPO_CS) L L 3
			//TRACE PROPERTY R(RNPPO_CS) W W 3
		#ELSE
			DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
				L = AREA(NSPPYR_CS) / W
				R = RS*(L+LTAP)/(W+DW)
			]
			DEVICE R(RNPPO_CS) NSPPYR_CS PLY_C(POS) PLY_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_CS, PLY_C) / 2
				L = AREA(NSPPYR_CS) / W
				R = RS*(L+LTAP)/(W+DW)
			]
			TRACE PROPERTY R(RNPPO_CS) R R 3
			//TRACE PROPERTY R(RNPPO_CS) L L 3
			//TRACE PROPERTY R(RNPPO_CS) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// END SEGMENTS Non-Salicide P+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO_ES" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
		L = AREA(NSPPYR_ES) / W
	]
	DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO_ES" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
		L = AREA(NSPPYR_ES) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO_ES" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
			L = AREA(NSPPYR_ES) / W
		]
		DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO_ES" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
			L = AREA(NSPPYR_ES) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RNPPO_ES" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
				L = AREA(NSPPYR_ES) / W
				R = (REND+RS*(L+LTAP/2))/(W+DW)
			]
			DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RNPPO_ES" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
				L = AREA(NSPPYR_ES) / W
				R = (REND+RS*(L+LTAP/2))/(W+DW)
			]
			TRACE PROPERTY R(RNPPO_ES) R R 3
			//TRACE PROPERTY R(RNPPO_ES) L L 3
			//TRACE PROPERTY R(RNPPO_ES) W W 3
		#ELSE
			DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
				L = AREA(NSPPYR_ES) / W
				R = (REND+RS*(L+LTAP/2))/(W+DW)
			]
			DEVICE R(RNPPO_ES) NSPPYR_ES PLY_C(POS) PLY_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS = 240
				REND = 22E-6
				DW = -0.036E-6
				LTAP = 0.24E-6
				W = PERIMETER_COINCIDE(NSPPYR_ES, PLY_C) / 2
				L = AREA(NSPPYR_ES) / W
				R = (REND+RS*(L+LTAP/2))/(W+DW)
			]
			TRACE PROPERTY R(RNPPO_ES) R R 3
			//TRACE PROPERTY R(RNPPO_ES) L L 3
			//TRACE PROPERTY R(RNPPO_ES) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Customerized Salicide P+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) WEL(SUB) <CONT_PO1_MNS> NETLIST MODEL "RSPPO_A" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,NC,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
		L = AREA(SPPYR_A) / W
		NC= COUNT(CONT_PO1_MNS)
	]
	DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) PSUB(SUB) <CONT_PO1_MNS> NETLIST MODEL "RSPPO_A" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,NC,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
		L = AREA(SPPYR_A) / W
		NC= COUNT(CONT_PO1_MNS)
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) WEL(SUB) <CONT_PO1_MNS> NETLIST MODEL "RSPPO_A" NETLIST ELEMENT "X"
		[
			PROPERTY W,L,NC
			W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
			L = AREA(SPPYR_A) / W
			NC= COUNT(CONT_PO1_MNS)
		]
		DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) PSUB(SUB) <CONT_PO1_MNS> NETLIST MODEL "RSPPO_A" NETLIST ELEMENT "X"
		[
			PROPERTY W,L,NC
			W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
			L = AREA(SPPYR_A) / W
			NC= COUNT(CONT_PO1_MNS)
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) WEL(SUB) <CONT_PO1_MNS> NETLIST MODEL "RSPPO_A" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R,NC
				RS = 6.5 
				RC = 12.33 
				DW = -0.0067E-6
				W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
				L = AREA(SPPYR_A) / W
				NC= COUNT(CONT_PO1_MNS)
				R = (2*RC/NC+RS*L/(W+DW))
			]
			DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) PSUB(SUB) <CONT_PO1_MNS> NETLIST MODEL "RSPPO_A" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R,NC
				RS = 6.5 
				RC = 12.33 
				DW = -0.0067E-6
				W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
				L = AREA(SPPYR_A) / W
				NC= COUNT(CONT_PO1_MNS)
				R = (2*RC/NC+RS*L/(W+DW))
			]
			TRACE PROPERTY R(RSPPO_A) R R 3
			//TRACE PROPERTY R(RSPPO_A) L L 3
			//TRACE PROPERTY R(RSPPO_A) W W 3
		#ELSE
			DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) WEL(SUB) <CONT_PO1_MNS>
			[
				PROPERTY W,L,R,NC
				RS = 6.5 
				RC = 12.33 
				DW = -0.0067E-6
				W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
				L = AREA(SPPYR_A) / W
				NC= COUNT(CONT_PO1_MNS)
				R = (2*RC/NC+RS*L/(W+DW))
			]
			DEVICE R(RSPPO_A) SPPYR_A PLY_X(POS) PLY_X(NEG) PSUB(SUB) <CONT_PO1_MNS>
			[
				PROPERTY W,L,R,NC
				RS = 6.5 
				RC = 12.33 
				DW = -0.0067E-6
				W = PERIMETER_COINCIDE(SPPYR_A, PLY_X) / 2
				L = AREA(SPPYR_A) / W
				NC= COUNT(CONT_PO1_MNS)
				R = (2*RC/NC+RS*L/(W+DW))
			]
			TRACE PROPERTY R(RSPPO_A) R R 3
			//TRACE PROPERTY R(RSPPO_A) L L 3
			//TRACE PROPERTY R(RSPPO_A) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Non-Salicide N+ diffusion resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNND) NSNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB) NETLIST MODEL "RNND" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSNDRES, NSD_C) / 2
		L = AREA(NSNDRES) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNND) NSNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB) NETLIST MODEL "RNND" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSNDRES, NSD_C) / 2
			L = AREA(NSNDRES) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNND) NSNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB) NETLIST MODEL "RNND" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS= 82
				REND = 12E-6
				DW= -0.02E-6
				W = PERIMETER_COINCIDE(NSNDRES, NSD_C) / 2
				L = AREA(NSNDRES) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RNND) R R 3
			//TRACE PROPERTY R(RNND) L L 3
			//TRACE PROPERTY R(RNND) W W 3
		#ELSE
			DEVICE R(RNND) NSNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS= 82
				REND = 12E-6
				DW= -0.02E-6
				W = PERIMETER_COINCIDE(NSNDRES, NSD_C) / 2
				L = AREA(NSNDRES) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RNND) R R 3
			//TRACE PROPERTY R(RNND) L L 3
			//TRACE PROPERTY R(RNND) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Non-Salicide P+ diffusion resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RNPD) NSPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB) NETLIST MODEL "RNPD" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(NSPDRES, PSD_C) / 2
		L = AREA(NSPDRES) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RNPD) NSPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB) NETLIST MODEL "RNPD" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(NSPDRES, PSD_C) / 2
			L = AREA(NSPDRES) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RNPD) NSPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB) NETLIST MODEL "RNPD" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 95
				REND = 13E-6
				DW = -0.02E-6
				W = PERIMETER_COINCIDE(NSPDRES, PSD_C) / 2
				L = AREA(NSPDRES) / W
				R = (2*REND + RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RNPD) R R 3
			//TRACE PROPERTY R(RNPD) L L 3
			//TRACE PROPERTY R(RNPD) W W 3
		#ELSE
			DEVICE R(RNPD) NSPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 95
				REND = 13E-6
				DW = -0.02E-6
				W = PERIMETER_COINCIDE(NSPDRES, PSD_C) / 2
				L = AREA(NSPDRES) / W
				R = (2*REND + RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RNPD) R R 3
			//TRACE PROPERTY R(RNPD) L L 3
			//TRACE PROPERTY R(RNPD) W W 3
		#ENDIF
	#ENDIF
#ENDIF


// Salicide N+ diffusion resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RSND) SNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB) NETLIST MODEL "RSND" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SNDRES, NSD_C) / 2
		L = AREA(SNDRES) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RSND) SNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB) NETLIST MODEL "RSND" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(SNDRES, NSD_C) / 2
			L = AREA(SNDRES) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RSND) SNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB) NETLIST MODEL "RSND" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS= 8
				REND = 0
				DW= -0.02E-6
				W = PERIMETER_COINCIDE(SNDRES, NSD_C) / 2
				L = AREA(SNDRES) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RSND) R R 3
			//TRACE PROPERTY R(RSND) L L 3
			//TRACE PROPERTY R(RSND) W W 3
		#ELSE
			DEVICE R(RSND) SNDRES NSD_C(POS) NSD_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS= 8
				REND = 0
				DW= -0.02E-6
				W = PERIMETER_COINCIDE(SNDRES, NSD_C) / 2
				L = AREA(SNDRES) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RSND) R R 3
			//TRACE PROPERTY R(RSND) L L 3
			//TRACE PROPERTY R(RSND) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Salicide P+ diffusion resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RSPD) SPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB) NETLIST MODEL "RSPD" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SPDRES, PSD_C) / 2
		L = AREA(SPDRES) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RSPD) SPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB) NETLIST MODEL "RSPD" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(SPDRES, PSD_C) / 2
			L = AREA(SPDRES) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RSPD) SPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB) NETLIST MODEL "RSPD" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 8
				REND = 0
				DW = -0.02E-6
				W = PERIMETER_COINCIDE(SPDRES, PSD_C) / 2
				L = AREA(SPDRES) / W
				R = (2*REND + RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RSPD) R R 3
			//TRACE PROPERTY R(RSPD) L L 3
			//TRACE PROPERTY R(RSPD) W W 3
		#ELSE
			DEVICE R(RSPD) SPDRES PSD_C(POS) PSD_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 8
				REND = 0
				DW = -0.02E-6
				W = PERIMETER_COINCIDE(SPDRES, PSD_C) / 2
				L = AREA(SPDRES) / W
				R = (2*REND + RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RSPD) R R 3
			//TRACE PROPERTY R(RSPD) L L 3
			//TRACE PROPERTY R(RSPD) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Salicide N+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RSNPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
		L = AREA(SNPYR) / W
	]
	DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RSNPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
		L = AREA(SNPYR) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RSNPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
			L = AREA(SNPYR) / W
		]
		DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RSNPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
			L = AREA(SNPYR) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RSNPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 14
				REND = 0
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
				L = AREA(SNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RSNPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 14
				REND = 0
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
				L = AREA(SNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RSNPO) R R 3
			//TRACE PROPERTY R(RSNPO) L L 3
			//TRACE PROPERTY R(RSNPO) W W 3
		#ELSE
			DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 14
				REND = 0
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
				L = AREA(SNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			DEVICE R(RSNPO) SNPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS = 14
				REND = 0
				DW = -0.053E-6
				W = PERIMETER_COINCIDE(SNPYR, PLY_C) / 2
				L = AREA(SNPYR) / W
				R = (2*REND+RS*L)/(W + DW)
			]
			TRACE PROPERTY R(RSNPO) R R 3
			//TRACE PROPERTY R(RSNPO) L L 3
			//TRACE PROPERTY R(RSNPO) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// Salicide P+ Poly resistor
#IFDEF PEXRUN_MC_HSPICE
	DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RSPPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
		L = AREA(SPPYR) / W
	]
	DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RSPPO" NETLIST ELEMENT "X"
	[
		PROPERTY W,L,MIS_FLAG
		MIS_FLAG = 1
		W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
		L = AREA(SPPYR) / W
	]
#ELSE
	#IFDEF PEXRUN
		DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RSPPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
			L = AREA(SPPYR) / W
		]
		DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RSPPO" NETLIST ELEMENT "X"
		[
			PROPERTY W,L
			W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
			L = AREA(SPPYR) / W
		]
	#ELSE
		#IFDEF RCFLOW_CCI
			DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB) NETLIST MODEL "RSPPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 8
				REND =0
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
				L = AREA(SPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB) NETLIST MODEL "RSPPO" NETLIST ELEMENT "X"
			[
				PROPERTY W,L,R
				RS = 8
				REND =0
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
				L = AREA(SPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			TRACE PROPERTY R(RSPPO) R R 3
			//TRACE PROPERTY R(RSPPO) L L 3
			//TRACE PROPERTY R(RSPPO) W W 3
		#ELSE
			DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) WEL(SUB)
			[
				PROPERTY W,L,R
				RS = 8
				REND =0
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
				L = AREA(SPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			DEVICE R(RSPPO) SPPYR PLY_C(POS) PLY_C(NEG) PSUB(SUB)
			[
				PROPERTY W,L,R
				RS = 8
				REND =0
				DW = -0.036E-6
				W = PERIMETER_COINCIDE(SPPYR, PLY_C) / 2
				L = AREA(SPPYR) / W
				R = (2*REND+RS*L)/(W+DW)
			]
			TRACE PROPERTY R(RSPPO) R R 3
			//TRACE PROPERTY R(RSPPO) L L 3
			//TRACE PROPERTY R(RSPPO) W W 3
		#ENDIF
	#ENDIF
#ENDIF

// RF Non-Salicide N+Poly Resistor //
DXY_RNNPO_NW_RF = SIZE1 INTERACT (PLY_I INTERACT NSNPYR_RFNW)
RF_NSNPYR_RFNW = NWELL ENCLOSE NSNPYR_RFNW
#IFDEF RCFLOW_CCI
	CONNECT ME1_I RF_NSNPYR_RFNW BY DIF_CONT
	CONNECT ME1_I NSNPYR_RFNW BY PO_CONT
	RF_NSNPYR_RF_T1 = PSUB INTERACT RF_NSNPYR_RFNW
	RF_NSNPYR_RF_T2 = WEL INTERACT RF_NSNPYR_RFNW
	CONNECT PSD_C RF_NSNPYR_RF_T1 BY PTAP
	CONNECT NSD_C RF_NSNPYR_RF_T2 BY NTAP
	DEVICE RNNPO_NW_RF RF_NSNPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) RF_NSNPYR_RF_T2(NW) RF_NSNPYR_RF_T1(PSUB) <NSNPYR_RFNW> <DXY_RNNPO_NW_RF>
	[
		PROPERTY L,W,R,DX,DY
		W = PERIMETER_COINCIDE(NSNPYR_RFNW,PLY_I) / 2
		L = AREA(NSNPYR_RFNW)/ W
		RS = 100
		REND = 8E-6
		deltaW = -0.053E-6
		R = (2*REND+RS*L)/(W+deltaW)
		D = PERIMETER_INSIDE(DXY_RNNPO_NW_RF,RF_NSNPYR_RFNW)
		DX = AREA(DXY_RNNPO_NW_RF)/D
		DY = D-DX-W
	]
	TRACE PROPERTY RNNPO_NW_RF R R 3
	TRACE PROPERTY RNNPO_NW_RF W W 3
	TRACE PROPERTY RNNPO_NW_RF L L 3
	//TRACE PROPERTY RNNPO_NW_RF DX DX 3
	//TRACE PROPERTY RNNPO_NW_RF DY DY 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE RNNPO_NW_RF RF_NSNPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) WEL(NW) PSUB(PSUB) <NSNPYR_RFNW> <DXY_RNNPO_NW_RF>
		[
			PROPERTY L,W,DX,DY,MIS_FLAG
			MIS_FLAG = 1
			W = PERIMETER_COINCIDE(NSNPYR_RFNW,PLY_I) / 2
			L = AREA(NSNPYR_RFNW)/ W
			D = PERIMETER_INSIDE(DXY_RNNPO_NW_RF,RF_NSNPYR_RFNW)
			DX = AREA(DXY_RNNPO_NW_RF)/D
			DY = D-DX-W
		]
		TRACE PROPERTY RNNPO_NW_RF W W 3
		TRACE PROPERTY RNNPO_NW_RF L L 3
		//TRACE PROPERTY RNNPO_NW_RF DX DX 3
		//TRACE PROPERTY RNNPO_NW_RF DY DY 3
	#ELSE
		DEVICE RNNPO_NW_RF RF_NSNPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) WEL(NW) PSUB(PSUB) <NSNPYR_RFNW> <DXY_RNNPO_NW_RF>
		[
			PROPERTY L,W,R,DX,DY
			W = PERIMETER_COINCIDE(NSNPYR_RFNW,PLY_I) / 2
			L = AREA(NSNPYR_RFNW)/ W
			RS = 100
			REND = 8E-6
			deltaW = -0.053E-6
			R = (2*REND+RS*L)/(W+deltaW)
			D = PERIMETER_INSIDE(DXY_RNNPO_NW_RF,RF_NSNPYR_RFNW)
			DX = AREA(DXY_RNNPO_NW_RF)/D
			DY = D-DX-W
		]
		TRACE PROPERTY RNNPO_NW_RF R R 3
		TRACE PROPERTY RNNPO_NW_RF W W 3
		TRACE PROPERTY RNNPO_NW_RF L L 3
		//TRACE PROPERTY RNNPO_NW_RF DX DX 3
		//TRACE PROPERTY RNNPO_NW_RF DY DY 3
	#ENDIF
#ENDIF
//NSNPYR_RF_WO = COPY NSNPYR_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I NSPPYR_RF BY PO_CONT
	NSNPYR_RF_T1 = PSUB INTERACT NSNPYR_RF
	CONNECT PSD_C NSNPYR_RF_T1 BY PTAP
	DEVICE RNNPO_RF NSNPYR_RF PLY_I(PLUS) PLY_I(MINUS) NSPPYR_RF_T1(PSUB) 
	[
		PROPERTY L,W,R
		W = PERIMETER_COINCIDE(NSNPYR_RF,PLY_I) / 2
		L = AREA(NSNPYR_RF)/ W
		RS = 100
		REND = 8E-6
		deltaW = -0.053E-6
		R = (2*REND+RS*L)/(W+deltaW)
	]
	TRACE PROPERTY RNNPO_RF R R 3
	TRACE PROPERTY RNNPO_RF W W 3
	TRACE PROPERTY RNNPO_RF L L 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE RNNPO_RF NSNPYR_RF PLY_I(PLUS) PLY_I(MINUS) PSUB(PSUB) 
		[
			PROPERTY L,W,MIS_FLAG
			MIS_FLAG = 1
			W = PERIMETER_COINCIDE(NSNPYR_RF,PLY_I) / 2
			L = AREA(NSNPYR_RF)/ W
		]
		TRACE PROPERTY RNNPO_RF W W 3
		TRACE PROPERTY RNNPO_RF L L 3
	#ELSE
		DEVICE RNNPO_RF NSNPYR_RF PLY_I(PLUS) PLY_I(MINUS) PSUB(PSUB) 
		[
			PROPERTY L,W,R
			W = PERIMETER_COINCIDE(NSNPYR_RF,PLY_I) / 2
			L = AREA(NSNPYR_RF)/ W
			RS = 100
			REND = 8E-6
			deltaW = -0.053E-6
			R = (2*REND+RS*L)/(W+deltaW)
		]
		TRACE PROPERTY RNNPO_RF R R 3
		TRACE PROPERTY RNNPO_RF W W 3
		TRACE PROPERTY RNNPO_RF L L 3
	#ENDIF
#ENDIF
// RF Non-Salicide P+Poly Resistor //
DXY_RNPPO_NW_RF = SIZE1 INTERACT (PLY_I INTERACT NSPPYR_RFNW)
RF_NSPPYR_RFNW = NWELL ENCLOSE NSPPYR_RFNW
#IFDEF RCFLOW_CCI
	CONNECT ME1_I RF_NSPPYR_RFNW BY DIF_CONT
	CONNECT ME1_I NSPPYR_RFNW BY PO_CONT
	RF_NSPPYR_RFNW_T1 = PSUB INTERACT RF_NSPPYR_RFNW
	RF_NSPPYR_RFNW_T2 = WEL INTERACT RF_NSPPYR_RFNW
	CONNECT PSD_C RF_NSPPYR_RFNW_T1 BY PTAP
	CONNECT NSD_C RF_NSPPYR_RFNW_T2 BY NTAP
	DEVICE RNPPO_NW_RF RF_NSPPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) RF_NSPPYR_RFNW_T2(NW) RF_NSPPYR_RFNW_T1(PSUB) <NSPPYR_RFNW> <DXY_RNPPO_NW_RF>
	[
		PROPERTY W,L,R,DX,DY
		W = PERIMETER_COINCIDE(NSPPYR_RFNW,PLY_I) / 2
		L = AREA(NSPPYR_RFNW)/ W
		RS= 240
		REND = 22E-6
		deltaW = -0.036E-6
		R = (2*REND+RS*L)/(W+deltaW)
		D = PERIMETER_INSIDE(DXY_RNPPO_NW_RF,RF_NSPPYR_RFNW)
		DX = AREA(DXY_RNPPO_NW_RF)/D
		DY = D-DX-W
	]
	TRACE PROPERTY RNPPO_NW_RF R R 3
	TRACE PROPERTY RNPPO_NW_RF W W 3
	TRACE PROPERTY RNPPO_NW_RF L L 3
	//TRACE PROPERTY RNPPO_NW_RF DX DX 3
	//TRACE PROPERTY RNPPO_NW_RF DY DY 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE RNPPO_NW_RF RF_NSPPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) WEL(NW) PSUB(PSUB) <NSPPYR_RFNW> <DXY_RNPPO_NW_RF>
		[
			PROPERTY W,L,DX,DY,MIS_FLAG
			MIS_FLAG = 1
			W = PERIMETER_COINCIDE(NSPPYR_RFNW,PLY_I) / 2
			L = AREA(NSPPYR_RFNW)/ W
			D = PERIMETER_INSIDE(DXY_RNPPO_NW_RF,RF_NSPPYR_RFNW)
			DX = AREA(DXY_RNPPO_NW_RF)/D
			DY = D-DX-W
		]
		TRACE PROPERTY RNPPO_NW_RF W W 3
		TRACE PROPERTY RNPPO_NW_RF L L 3
		//TRACE PROPERTY RNPPO_NW_RF DX DX 3
		//TRACE PROPERTY RNPPO_NW_RF DY DY 3
	#ELSE
		DEVICE RNPPO_NW_RF RF_NSPPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) WEL(NW) PSUB(PSUB) <NSPPYR_RFNW> <DXY_RNPPO_NW_RF>
		[
			PROPERTY W,L,R,DX,DY
			W = PERIMETER_COINCIDE(NSPPYR_RFNW,PLY_I) / 2
			L = AREA(NSPPYR_RFNW)/ W
			RS= 240
			REND = 22E-6
			deltaW = -0.036E-6
			R = (2*REND+RS*L)/(W+deltaW)
			D = PERIMETER_INSIDE(DXY_RNPPO_NW_RF,RF_NSPPYR_RFNW)
			DX = AREA(DXY_RNPPO_NW_RF)/D
			DY = D-DX-W
		]
		TRACE PROPERTY RNPPO_NW_RF R R 3
		TRACE PROPERTY RNPPO_NW_RF W W 3
		TRACE PROPERTY RNPPO_NW_RF L L 3
		//TRACE PROPERTY RNPPO_NW_RF DX DX 3
		//TRACE PROPERTY RNPPO_NW_RF DY DY 3
	#ENDIF
#ENDIF
//NSPPYR_RF_WO = COPY NSPPYR_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I NSPPYR_RF BY PO_CONT
	NSPPYR_RF_T1 = PSUB INTERACT NSPPYR_RF
	CONNECT PSD_C NSPPYR_RF_T1 BY PTAP
	DEVICE RNPPO_RF NSPPYR_RF PLY_I(PLUS) PLY_I(MINUS) NSPPYR_RF_T1(PSUB) 
	[
		PROPERTY W,L,R
		W = PERIMETER_COINCIDE(NSPPYR_RF,PLY_I) / 2
		L = AREA(NSPPYR_RF)/ W
		RS= 240
		REND = 22E-6
		deltaW = -0.036E-6
		R = (2*REND+RS*L)/(W+deltaW)
	]
	TRACE PROPERTY RNPPO_RF R R 3
	TRACE PROPERTY RNPPO_RF W W 3
	TRACE PROPERTY RNPPO_RF L L 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE RNPPO_RF NSPPYR_RF PLY_I(PLUS) PLY_I(MINUS) PSUB(PSUB) 
		[
			PROPERTY W,L,MIS_FLAG
			MIS_FLAG = 1
			W = PERIMETER_COINCIDE(NSPPYR_RF,PLY_I) / 2
			L = AREA(NSPPYR_RF)/ W
		]
		TRACE PROPERTY RNPPO_RF W W 3
		TRACE PROPERTY RNPPO_RF L L 3
	#ELSE
		DEVICE RNPPO_RF NSPPYR_RF PLY_I(PLUS) PLY_I(MINUS) PSUB(PSUB) 
		[
			PROPERTY W,L,R
			W = PERIMETER_COINCIDE(NSPPYR_RF,PLY_I) / 2
			L = AREA(NSPPYR_RF)/ W
			RS= 240
			REND = 22E-6
			deltaW = -0.036E-6
			R = (2*REND+RS*L)/(W+deltaW)
		]
		TRACE PROPERTY RNPPO_RF R R 3
		TRACE PROPERTY RNPPO_RF W W 3
		TRACE PROPERTY RNPPO_RF L L 3
	#ENDIF
#ENDIF

// Mixed Mode 3 Terminals HR resistor //
DXY_RNHR_NW_RF = SIZE1 INTERACT (PLY_I INTERACT NSHRPYR_RFNW)
RF_NSHRPYR_RFNW = NWELL ENCLOSE NSHRPYR_RFNW
#IFDEF RCFLOW_CCI
	CONNECT ME1_I NSHRPYR_RFNW BY PO_CONT
	RF_NSHRPYR_RFNW_T1 = PSUB INTERACT RF_NSHRPYR_RFNW
	RF_NSHRPYR_RFNW_T2 = WEL INTERACT RF_NSHRPYR_RFNW
	CONNECT PSD_C RF_NSHRPYR_RFNW_T1 BY PTAP
	CONNECT NSD_C RF_NSHRPYR_RFNW_T2 BY NTAP
	DEVICE RNHR_NW_RF RF_NSHRPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) RF_NSHRPYR_RFNW_T2(NW) RF_NSHRPYR_RFNW_T1(PSUB) <NSHRPYR_RFNW> <DXY_RNHR_NW_RF>
	[
		PROPERTY W,L,R,DX,DY
		W = PERIMETER_COINCIDE(NSHRPYR_RFNW, PLY_I) / 2
		L = AREA(NSHRPYR_RFNW)/W
		REND = 162E-6
		RS = 1012
		deltaW = -0.034E-6
		R = (2*REND+RS*(L-0.76e-6))/(W+deltaW)
		D = PERIMETER_INSIDE(DXY_RNHR_NW_RF,RF_NSHRPYR_RFNW)
		DX = AREA(DXY_RNHR_NW_RF)/D
		DY = D-DX-W
	]
	TRACE PROPERTY RNHR_NW_RF R R 3
	TRACE PROPERTY RNHR_NW_RF L L 3
	TRACE PROPERTY RNHR_NW_RF W W 3
	//TRACE PROPERTY RNHR_NW_RF DX DX 3
	//TRACE PROPERTY RNHR_NW_RF DY DY 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE RNHR_NW_RF RF_NSHRPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) WEL(NW) PSUB(PSUB) <NSHRPYR_RFNW> <DXY_RNHR_NW_RF>
		[
			PROPERTY W,L,DX,DY,MIS_FLAG
			MIS_FLAG = 1
			W = PERIMETER_COINCIDE(NSHRPYR_RFNW, PLY_I) / 2
			L = AREA(NSHRPYR_RFNW)/W
			D = PERIMETER_INSIDE(DXY_RNHR_NW_RF,RF_NSHRPYR_RFNW)
			DX = AREA(DXY_RNHR_NW_RF)/D
			DY = D-DX-W
		]
		TRACE PROPERTY RNHR_NW_RF L L 3
		TRACE PROPERTY RNHR_NW_RF W W 3
		//TRACE PROPERTY RNHR_NW_RF DX DX 3
		//TRACE PROPERTY RNHR_NW_RF DY DY 3
	#ELSE
		DEVICE RNHR_NW_RF RF_NSHRPYR_RFNW PLY_I(PLUS) PLY_I(MINUS) WEL(NW) PSUB(PSUB) <NSHRPYR_RFNW> <DXY_RNHR_NW_RF>
		[
			PROPERTY W,L,R,DX,DY
			W = PERIMETER_COINCIDE(NSHRPYR_RFNW, PLY_I) / 2
			L = AREA(NSHRPYR_RFNW)/W
			REND = 162E-6
			RS = 1012
			deltaW = -0.034E-6
			R = (2*REND+RS*(L-0.76e-6))/(W+deltaW)
			D = PERIMETER_INSIDE(DXY_RNHR_NW_RF,RF_NSHRPYR_RFNW)
			DX = AREA(DXY_RNHR_NW_RF)/D
			DY = D-DX-W
		]
		TRACE PROPERTY RNHR_NW_RF R R 3
		TRACE PROPERTY RNHR_NW_RF L L 3
		TRACE PROPERTY RNHR_NW_RF W W 3
		//TRACE PROPERTY RNHR_NW_RF DX DX 3
		//TRACE PROPERTY RNHR_NW_RF DY DY 3
	#ENDIF
#ENDIF
//NSHRPYR_RF_WO = COPY NSHRPYR_RF
#IFDEF RCFLOW_CCI
	CONNECT ME1_I NSHRPYR_RF BY PO_CONT
	NSHRPYR_RF_T1 = PSUB INTERACT NSHRPYR_RF
	CONNECT PSD_C NSHRPYR_RF_T1 BY PTAP
	DEVICE RNHR_RF NSHRPYR_RF PLY_I(PLUS) PLY_I(MINUS) NSHRPYR_RF_T1(PSUB) 
	[
		PROPERTY W,L,R
		W = PERIMETER_COINCIDE(NSHRPYR_RF, PLY_I) / 2
		L = AREA(NSHRPYR_RF)/W
		REND = 162E-6
		RS = 1012
		deltaW = -0.034E-6
		R= (2*REND+RS*(L-0.76e-6))/(W+deltaW)
	]
	TRACE PROPERTY RNHR_RF R R 3
	TRACE PROPERTY RNHR_RF L L 3
	TRACE PROPERTY RNHR_RF W W 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE RNHR_RF NSHRPYR_RF PLY_I(PLUS) PLY_I(MINUS) PSUB(PSUB) 
		[
			PROPERTY W,L,MIS_FLAG
			MIS_FLAG =1
			W = PERIMETER_COINCIDE(NSHRPYR_RF, PLY_I) / 2
			L = AREA(NSHRPYR_RF)/W
		]
		TRACE PROPERTY RNHR_RF L L 3
		TRACE PROPERTY RNHR_RF W W 3
	#ELSE
		DEVICE RNHR_RF NSHRPYR_RF PLY_I(PLUS) PLY_I(MINUS) PSUB(PSUB) 
		[
			PROPERTY W,L,R
			W = PERIMETER_COINCIDE(NSHRPYR_RF, PLY_I) / 2
			L = AREA(NSHRPYR_RF)/W
			REND = 162E-6
			RS = 1012
			deltaW = -0.034E-6
			R= (2*REND+RS*(L-0.76e-6))/(W+deltaW)
		]
		TRACE PROPERTY RNHR_RF R R 3
		TRACE PROPERTY RNHR_RF L L 3
		TRACE PROPERTY RNHR_RF W W 3
	#ENDIF
#ENDIF
// Metal Fuse Resistor

#IFDEF TOP_METAL_ME9_2T1F
	DEVICE R(FUSE) FUSE_METAL ME9_C ME9_C [0.035]
#ELSE
	#IFDEF TOP_METAL_ME8_2T1F
		DEVICE R(FUSE) FUSE_METAL ME8_C ME8_C [0.035]
	#ELSE
		#IFDEF TOP_METAL_ME8_1T1F
			DEVICE R(FUSE) FUSE_METAL ME8_C ME8_C [0.035]
		#ELSE
			#IFDEF TOP_METAL_ME8_2T0F
				DEVICE R(FUSE) FUSE_METAL ME8_C ME8_C [0.035]
			#ELSE
				#IFDEF TOP_METAL_ME7_2T1F
					DEVICE R(FUSE) FUSE_METAL ME7_C ME7_C [0.035]
				#ELSE
					#IFDEF TOP_METAL_ME7_1T1F
						DEVICE R(FUSE) FUSE_METAL ME7_C ME7_C [0.035]
					#ELSE
						#IFDEF TOP_METAL_ME7_2T0F
							DEVICE R(FUSE) FUSE_METAL ME7_C ME7_C [0.035]
						#ELSE
							#IFDEF TOP_METAL_ME7_1T0F
								DEVICE R(FUSE) FUSE_METAL ME7_C ME7_C [0.035]
							#ELSE
								#IFDEF TOP_METAL_ME6_1T1F
									DEVICE R(FUSE) FUSE_METAL ME6_C ME6_C [0.035]
								#ELSE
									#IFDEF TOP_METAL_ME6T_2T0F
										DEVICE R(FUSE) FUSE_METAL ME6_C ME6_C [0.035]
									#ELSE
										#IFDEF TOP_METAL_ME6_1T0F
											DEVICE R(FUSE) FUSE_METAL ME6_C ME6_C [0.035]
										#ELSE
											#IFDEF TOP_METAL_ME5_1T0F
												DEVICE R(FUSE) FUSE_METAL ME5_C ME5_C [0.035]
											#ELSE
												DEVICE R(FUSE) FUSE_METAL ME4_C ME4_C [0.035]
											#ENDIF
										#ENDIF
									#ENDIF
								#ENDIF
							#ENDIF
						#ENDIF
					#ENDIF
				#ENDIF
			#ENDIF
		#ENDIF
	#ENDIF
#ENDIF

TRACE PROPERTY R(FUSE) R R 3
//TRACE PROPERTY R(FUSE) L L 3
//TRACE PROPERTY R(FUSE) W W 3

///////////////////////////////
// MIM Capacitor
///////////////////////////////
DEVICE C(MIMCAPS) CMMC MMCTP_C(POS) MMCBP_C(NEG) <CMMCE> 
[
	PROPERTY W,L,C
	Ca = 1.544E-3
	Cp = 0.089E-9
	W = perimeter_inside (CMMC, CMMCE) / 2
	Ammc = area (CMMC)
	L = Ammc / W
	C = Ca * Ammc + Cp * 2 * (l + w) 
]
TRACE PROPERTY C(MIMCAPS) C C 3
// TRACE PROPERTY C(MIMCAPS) L L 3
// TRACE PROPERTY C(MIMCAPS) W W 3

//////////////////////////////////
// RF MIM Capacitor
//////////////////////////////////
DXY_RF_CMMC_RFNW = SIZE1 INTERACT RF_CMMC_RFNW
RF_CMMC_RFNW = NWELL ENCLOSE CMMC_RFNW
#IFDEF RCFLOW_CCI
	RF_CMMC_RFNW_T1 = PSUB INTERACT RF_CMMC_RFNW
	RF_CMMC_RFNW_T2 = WEL INTERACT RF_CMMC_RFNW
	CONNECT PSD_C RF_CMMC_RFNW_T1 BY PTAP
	CONNECT NSD_C RF_CMMC_RFNW_T2 BY NTAP
	DEVICE MIMCAPS_20FNW_RFKF RF_CMMC_RFNW MMCTP_I(PLUS) MMCBP_I(MINUS) RF_CMMC_RFNW_T2(NW) RF_CMMC_RFNW_T1(PSUB) <CMMC_RFNW> <CSYMBOL> <DXY_RF_CMMC_RFNW>
	[
		PROPERTY W,L,DX,DY,MO
		L = PERIMETER_COINCIDE(CMMC_RFNW,CSYMBOL)/2
		W = AREA(CMMC_RFNW)/L
		DX = AREA(DXY_RF_CMMC_RFNW)/PERIMETER_INSIDE(DXY_RF_CMMC_RFNW,RF_CMMC_RFNW)
		DY = (PERIMETER_INSIDE(DXY_RF_CMMC_RFNW,RF_CMMC_RFNW)-PERIMETER_COINCIDE(DXY_RF_CMMC_RFNW,MMCBP_I))/2
		#IFDEF TOP_METAL_ME4_1T0F
			MO=1
		#ENDIF
		#IFDEF TOP_METAL_ME5_1T0F
			MO=2
		#ENDIF
		#IFDEF TOP_METAL_ME6_1T0F
			MO=3
		#ENDIF
		#IFDEF TOP_METAL_ME7_1T0F
			MO=4
		#ENDIF
		#IFDEF TOP_METAL_ME6_2T0F
			MO=5
		#ENDIF
		#IFDEF TOP_METAL_ME7_2T0F
			MO=6
		#ENDIF
		#IFDEF TOP_METAL_ME8_2T0F
			MO=7
		#ENDIF
		#IFDEF TOP_METAL_ME6_1T1F
			MO=8
		#ENDIF
		#IFDEF TOP_METAL_ME7_1T1F
			MO=9
		#ENDIF
		#IFDEF TOP_METAL_ME8_1T1F
			MO=10
		#ENDIF
		#IFDEF TOP_METAL_ME7_2T1F
			MO=11
		#ENDIF
		#IFDEF TOP_METAL_ME8_2T1F
			MO=12
		#ENDIF
		#IFDEF TOP_METAL_ME9_2T1F
			MO=13
		#ENDIF
	]
	TRACE PROPERTY MIMCAPS_20FNW_RFKF L L 3
	TRACE PROPERTY MIMCAPS_20FNW_RFKF W W 3
	//TRACE PROPERTY MIMCAPS_20FNW_RFKF MO MO 3
	//TRACE PROPERTY MIMCAPS_20FNW_RFKF DX DX 3
	//TRACE PROPERTY MIMCAPS_20FNW_RFKF DY DY 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE MIMCAPS_20FNW_RFKF RF_CMMC_RFNW MMCTP_I(PLUS) MMCBP_I(MINUS) WEL(NW) PSUB(PSUB) <CMMC_RFNW> <CSYMBOL> <DXY_RF_CMMC_RFNW>
		[
			PROPERTY W,L,DX,DY,MO,MIS_FLAG
			L = PERIMETER_COINCIDE(CMMC_RFNW,CSYMBOL)/2
			W = AREA(CMMC_RFNW)/L
			MIS_FLAG = 1
			DX = AREA(DXY_RF_CMMC_RFNW)/PERIMETER_INSIDE(DXY_RF_CMMC_RFNW,RF_CMMC_RFNW)
			DY = (PERIMETER_INSIDE(DXY_RF_CMMC_RFNW,RF_CMMC_RFNW)-PERIMETER_COINCIDE(DXY_RF_CMMC_RFNW,MMCBP_I))/2
			#IFDEF TOP_METAL_ME4_1T0F
				MO=1
			#ENDIF
			#IFDEF TOP_METAL_ME5_1T0F
				MO=2
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T0F
				MO=3
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T0F
				MO=4
			#ENDIF
			#IFDEF TOP_METAL_ME6_2T0F
				MO=5
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T0F
				MO=6
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T0F
				MO=7
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T1F
				MO=8
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T1F
				MO=9
			#ENDIF
			#IFDEF TOP_METAL_ME8_1T1F
				MO=10
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T1F
				MO=11
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T1F
				MO=12
			#ENDIF
			#IFDEF TOP_METAL_ME9_2T1F
				MO=13
			#ENDIF
		]
		TRACE PROPERTY MIMCAPS_20FNW_RFKF L L 3
		TRACE PROPERTY MIMCAPS_20FNW_RFKF W W 3
		//TRACE PROPERTY MIMCAPS_20FNW_RFKF MO MO 3
		//TRACE PROPERTY MIMCAPS_20FNW_RFKF DX DX 3
		//TRACE PROPERTY MIMCAPS_20FNW_RFKF DY DY 3
	#ELSE
		DEVICE MIMCAPS_20FNW_RFKF RF_CMMC_RFNW MMCTP_I(PLUS) MMCBP_I(MINUS) WEL(NW) PSUB(PSUB) <CMMC_RFNW> <CSYMBOL> <DXY_RF_CMMC_RFNW>
		[
			PROPERTY W,L,DX,DY,MO
			L = PERIMETER_COINCIDE(CMMC_RFNW,CSYMBOL)/2
			W = AREA(CMMC_RFNW)/L
			DX = AREA(DXY_RF_CMMC_RFNW)/PERIMETER_INSIDE(DXY_RF_CMMC_RFNW,RF_CMMC_RFNW)
			DY = (PERIMETER_INSIDE(DXY_RF_CMMC_RFNW,RF_CMMC_RFNW)-PERIMETER_COINCIDE(DXY_RF_CMMC_RFNW,MMCBP_I))/2
			#IFDEF TOP_METAL_ME4_1T0F
				MO=1
			#ENDIF
			#IFDEF TOP_METAL_ME5_1T0F
				MO=2
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T0F
				MO=3
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T0F
				MO=4
			#ENDIF
			#IFDEF TOP_METAL_ME6_2T0F
				MO=5
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T0F
				MO=6
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T0F
				MO=7
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T1F
				MO=8
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T1F
				MO=9
			#ENDIF
			#IFDEF TOP_METAL_ME8_1T1F
				MO=10
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T1F
				MO=11
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T1F
				MO=12
			#ENDIF
			#IFDEF TOP_METAL_ME9_2T1F
				MO=13
			#ENDIF
		]
		TRACE PROPERTY MIMCAPS_20FNW_RFKF L L 3
		TRACE PROPERTY MIMCAPS_20FNW_RFKF W W 3
		//TRACE PROPERTY MIMCAPS_20FNW_RFKF MO MO 3
		//TRACE PROPERTY MIMCAPS_20FNW_RFKF DX DX 3
		//TRACE PROPERTY MIMCAPS_20FNW_RFKF DY DY 3
	#ENDIF
#ENDIF

#IFDEF RCFLOW_CCI
	CMMC_RF3_T1 = PSUB INTERACT CMMC_RF3
	CONNECT PSD_C CMMC_RF3_T1 BY PTAP
	DEVICE MIMCAPS_20F_RFKF CMMC_RF3 MMCTP_I(PLUS) MMCBP_I(MINUS) CMMC_RF3_T1(PSUB) <CSYMBOL> 
	[
		PROPERTY W,L,MO
		L = PERIMETER_COINCIDE(CMMC_RF3,CSYMBOL)/2
		W = AREA(CMMC_RF3)/L
		#IFDEF TOP_METAL_ME4_1T0F
			MO=1
		#ENDIF
		#IFDEF TOP_METAL_ME5_1T0F
			MO=2
		#ENDIF
		#IFDEF TOP_METAL_ME6_1T0F
			MO=3
		#ENDIF
		#IFDEF TOP_METAL_ME7_1T0F
			MO=4
		#ENDIF
		#IFDEF TOP_METAL_ME6_2T0F
			MO=5
		#ENDIF
		#IFDEF TOP_METAL_ME7_2T0F
			MO=6
		#ENDIF
		#IFDEF TOP_METAL_ME8_2T0F
			MO=7
		#ENDIF
		#IFDEF TOP_METAL_ME6_1T1F
			MO=8
		#ENDIF
		#IFDEF TOP_METAL_ME7_1T1F
			MO=9
		#ENDIF
		#IFDEF TOP_METAL_ME8_1T1F
			MO=10
		#ENDIF
		#IFDEF TOP_METAL_ME7_2T1F
			MO=11
		#ENDIF
		#IFDEF TOP_METAL_ME8_2T1F
			MO=12
		#ENDIF
		#IFDEF TOP_METAL_ME9_2T1F
			MO=13
		#ENDIF
	]
	TRACE PROPERTY MIMCAPS_20F_RFKF L L 3
	TRACE PROPERTY MIMCAPS_20F_RFKF W W 3
	//TRACE PROPERTY MIMCAPS_20F_RFKF MO MO 3
#ELSE
	#IFDEF PEXRUN_MC_HSPICE
		DEVICE MIMCAPS_20F_RFKF CMMC_RF3 MMCTP_I(PLUS) MMCBP_I(MINUS) PSUB(PSUB) <CSYMBOL> 
		[
			PROPERTY W,L,MO,MIS_FLAG
			MIS_FLAG = 1
			L = PERIMETER_COINCIDE(CMMC_RF3,CSYMBOL)/2
			W = AREA(CMMC_RF3)/L
			#IFDEF TOP_METAL_ME4_1T0F
				MO=1
			#ENDIF
			#IFDEF TOP_METAL_ME5_1T0F
				MO=2
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T0F
				MO=3
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T0F
				MO=4
			#ENDIF
			#IFDEF TOP_METAL_ME6_2T0F
				MO=5
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T0F
				MO=6
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T0F
				MO=7
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T1F
				MO=8
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T1F
				MO=9
			#ENDIF
			#IFDEF TOP_METAL_ME8_1T1F
				MO=10
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T1F
				MO=11
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T1F
				MO=12
			#ENDIF
			#IFDEF TOP_METAL_ME9_2T1F
				MO=13
			#ENDIF
		]
		TRACE PROPERTY MIMCAPS_20F_RFKF L L 3
		TRACE PROPERTY MIMCAPS_20F_RFKF W W 3
		//TRACE PROPERTY MIMCAPS_20F_RFKF MO MO 3
	#ELSE
		DEVICE MIMCAPS_20F_RFKF CMMC_RF3 MMCTP_I(PLUS) MMCBP_I(MINUS) PSUB(PSUB) <CSYMBOL> 
		[
			PROPERTY W,L,MO
			L = PERIMETER_COINCIDE(CMMC_RF3,CSYMBOL)/2
			W = AREA(CMMC_RF3)/L
			#IFDEF TOP_METAL_ME4_1T0F
				MO=1
			#ENDIF
			#IFDEF TOP_METAL_ME5_1T0F
				MO=2
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T0F
				MO=3
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T0F
				MO=4
			#ENDIF
			#IFDEF TOP_METAL_ME6_2T0F
				MO=5
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T0F
				MO=6
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T0F
				MO=7
			#ENDIF
			#IFDEF TOP_METAL_ME6_1T1F
				MO=8
			#ENDIF
			#IFDEF TOP_METAL_ME7_1T1F
				MO=9
			#ENDIF
			#IFDEF TOP_METAL_ME8_1T1F
				MO=10
			#ENDIF
			#IFDEF TOP_METAL_ME7_2T1F
				MO=11
			#ENDIF
			#IFDEF TOP_METAL_ME8_2T1F
				MO=12
			#ENDIF
			#IFDEF TOP_METAL_ME9_2T1F
				MO=13
			#ENDIF
		]
		TRACE PROPERTY MIMCAPS_20F_RFKF L L 3
		TRACE PROPERTY MIMCAPS_20F_RFKF W W 3
		//TRACE PROPERTY MIMCAPS_20F_RFKF MO MO 3
	#ENDIF
#ENDIF
#IFDEF PEXRUN_MC_HSPICE
	DEVICE C(MIMCAPS_20F_MM) CMMC_RF2 MMCTP_I(POS) MMCBP_I(NEG) <CSYMBOL> 
	[
		PROPERTY W,L,C,MIS_FLAG
		MIS_FLAG = 1
		Ca = 1.9665E-3
		Cp = 0.0337E-9
		L = PERIMETER_COINCIDE(CMMC_RF2,CSYMBOL)/2
		W = AREA(CMMC_RF2)/L
		C = Ca * AREA(CMMC_RF2) +Cp * PERIMETER_INSIDE(CMMC_RF2, MMCBP_I)
	]
	TRACE PROPERTY C(MIMCAPS_20F_MM) C C 3
	//TRACE PROPERTY C(MIMCAPS_20F_MM) L L 3
	//TRACE PROPERTY C(MIMCAPS_20F_MM) W W 3
#ELSE
	DEVICE C(MIMCAPS_20F_MM) CMMC_RF2 MMCTP_I(POS) MMCBP_I(NEG) <CSYMBOL> 
	[
		PROPERTY W,L,C
		Ca = 1.9665E-3
		Cp = 0.0337E-9
		L = PERIMETER_COINCIDE(CMMC_RF2,CSYMBOL)/2
		W = AREA(CMMC_RF2)/L
		C = Ca * AREA(CMMC_RF2) +Cp * PERIMETER_INSIDE(CMMC_RF2, MMCBP_I)
	]
	TRACE PROPERTY C(MIMCAPS_20F_MM) C C 3
	//TRACE PROPERTY C(MIMCAPS_20F_MM) L L 3
	//TRACE PROPERTY C(MIMCAPS_20F_MM) W W 3
#ENDIF
//////////////////////////////////
// RF VARACTOR Capacitor
//////////////////////////////////
// Medium oxide NFET in N-well capacitor //
VARMIS_RF10_SP = NWELL ENCLOSE VARMIS_10_SP
#IFDEF RCFLOW_CCI
	CONNECT ME1_I VARMIS_RF10_SP BY DIF_CONT
	CONNECT ME1_I VARMIS_10_SP BY PO_CONT
	VARMIS_RF10_SP_T1 = PSUB INTERACT VARMIS_RF10_SP
	VARMIS_RF10_SP_T2 = WEL INTERACT VARMIS_RF10_SP
	CONNECT PSD_C VARMIS_RF10_SP_T1 BY PTAP
	CONNECT NSD_I VARMIS_RF10_SP_T2 BY NTAP
	DEVICE VARMIS_10_SPRF VARMIS_RF10_SP PLY_I(PLUS) VARMIS_RF10_SP_T2(MINUS) VARMIS_RF10_SP_T1(PSUB)<VARMIS_10_SP> 
	[
		PROPERTY LF,WF,NF
		NF=COUNT(VARMIS_10_SP)
		WF=PERIMETER_COINCIDE(VARMIS_10_SP,PLY_I)/(2*NF)
		LF=PERIMETER_INSIDE(VARMIS_10_SP,PLY_I)/(2*NF)
	]
	TRACE PROPERTY VARMIS_10_SPRF LF LF 3
	TRACE PROPERTY VARMIS_10_SPRF WF WF 3
	TRACE PROPERTY VARMIS_10_SPRF NF NF 3
#ELSE
	DEVICE VARMIS_10_SPRF VARMIS_RF10_SP PLY_I(PLUS) WEL(MINUS) PSUB(PSUB)<VARMIS_10_SP> 
	[
		PROPERTY LF,WF,NF
		NF=COUNT(VARMIS_10_SP)
		WF=PERIMETER_COINCIDE(VARMIS_10_SP,PLY_I)/(2*NF)
		LF=PERIMETER_INSIDE(VARMIS_10_SP,PLY_I)/(2*NF)
	]
	TRACE PROPERTY VARMIS_10_SPRF LF LF 3
	TRACE PROPERTY VARMIS_10_SPRF WF WF 3
	TRACE PROPERTY VARMIS_10_SPRF NF NF 3
#ENDIF

// Medium oxide NFET in N-well capacitor //
VARMIS_RF12 = NWELL ENCLOSE VARMIS_12
#IFDEF RCFLOW_CCI
	CONNECT ME1_I VARMIS_RF12 BY DIF_CONT
	CONNECT ME1_I VARMIS_12 BY PO_CONT
	VARMIS_RF12_T1 = PSUB INTERACT VARMIS_RF12
	VARMIS_RF12_T2 = WEL INTERACT VARMIS_RF12
	CONNECT PSD_C VARMIS_RF12_T1 BY PTAP
	CONNECT NSD_I VARMIS_RF12_T2 BY NTAP
	DEVICE VARMIS_12_LLRF VARMIS_RF12 PLY_I(PLUS) VARMIS_RF12_T2(MINUS) VARMIS_RF12_T1(PSUB)<VARMIS_12> 
	[
		PROPERTY LF,WF,NF
		NF=COUNT(VARMIS_12)
		WF=PERIMETER_COINCIDE(VARMIS_12,PLY_I)/(2*NF)
		LF=PERIMETER_INSIDE(VARMIS_12,PLY_I)/(2*NF)
	]
	TRACE PROPERTY VARMIS_12_LLRF LF LF 3
	TRACE PROPERTY VARMIS_12_LLRF WF WF 3
	TRACE PROPERTY VARMIS_12_LLRF NF NF 3
#ELSE
	DEVICE VARMIS_12_LLRF VARMIS_RF12 PLY_I(PLUS) WEL(MINUS) PSUB(PSUB)<VARMIS_12> 
	[
		PROPERTY LF,WF,NF
		NF=COUNT(VARMIS_12)
		WF=PERIMETER_COINCIDE(VARMIS_12,PLY_I)/(2*NF)
		LF=PERIMETER_INSIDE(VARMIS_12,PLY_I)/(2*NF)
	]
	TRACE PROPERTY VARMIS_12_LLRF LF LF 3
	TRACE PROPERTY VARMIS_12_LLRF WF WF 3
	TRACE PROPERTY VARMIS_12_LLRF NF NF 3
#ENDIF

#IFDEF 1.8V_IO
// Thick oxide NFET in N-well capacitor //
	VARMIS_RF18 = NWELL ENCLOSE VARMIS_18
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I VARMIS_RF18 BY DIF_CONT
		CONNECT ME1_I VARMIS_18 BY PO_CONT
		VARMIS_RF18_T1 = PSUB INTERACT VARMIS_RF18
		VARMIS_RF18_T2 = WEL INTERACT VARMIS_RF18
		CONNECT PSD_C VARMIS_RF18_T1 BY PTAP
		CONNECT NSD_I VARMIS_RF18_T2 BY NTAP
		DEVICE VARMIS_18_RF VARMIS_RF18 PLY_I(PLUS) VARMIS_RF18_T2(MINUS) VARMIS_RF18_T1(PSUB)<VARMIS_18> 
		[	
			PROPERTY LF,WF,NF
			NF=COUNT(VARMIS_18)
			WF=PERIMETER_COINCIDE(VARMIS_18,PLY_I)/(2*NF)
			LF=PERIMETER_INSIDE(VARMIS_18,PLY_I)/(2*NF)
		]
		TRACE PROPERTY VARMIS_18_RF LF LF 3
		TRACE PROPERTY VARMIS_18_RF WF WF 3
		TRACE PROPERTY VARMIS_18_RF NF NF 3
	#ELSE
		DEVICE VARMIS_18_RF VARMIS_RF18 PLY_I(PLUS) WEL(MINUS) PSUB(PSUB)<VARMIS_18> 
		[	
			PROPERTY LF,WF,NF
			NF=COUNT(VARMIS_18)
			WF=PERIMETER_COINCIDE(VARMIS_18,PLY_I)/(2*NF)
			LF=PERIMETER_INSIDE(VARMIS_18,PLY_I)/(2*NF)
		]
		TRACE PROPERTY VARMIS_18_RF LF LF 3
		TRACE PROPERTY VARMIS_18_RF WF WF 3
		TRACE PROPERTY VARMIS_18_RF NF NF 3
	#ENDIF
#ENDIF

#IFDEF 2.5V_IO
// Thick oxide NFET in N-well capacitor //
	VARMIS_RF25 = NWELL ENCLOSE VARMIS_25
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I VARMIS_RF25 BY DIF_CONT
		CONNECT ME1_I VARMIS_25 BY PO_CONT
		VARMIS_RF25_T1 = PSUB INTERACT VARMIS_RF25
		VARMIS_RF25_T2 = WEL INTERACT VARMIS_RF25
		CONNECT PSD_C VARMIS_RF25_T1 BY PTAP
		CONNECT NSD_I VARMIS_RF25_T2 BY NTAP
		DEVICE VARMIS_25_RF VARMIS_RF25 PLY_I(PLUS) VARMIS_RF25_T2(MINUS) VARMIS_RF25_T1(PSUB)<VARMIS_25> 
		[	
			PROPERTY LF,WF,NF
			NF=COUNT(VARMIS_25)
			WF=PERIMETER_COINCIDE(VARMIS_25,PLY_I)/(2*NF)
			LF=PERIMETER_INSIDE(VARMIS_25,PLY_I)/(2*NF)
		]
		TRACE PROPERTY VARMIS_25_RF LF LF 3
		TRACE PROPERTY VARMIS_25_RF WF WF 3
		TRACE PROPERTY VARMIS_25_RF NF NF 3
	#ELSE
		DEVICE VARMIS_25_RF VARMIS_RF25 PLY_I(PLUS) WEL(MINUS) PSUB(PSUB)<VARMIS_25> 
		[	
			PROPERTY LF,WF,NF
			NF=COUNT(VARMIS_25)
			WF=PERIMETER_COINCIDE(VARMIS_25,PLY_I)/(2*NF)
			LF=PERIMETER_INSIDE(VARMIS_25,PLY_I)/(2*NF)
		]
		TRACE PROPERTY VARMIS_25_RF LF LF 3
		TRACE PROPERTY VARMIS_25_RF WF WF 3
		TRACE PROPERTY VARMIS_25_RF NF NF 3
	#ENDIF
#ENDIF

#IFDEF 2.5V_3.3VOD_IO
// Thick oxide NFET in N-well capacitor //
	VARMIS_RF25 = NWELL ENCLOSE VARMIS_25
	#IFDEF RCFLOW_CCI
		CONNECT ME1_I VARMIS_RF25 BY DIF_CONT
		CONNECT ME1_I VARMIS_25 BY PO_CONT
		VARMIS_RF25_T1 = PSUB INTERACT VARMIS_RF25
		VARMIS_RF25_T2 = WEL INTERACT VARMIS_RF25
		CONNECT PSD_C VARMIS_RF25_T1 BY PTAP
		CONNECT NSD_I VARMIS_RF25_T2 BY NTAP
		DEVICE VARMIS_25_RF VARMIS_RF25 PLY_I(PLUS) VARMIS_RF25_T2(MINUS) VARMIS_RF25_T1(PSUB)<VARMIS_25> 
		[	
			PROPERTY LF,WF,NF
			NF=COUNT(VARMIS_25)
			WF=PERIMETER_COINCIDE(VARMIS_25,PLY_I)/(2*NF)
			LF=PERIMETER_INSIDE(VARMIS_25,PLY_I)/(2*NF)
		]
		TRACE PROPERTY VARMIS_25_RF LF LF 3
		TRACE PROPERTY VARMIS_25_RF WF WF 3
		TRACE PROPERTY VARMIS_25_RF NF NF 3
	#ELSE
		DEVICE VARMIS_25_RF VARMIS_RF25 PLY_I(PLUS) WEL(MINUS) PSUB(PSUB)<VARMIS_25> 
		[	
			PROPERTY LF,WF,NF
			NF=COUNT(VARMIS_25)
			WF=PERIMETER_COINCIDE(VARMIS_25,PLY_I)/(2*NF)
			LF=PERIMETER_INSIDE(VARMIS_25,PLY_I)/(2*NF)
		]
		TRACE PROPERTY VARMIS_25_RF LF LF 3
		TRACE PROPERTY VARMIS_25_RF WF WF 3
		TRACE PROPERTY VARMIS_25_RF NF NF 3
	#ENDIF
#ENDIF

VARDIOPRF = CSYMBOL ENCLOSE PNVAR
#IFDEF RCFLOW_CCI
	CONNECT ME1_I PNVAR BY DIF_CONT
	VARDIOPRF_T1 = PSUB INTERACT VARDIOPRF
	VARDIOPRF_T2 = WEL INTERACT VARDIOPRF
	CONNECT PSD_I VARDIOPRF_T1 BY PTAP
	CONNECT NSD_I_B VARDIOPRF_T2 BY NTAP
	DEVICE VARDIOP_RF VARDIOPRF PNVAR(PLUS) VARDIOPRF_T2(MINUS) VARDIOPRF_T1(PSUB)
		[
			PROPERTY L,WP,NF
			NF=COUNT(PNVAR)
			A=AREA(PNVAR)/NF
			P=PERIMETER(PNVAR)/(2*NF)
			WP=(P-SQRT(ABS(P*P-4*A)))/2
			L=A/WP
		]
		TRACE PROPERTY VARDIOP_RF L L 3
		TRACE PROPERTY VARDIOP_RF WP WP 3
		TRACE PROPERTY VARDIOP_RF NF NF 3
#ELSE
	DEVICE VARDIOP_RF VARDIOPRF PNVAR(PLUS) WEL(MINUS) PSUB(PSUB)
	[
		PROPERTY L,WP,NF
		NF=COUNT(PNVAR)
		A=AREA(PNVAR)/NF
		P=PERIMETER(PNVAR)/(2*NF)
		WP=(P-SQRT(ABS(P*P-4*A)))/2
		L=A/WP
	]
	TRACE PROPERTY VARDIOP_RF L L 3
	TRACE PROPERTY VARDIOP_RF WP WP 3
	TRACE PROPERTY VARDIOP_RF NF NF 3
#ENDIF
//////////////////////////////////
// Ncap Capacitor
//////////////////////////////////
#IFDEF PEXRUN_MC_HSPICE
	DEVICE C(NCAP_10_SP) NCAPGATE_10 PLY_C(POS) WEL(NEG) <NCAPGATE_10_1> NETLIST MODEL "NCAP_10_SP" NETLIST ELEMENT "X"
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_10_1)
	LF = PERIMETER_INSIDE (NCAPGATE_10_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_10_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_10_SPHVT) NCAPGATE_HVT_10 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_10_SPHVT" NETLIST ELEMENT "X"
	[
	PROPERTY W,L
	L = PERIMETER_INSIDE (NCAPGATE_HVT_10, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_10)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_10_SP) LF LF 3
	TRACE PROPERTY C(NCAP_10_SP) WF WF 3
	TRACE PROPERTY C(NCAP_10_SP) NF NF 3
	TRACE PROPERTY C(NCAP_10_SPHVT) L L 3
	TRACE PROPERTY C(NCAP_10_SPHVT) W W 3
#ELSE
	#IFDEF PEXRUN
	DEVICE C(NCAP_10_SP) NCAPGATE_10 PLY_C(POS) WEL(NEG) <NCAPGATE_10_1> NETLIST MODEL "NCAP_10_SP" NETLIST ELEMENT "X"
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_10_1)
	LF = PERIMETER_INSIDE (NCAPGATE_10_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_10_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_10_SPHVT) NCAPGATE_HVT_10 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_10_SPHVT" NETLIST ELEMENT "X"
	[
	PROPERTY W,L
	L = PERIMETER_INSIDE (NCAPGATE_HVT_10, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_10)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_10_SP) LF LF 3
	TRACE PROPERTY C(NCAP_10_SP) WF WF 3
	TRACE PROPERTY C(NCAP_10_SP) NF NF 3
	TRACE PROPERTY C(NCAP_10_SPHVT) L L 3
	TRACE PROPERTY C(NCAP_10_SPHVT) W W 3
	#ELSE
	#IFDEF RCFLOW_CCI
	NCAPGATE_10_T2 = WEL INTERACT NCAPGATE_10
	CONNECT NSD_C NCAPGATE_10_T2 BY NTAP
	NCAPGATE_HVT_10_T2 = WEL INTERACT NCAPGATE_HVT_10
	CONNECT NSD_C NCAPGATE_HVT_10_T2 BY NTAP
	DEVICE C(NCAP_10_SP) NCAPGATE_10 NCAPGATE_10_1(POS) NCAPGATE_10_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_10_SP" NETLIST ELEMENT "X"
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_10_1)
	LF = PERIMETER_COINCIDE (NCAPGATE_10_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_10_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_10_SPHVT) NCAPGATE_HVT_10 NCAPGATE_HVT_10(POS) NCAPGATE_HVT_10_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_10_SPHVT" NETLIST ELEMENT "X"
	[
	PROPERTY W,L
	L = PERIMETER_COINCIDE (NCAPGATE_HVT_10, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_10)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_10_SP) LF LF 3
	TRACE PROPERTY C(NCAP_10_SP) WF WF 3
	TRACE PROPERTY C(NCAP_10_SP) NF NF 3
	TRACE PROPERTY C(NCAP_10_SPHVT) L L 3
	TRACE PROPERTY C(NCAP_10_SPHVT) W W 3
	#ELSE
	DEVICE C(NCAP_10_SP) NCAPGATE_10 PLY_C(POS) WEL(NEG) <NCAPGATE_10_1>
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_10_1)
	LF = PERIMETER_INSIDE (NCAPGATE_10_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_10_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_10_SPHVT) NCAPGATE_HVT_10 PLY_C(POS) WEL(NEG)
	[
	PROPERTY W,L
	L = PERIMETER_INSIDE (NCAPGATE_HVT_10, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_10)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_10_SP) NF NF 3
	TRACE PROPERTY C(NCAP_10_SP) LF LF 3
	TRACE PROPERTY C(NCAP_10_SP) WF WF 3
	TRACE PROPERTY C(NCAP_10_SPHVT) L L 3
	TRACE PROPERTY C(NCAP_10_SPHVT) W W 3
	#ENDIF
	#ENDIF
#ENDIF
// Medium oxide NFET in N-well capacitor //
#IFDEF PEXRUN_MC_HSPICE
	DEVICE C(NCAP_12_LL) NCAPGATE_12 PLY_C(POS) WEL(NEG) <NCAPGATE_12_1> NETLIST MODEL "NCAP_12_LL" NETLIST ELEMENT "X"
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_12_1)
	LF = PERIMETER_INSIDE (NCAPGATE_12_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_12_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_12_LLHVT) NCAPGATE_HVT_12 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_12_LLHVT" NETLIST ELEMENT "X"
	[
	PROPERTY W,L
	L = PERIMETER_INSIDE (NCAPGATE_HVT_12, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_12)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_12_LL) NF NF 3
	TRACE PROPERTY C(NCAP_12_LL) LF LF 3
	TRACE PROPERTY C(NCAP_12_LL) WF WF 3
	TRACE PROPERTY C(NCAP_12_LLHVT) L L 3
	TRACE PROPERTY C(NCAP_12_LLHVT) W W 3
#ELSE
	#IFDEF PEXRUN
	DEVICE C(NCAP_12_LL) NCAPGATE_12 PLY_C(POS) WEL(NEG) <NCAPGATE_12_1> NETLIST MODEL "NCAP_12_LL" NETLIST ELEMENT "X"
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_12_1)
	LF = PERIMETER_INSIDE (NCAPGATE_12_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_12_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_12_LLHVT) NCAPGATE_HVT_12 PLY_C(POS) WEL(NEG) NETLIST MODEL "NCAP_12_LLHVT" NETLIST ELEMENT "X"
	[
	PROPERTY W,L
	L = PERIMETER_INSIDE (NCAPGATE_HVT_12, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_12)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_12_LL) NF NF 3
	TRACE PROPERTY C(NCAP_12_LL) LF LF 3
	TRACE PROPERTY C(NCAP_12_LL) WF WF 3
	TRACE PROPERTY C(NCAP_12_LLHVT) L L 3
	TRACE PROPERTY C(NCAP_12_LLHVT) W W 3
	#ELSE
	#IFDEF RCFLOW_CCI
	NCAPGATE_HVT_12_T2 = WEL INTERACT NCAPGATE_HVT_12
	CONNECT NSD_C NCAPGATE_HVT_12_T2 BY NTAP
	NCAPGATE_12_T2 = WEL INTERACT NCAPGATE_12
	CONNECT NSD_C NCAPGATE_12_T2 BY NTAP
	DEVICE C(NCAP_12_LL) NCAPGATE_12 NCAPGATE_12_1(POS) NCAPGATE_12_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_12_LL" NETLIST ELEMENT "X"
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_12_1)
	LF = PERIMETER_COINCIDE (NCAPGATE_12_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_12_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_12_LLHVT) NCAPGATE_HVT_12 NCAPGATE_HVT_12(POS) NCAPGATE_HVT_12_T2(NEG) <PLY_C> NETLIST MODEL "NCAP_12_LLHVT" NETLIST ELEMENT "X"
	[
	PROPERTY W,L
	L = PERIMETER_COINCIDE (NCAPGATE_HVT_12, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_12)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_12_LL) NF NF 3
	TRACE PROPERTY C(NCAP_12_LL) LF LF 3
	TRACE PROPERTY C(NCAP_12_LL) WF WF 3
	TRACE PROPERTY C(NCAP_12_LLHVT) L L 3
	TRACE PROPERTY C(NCAP_12_LLHVT) W W 3
	#ELSE
	DEVICE C(NCAP_12_LL) NCAPGATE_12 PLY_C(POS) WEL(NEG) <NCAPGATE_12_1>
	[
	PROPERTY WF,LF,NF
	NF = COUNT(NCAPGATE_12_1)
	LF = PERIMETER_INSIDE (NCAPGATE_12_1, PLY_C) / (NF*2)
	Ammc = area (NCAPGATE_12_1)
	WF = Ammc / LF / NF
	]
	DEVICE C(NCAP_12_LLHVT) NCAPGATE_HVT_12 PLY_C(POS) WEL(NEG)
	[
	PROPERTY W,L
	L = PERIMETER_INSIDE (NCAPGATE_HVT_12, PLY_C) / 2
	Ammc = area (NCAPGATE_HVT_12)
	W = Ammc / L
	]
	TRACE PROPERTY C(NCAP_12_LL) NF NF 3
	TRACE PROPERTY C(NCAP_12_LL) LF LF 3
	TRACE PROPERTY C(NCAP_12_LL) WF WF 3
	TRACE PROPERTY C(NCAP_12_LLHVT) L L 3
	TRACE PROPERTY C(NCAP_12_LLHVT) W W 3
	#ENDIF
	#ENDIF
#ENDIF


// ------ Metal Resistor Devices------

// Mixed Mode 2 Terminals Metal 1 resistor 
DEVICE R(RM1) ME1RES ME1_C(POS) ME1_C(NEG)
[
PROPERTY W,L,R
RS_M1 = 0.115
W = PERIMETER_COINCIDE(ME1RES, ME1_C) / 2
L = AREA(ME1RES) / W
R = (L/W) * RS_M1
]
TRACE PROPERTY R(RM1) R R 3

// Mixed Mode 2 Terminals Metal 2 resistor 
DEVICE R(RM2) ME2RES ME2_C(POS) ME2_C(NEG)
[
PROPERTY W,L,R
RS_M2 = 0.105
W = PERIMETER_COINCIDE(ME2RES, ME2_C) / 2
L = AREA(ME2RES) / W
R = (L/W) * RS_M2
]
TRACE PROPERTY R(RM2) R R 3

// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM3) ME3RES ME3_C(POS) ME3_C(NEG)
[
PROPERTY W,L,R
RS_M3 = 0.105
W = PERIMETER_COINCIDE(ME3RES, ME3_C) / 2
L = AREA(ME3RES) / W
R = (L/W) * RS_M3
]
TRACE PROPERTY R(RM3) R R 3


#IFDEF TOP_METAL_ME4_1T0F
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.044
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.044
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.044
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.044
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.044
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3
#ENDIF


#IFDEF TOP_METAL_ME6_1T1F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.044
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.027
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.105
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.044
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.044
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.044
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.044
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.027
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3
#ENDIF


#IFDEF TOP_METAL_ME7_2T1F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.044
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.044
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.027
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3
#ENDIF


#IFDEF TOP_METAL_ME8_2T0F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.105
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.044
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3

// Mixed Mode 2 Terminals Metal 8 resistor 
DEVICE R(RM8) ME8RES ME8_C(POS) ME8_C(NEG)
[
PROPERTY W,L,R
RS_M8 = 0.044
W = PERIMETER_COINCIDE(ME8RES, ME8_C) / 2
L = AREA(ME8RES) / W
R = (L/W) * RS_M8
]
TRACE PROPERTY R(RM8) R R 3
#ENDIF


#IFDEF TOP_METAL_ME8_1T1F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.105
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.044
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3

// Mixed Mode 2 Terminals Metal 8 resistor 
DEVICE R(RM8) ME8RES ME8_C(POS) ME8_C(NEG)
[
PROPERTY W,L,R
RS_M8 = 0.027
W = PERIMETER_COINCIDE(ME8RES, ME8_C) / 2
L = AREA(ME8RES) / W
R = (L/W) * RS_M8
]
TRACE PROPERTY R(RM8) R R 3
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.044
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.044
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3

// Mixed Mode 2 Terminals Metal 8 resistor 
DEVICE R(RM8) ME8RES ME8_C(POS) ME8_C(NEG)
[
PROPERTY W,L,R
RS_M8 = 0.027
W = PERIMETER_COINCIDE(ME8RES, ME8_C) / 2
L = AREA(ME8RES) / W
R = (L/W) * RS_M8
]
TRACE PROPERTY R(RM8) R R 3
#ENDIF


#IFDEF TOP_METAL_ME9_2T1F
// Mixed Mode 2 Terminals Metal 3 resistor 
DEVICE R(RM4) ME4RES ME4_C(POS) ME4_C(NEG)
[
PROPERTY W,L,R
RS_M4 = 0.105
W = PERIMETER_COINCIDE(ME4RES, ME4_C) / 2
L = AREA(ME4RES) / W
R = (L/W) * RS_M4
]
TRACE PROPERTY R(RM4) R R 3

// Mixed Mode 2 Terminals Metal 5 resistor 
DEVICE R(RM5) ME5RES ME5_C(POS) ME5_C(NEG)
[
PROPERTY W,L,R
RS_M5 = 0.105
W = PERIMETER_COINCIDE(ME5RES, ME5_C) / 2
L = AREA(ME5RES) / W
R = (L/W) * RS_M5
]
TRACE PROPERTY R(RM5) R R 3

DEVICE R(RM6) ME6RES ME6_C(POS) ME6_C(NEG)
[
PROPERTY W,L,R
RS_M6 = 0.105
W = PERIMETER_COINCIDE(ME6RES, ME6_C) / 2
L = AREA(ME6RES) / W
R = (L/W) * RS_M6
]
TRACE PROPERTY R(RM6) R R 3

// Mixed Mode 2 Terminals Metal 7 resistor 
DEVICE R(RM7) ME7RES ME7_C(POS) ME7_C(NEG)
[
PROPERTY W,L,R
RS_M7 = 0.044
W = PERIMETER_COINCIDE(ME7RES, ME7_C) / 2
L = AREA(ME7RES) / W
R = (L/W) * RS_M7
]
TRACE PROPERTY R(RM7) R R 3

// Mixed Mode 2 Terminals Metal 8 resistor 
DEVICE R(RM8) ME8RES ME8_C(POS) ME8_C(NEG)
[
PROPERTY W,L,R
RS_M8 = 0.044
W = PERIMETER_COINCIDE(ME8RES, ME8_C) / 2
L = AREA(ME8RES) / W
R = (L/W) * RS_M8
]
TRACE PROPERTY R(RM8) R R 3

// Mixed Mode 2 Terminals Metal 9 resistor 
DEVICE R(RM9) ME9RES ME9_C(POS) ME9_C(NEG)
[
PROPERTY W,L,R
RS_M9 = 0.027
W = PERIMETER_COINCIDE(ME9RES, ME9_C) / 2
L = AREA(ME9RES) / W
R = (L/W) * RS_M9
]
TRACE PROPERTY R(RM9) R R 3
#ENDIF

// Mixed Mode 2 Terminals ALRDL resistor 
DEVICE R(RAL) ALRES AL_RDL_C(POS) AL_RDL_C(NEG)
[
PROPERTY W,L,R
RS_AL = 0.027
W = PERIMETER_COINCIDE(ALRES, AL_RDL_C) / 2
L = AREA(ALRES) / W
R = (L/W) * RS_AL
]
TRACE PROPERTY R(RAL) R R 3

//////////////////
// RF PAD Device
//////////////////
#IFDEF TOP_METAL_ME4_1T0F
#ELSE
#IFDEF TOP_METAL_ME5_1T0F
#ELSE
p_rf_pad = SIZE rf_pad BY 0.05
TMV_RDL1 = (SIZE (TMV_RDL INTERACT rf_pad)BY 5) AND (AL_RDL INTERACT rf_pad)
#IFDEF RCFLOW_CCI
	p_rf_pad_T1 = PSUB INTERACT p_rf_pad
	CONNECT PSD_I p_rf_pad_T1 BY PTAP
	DEVICE PAD_BOAC_RF p_rf_pad AL_RDL_I(PLUS) p_rf_pad_T1(PSUB) <rf_pad> <TMV_RDL1>
	<type1_pad> <type2_pad> <type3_pad> <type4_pad> <type5_pad> <type6_pad> <type7_pad> <type8_pad> <type9_pad>
	[ PROPERTY INDEX_LAYER,INDEX_THICK,INDEX_PAD
	A9=COUNT(type9_pad)-1
	A8=COUNT(type8_pad)-1
	A7=COUNT(type7_pad)-1
	A6=COUNT(type6_pad)-1
	A5=COUNT(type5_pad)-1
	A4=COUNT(type4_pad)-1
	A3=COUNT(type3_pad)-1
	A2=COUNT(type2_pad)-1
	A1=COUNT(type1_pad)-1
	INDEX_LAYER=0
	INDEX_THICK=0
	INDEX_PAD=0
	A = TRUNC(AREA(rf_pad)*10E8)
	W = PERIMETER_INSIDE(TMV_RDL1,rf_pad)
	L = AREA(rf_pad)/W
	#IFDEF TOP_METAL_THICKNESS_30K
	#IFDEF TOP_METAL_ME9_2T1F
	IF(A9==1){
	INDEX_LAYER=9
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_2T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_1T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_2T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_1T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_1T1F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =2
	}
	#ENDIF
	#ENDIF
	#IFDEF TOP_METAL_THICKNESS_8K
	#IFDEF TOP_METAL_ME9_2T1F
	IF(A9==1){
	INDEX_LAYER=9
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_2T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_1T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_2T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_1T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_1T1F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_2T0F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_2T0F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_1T0F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_2T0F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_1T0F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =1
	}
	#ENDIF
	#ENDIF
	IF(A==3){
	INDEX_PAD = 1 // 50um in-line pad
	}
	IF(A==4){
	INDEX_PAD = 2 // 35um staggered pad
	}
	IF(A==10){
	INDEX_PAD = 3 // 150um in-line pad
	}
	]
	TRACE PROPERTY PAD_BOAC_RF INDEX_LAYER INDEX_LAYER 0
	TRACE PROPERTY PAD_BOAC_RF INDEX_THICK INDEX_THICK 0
	TRACE PROPERTY PAD_BOAC_RF INDEX_PAD INDEX_PAD 0
#ELSE
	DEVICE PAD_BOAC_RF p_rf_pad AL_RDL_I(PLUS) PSUB(PSUB) <rf_pad> <TMV_RDL1>
	<type1_pad> <type2_pad> <type3_pad> <type4_pad> <type5_pad> <type6_pad> <type7_pad> <type8_pad> <type9_pad>
	[ PROPERTY INDEX_LAYER,INDEX_THICK,INDEX_PAD
	A9=COUNT(type9_pad)-1
	A8=COUNT(type8_pad)-1
	A7=COUNT(type7_pad)-1
	A6=COUNT(type6_pad)-1
	A5=COUNT(type5_pad)-1
	A4=COUNT(type4_pad)-1
	A3=COUNT(type3_pad)-1
	A2=COUNT(type2_pad)-1
	A1=COUNT(type1_pad)-1
	INDEX_LAYER=0
	INDEX_THICK=0
	INDEX_PAD=0
	A = TRUNC(AREA(rf_pad)*10E8)
	W = PERIMETER_INSIDE(TMV_RDL1,rf_pad)
	L = AREA(rf_pad)/W
	#IFDEF TOP_METAL_THICKNESS_30K
	#IFDEF TOP_METAL_ME9_2T1F
	IF(A9==1){
	INDEX_LAYER=9
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_2T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_1T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_2T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_1T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =2
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_1T1F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =2
	}
	#ENDIF
	#ENDIF
	#IFDEF TOP_METAL_THICKNESS_8K
	#IFDEF TOP_METAL_ME9_2T1F
	IF(A9==1){
	INDEX_LAYER=9
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_2T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_1T1F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_2T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_1T1F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_1T1F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME8_2T0F
	IF(A8==1){
	INDEX_LAYER=8
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_2T0F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME7_1T0F
	IF(A7==1){
	INDEX_LAYER=7
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_2T0F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =1
	}
	#ENDIF
	#IFDEF TOP_METAL_ME6_1T0F
	IF(A6==1){
	INDEX_LAYER=6
	INDEX_THICK =1
	}
	#ENDIF
	#ENDIF
	IF(A==3){
	INDEX_PAD = 1 // 50um in-line pad
	}
	IF(A==4){
	INDEX_PAD = 2 // 35um staggered pad
	}
	IF(A==10){
	INDEX_PAD = 3 // 150um in-line pad
	}
	]
	TRACE PROPERTY PAD_BOAC_RF INDEX_LAYER INDEX_LAYER 0
	TRACE PROPERTY PAD_BOAC_RF INDEX_THICK INDEX_THICK 0
	TRACE PROPERTY PAD_BOAC_RF INDEX_PAD INDEX_PAD 0
#ENDIF
#ENDIF
#ENDIF

///////////////////////////////
// Diode
///////////////////////////////
#IFDEF RCFLOW_CCI
	DNDIOD_T1 = PSUB INTERACT DNDIOD
	CONNECT PSD_C DNDIOD_T1 BY PTAP
	DEVICE D(DION) DNDIOD DNDIOD_T1(POS) NSD_C(NEG) 
	TRACE PROPERTY D(DION) A A 3
	TRACE PROPERTY D(DION) P P 3

	DPDIOD_T2 = WEL INTERACT DPDIOD
	CONNECT NSD_C DPDIOD_T2 BY NTAP
	DEVICE D(DIOP) DPDIOD PSD_C(POS) DPDIOD_T2(NEG) 
	TRACE PROPERTY D(DIOP) A A 3
	TRACE PROPERTY D(DIOP) P P 3

	DNWDIOD_T1 = PSUB INTERACT DNWDIOD
	DNWDIOD_T2 = WEL INTERACT DNWDIOD
	CONNECT PSD_C DNWDIOD_T1 BY PTAP
	CONNECT NSD_C DNWDIOD_T2 BY NTAP
	DEVICE D(DIONW) DNWDIOD DNWDIOD_T1(POS) DNWDIOD_T2(NEG) 
	TRACE PROPERTY D(DIONW) A A 3
	TRACE PROPERTY D(DIONW) P P 3


	DNDIODD_T3 = TWELL INTERACT DNDIODD
	CONNECT PSD_C DNDIODD_T3 BY TTAP
	DEVICE D(DIODN) DNDIODD DNDIODD_T3(POS) NSD_C(NEG)
	TRACE PROPERTY D(DIODN) A A 3
	TRACE PROPERTY D(DIODN) P P 3

	DPDIODD_T2 = WEL INTERACT DPDIODD
	CONNECT NSD_C DPDIODD_T2 BY NTAP
	DEVICE D(DIODP) DPDIODD PSD_C(POS) DPDIODD_T2(NEG)
	TRACE PROPERTY D(DIODP) A A 3
	TRACE PROPERTY D(DIODP) P P 3

	DNWDIODD_T1 = PSUB INTERACT DNWDIODD
	DNWDIODD_T2 = WEL INTERACT DNWDIODD
	CONNECT PSD_C DNWDIODD_T1 BY PTAP
	CONNECT NSD_C DNWDIODD_T2 BY NTAP
	DEVICE D(DIODNW) DNWDIODD DNWDIODD_T1(POS) DNWDIODD_T2(NEG)
	TRACE PROPERTY D(DIODNW) A A 3
	TRACE PROPERTY D(DIODNW) P P 3
#ELSE
	DEVICE D(DION) DNDIOD PSUB(POS) NSD_C(NEG) 
	TRACE PROPERTY D(DION) A A 3
	TRACE PROPERTY D(DION) P P 3

	DEVICE D(DIOP) DPDIOD PSD_C(POS) WEL(NEG) 
	TRACE PROPERTY D(DIOP) A A 3
	TRACE PROPERTY D(DIOP) P P 3

	DEVICE D(DIONW) DNWDIOD PSUB(POS) WEL(NEG) 
	TRACE PROPERTY D(DIONW) A A 3
	TRACE PROPERTY D(DIONW) P P 3

	DEVICE D(DIODN) DNDIODD TWELL(POS) NSD_C(NEG)
	TRACE PROPERTY D(DIODN) A A 3
	TRACE PROPERTY D(DIODN) P P 3

	DEVICE D(DIODP) DPDIODD PSD_C(POS) WEL(NEG)
	TRACE PROPERTY D(DIODP) A A 3
	TRACE PROPERTY D(DIODP) P P 3

	DEVICE D(DIODNW) DNWDIODD PSUB(POS) WEL(NEG)
	TRACE PROPERTY D(DIODNW) A A 3
	TRACE PROPERTY D(DIODNW) P P 3
#ENDIF
///////////////////////////////
// Bipolar Transistor
///////////////////////////////
#IFDEF RCFLOW_CCI
	PNPBJT32_T1 = PSUB INTERACT PNPBJT32
	PNPBJT32_T2 = WEL INTERACT PNPBJT32
	CONNECT PSD_C PNPBJT32_T1 BY PTAP
	CONNECT NSD_C PNPBJT32_T2 BY NTAP
	DEVICE Q(PNP_V32X32) PNPBJT32 PNPBJT32_T1(C) PNPBJT32_T2(B) PNP_E_32(E)
	NPNBJT32_T3 = TWELL INTERACT NPNBJT32
	NPNBJT32_T2 = WEL INTERACT NPNBJT32
	CONNECT PSD_C NPNBJT32_T3 BY TTAP
	CONNECT NSD_C NPNBJT32_T2 BY NTAP
	DEVICE Q(NPN_V32X32) NPNBJT32 NPNBJT32_T2(C) NPNBJT32_T3(B) NPN_E_32(E)
#ELSE
	#IFDEF PEXRUN
	DEVICE Q(PNP_V32X32) PNPBJT32 PSUB(C) WEL(B) PNP_E_32(E)
	DEVICE Q(NPN_V32X32) NPNBJT32 WEL(C) TWELL(B) NPN_E_32(E)
	#ELSE
	DEVICE Q(PNP_V32X32) PNPBJT32 PSUB(C) WEL(B) PNP_E_32(E)
	[
	PROPERTY A
	A = AREA(PNP_E_32)
	]
	TRACE PROPERTY Q(PNP_V32X32) A A 3
	DEVICE Q(NPN_V32X32) NPNBJT32 WEL(C) TWELL(B) NPN_E_32(E)
	[
	PROPERTY A
	A = AREA(NPN_E_32)
	]
	TRACE PROPERTY Q(NPN_V32X32) A A 3
	#ENDIF
#ENDIF
///////////////////////////////
// MOM Capacitor
///////////////////////////////

MOM1_term = (ME1 AND RFSYMBOL) INTERACT MOMSYM
MOM1_term1 = SIZE (SIZE MOM1_term BY -0.5) BY 0.5
MOM2_term = (ME2 AND RFSYMBOL) INTERACT MOMSYM
MOM2_term1 = SIZE (SIZE MOM2_term BY -0.5) BY 0.5

//------------------------------//
// Symetric MOM caps device body//
//------------------------------//

MOMVP1_MM = (((SIZE RFSYMBOL BY 0.05) INTERACT (SIZE2 INTERACT MOMSYM )) NOT INTERACT SIZE3) NOT INTERACT NWEL // in PSUB
MOMVP1_MM_W = (((SIZE RFSYMBOL BY 0.05)INTERACT (SIZE2 INTERACT MOMSYM )) NOT INTERACT SIZE3) INTERACT NWEL // in WEL

//-------------------------------//
// Asymetric MOM caps device body//
//-------------------------------//

MOMVP2_MM = (((SIZE RFSYMBOL BY 0.05)INTERACT (SIZE3 INTERACT MOMSYM)) NOT INTERACT SIZE2) NOT INTERACT NWEL // in PSUB
MOMVP2_MM_W = (((SIZE RFSYMBOL BY 0.05)INTERACT (SIZE3 INTERACT MOMSYM )) NOT INTERACT SIZE2) INTERACT NWEL // in WEL

FNS = (ME2 AND RFSYMBOL) AND MOMSYM

EXTLENGTH_1 = (EXT FNS == 0.14 opposite region) AND MOMSYM
EXTLENGTH_2 = EXTENTS (FNS OR EXTLENGTH_1)
EXTLENGTH = SIZE(SIZE EXTLENGTH_2 BY -0.56) BY 0.56

momlayer3 = ((ME3 AND RFSYMBOL) INTERACT MOMSYM) INTERACT (ME1 AND ME2)
momlayer4 = ((ME4 AND RFSYMBOL) INTERACT MOMSYM) INTERACT ((ME1 AND ME2) AND ME3)
momlayer5 = ((ME5 AND RFSYMBOL) INTERACT MOMSYM) INTERACT (((ME1 AND ME2) AND ME3) AND ME4)
momlayer6 = ((ME6 AND RFSYMBOL) INTERACT MOMSYM) INTERACT ((((ME1 AND ME2) AND ME3) AND ME4) AND ME5)

MOMCOUNT = (SIZE RFSYMBOL BY 0.05) NOT (SIZE RFSYMBOL BY 0.04)
momlay3 = momlayer3 OR MOMCOUNT
momlay4 = momlayer4 OR MOMCOUNT
momlay5 = momlayer5 OR MOMCOUNT
momlay6 = momlayer6 OR MOMCOUNT

MOMVP1_MM_W_T2 = WEL INTERACT MOMVP1_MM_W
MOMVP2_MM_W_T2 = WEL INTERACT MOMVP2_MM_W
MOMVP1_MM_T1 = PSUB INTERACT MOMVP1_MM
MOMVP2_MM_T1 = PSUB INTERACT MOMVP2_MM
CONNECT PSD_C MOMVP1_MM_T1 BY PTAP
CONNECT PSD_C MOMVP2_MM_T1 BY PTAP
CONNECT NSD_C MOMVP1_MM_W_T2 BY NTAP
CONNECT NSD_C MOMVP2_MM_W_T2 BY NTAP
#IFDEF RCFLOW_CCI
#IFDEF TOP_METAL_ME9_2T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP2_MM_T1(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME4_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_W_T2(B)
<FNS> <EXTLENGTH> <momlay3>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)-7)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) MOMVP1_MM_T1(B)
<FNS> <EXTLENGTH> <momlay3>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)-7)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

#ENDIF
#ELSE
#IFDEF TOP_METAL_ME9_2T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-10)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5> <momlay6>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)+COUNT(momlay6)-5)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)+COUNT(momlay5)-9)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4> <momlay5>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)+COUNT(momlay5)-4)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF

#IFDEF TOP_METAL_ME4_1T0F
DEVICE MOMCAPS_SY_MMKF MOMVP1_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM_W ME2_I(PLUS) ME2_I(MINUS) WEL(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]

DEVICE MOMCAPS_SY_MMKF MOMVP1_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay3> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 3+(COUNT(momlay3)+COUNT(momlay4)-8)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb = 601.38E-18
	cv_tb = 17.39E-18
	ratio = 1.3967
	coxo=10.50E-18
	coxv=100E-18
	ratio_ox=3.69
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	IF(NM==3){
	m3=1
	}ELSE{
	m3=0
	}
	factor=1*m6+0.839*m5+0.672*m4+0.506*m3
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_c11=L/(1E-6)*((NF-2)*coxo + 2*ratio_ox*coxo) + 2*(NF-1) * (W+S)/(1E-6)*WB/(1E-6)*coxv
	C=p_c12
]
TRACE PROPERTY MOMCAPS_SY_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_SY_MMKF L L 3
TRACE PROPERTY MOMCAPS_SY_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_SY_MMKF C C 3

DEVICE MOMCAPS_AS_MMKF MOMVP2_MM ME2_I(PLUS) ME2_I(MINUS) PSUB(B)
<FNS> <EXTLENGTH> <momlay4>
[ PROPERTY NF,L,NM,W,S,C
NF = COUNT(FNS)
L = AREA(EXTLENGTH)/(2*(NF-0.5)*0.14E-6)
NM = 4+(COUNT(momlay4)-3)/2
	WB=0.14E-6
	W=0.14E-6
	S=0.14E-6
	cho_tb=506.65E-18
	cv_tb=160.53E-18
	ratio=1.334
	cox_a=60.66E-18
	cox_pj=72.05E-18
	IF(NM==6){
	m6=1
	}ELSE{
	m6=0
	}
	IF(NM==5){
	m5=1
	}ELSE{
	m5=0
	}
	IF(NM==4){
	m4=1
	}ELSE{
	m4=0
	}
	factor=1*m6+0.79*m5+0.58*m4
	c_tb=L/(1E-6)*((NF-3)*cho_tb + 2*ratio*cho_tb) + (NF-2) *cv_tb
	p_c12=c_tb*factor
	p_x=(L+3*(W+S))/(1E-6)
	p_y=(NF*(W+S)-S)/(1E-6)
	p_cox=cox_a*p_x*p_y+cox_pj*2*(p_x+p_y)
	C=p_c12
]
TRACE PROPERTY MOMCAPS_AS_MMKF NF NF 0
TRACE PROPERTY MOMCAPS_AS_MMKF L L 3
TRACE PROPERTY MOMCAPS_AS_MMKF NM NM 0
TRACE PROPERTY MOMCAPS_AS_MMKF C C 3
#ENDIF
#ENDIF
///////////////////////////////
// Inductor
///////////////////////////////
DMACRO INDCHK1 LDIMETERN MENLT1 MENL MENLU N_IND_CR_N MENLT_1{
<LDIMETERN> <MENLT1> <MENL> <MENLU> <MENLT_1>
[PROPERTY od,NT,W,S
P1=PERIMETER(LDIMETERN)/2
A=AREA(LDIMETERN)
NT=COUNT(MENLT_1)-0.5
W=PERIMETER_INSIDE(MENLT_1,MENL)/(2*COUNT(MENLT_1))
S=PERIMETER_OUTSIDE(MENLU,MENL)/(2*(COUNT(MENLU)))
od=(P1+SQRT(ABS(P1*P1-4*A)))/2 /* P1=L1+W1 , A = L1*W1 ,L1 AND W1 are for LDIMETER */
P=W+S
DW=0
Da=od-NT*P-(W-DW)+P/2
Fr=(NT*P+(W-DW)-P/2)/Da
C1=1.071
C2=2.438
C3=2.657E-1
Et=1.927
]
}
TRACE PROPERTY L_CR30K_RFVIL S S 3
TRACE PROPERTY L_CR30K_RFVIL W W 3
TRACE PROPERTY L_CR30K_RFVIL od od 3
TRACE PROPERTY L_CR30K_RFVIL NT NT 0

DMACRO INDCHK3 LDIMETERN MENLT MENL MENLUKCT MENLT2 MENLS MENLUKCT1{
<LDIMETERN> <MENLT> <MENL> <MENLUKCT> <MENLT2> <MENLS> <MENLUKCT1>
[PROPERTY od,NT,W,S
P1=PERIMETER(LDIMETERN)/2
A=AREA(LDIMETERN)
NT=COUNT(MENLT2)
IF(NT==1){
W=PERIMETER_INSIDE(MENLT2,MENLS)
WS=PERIMETER_INSIDE(MENLS,MENLT2)/2
TS=AREA(MENLT2)/WS
S=(TS-3*W)/2
}ELSE{
NT=(COUNT(MENLUKCT)/2)+1
WS=PERIMETER_INSIDE(MENLT2,MENL)/COUNT(MENLT2)
W=(PERIMETER_COINCIDE(MENLUKCT,MENL)-WS*COUNT(MENLUKCT))/(COUNT(MENLUKCT)*2)
S=(((PERIMETER_OUTSIDE(MENLUKCT1,MENLUKCT))/(2*COUNT(MENLUKCT1)))-W)/2
}
od=(P1+SQRT(ABS(P1*P1-4*A)))/2 /* P1=L1+W1 , A = L1*W1 ,L1 AND W1 are for LDIMETER */
P=W+S
DW=0
Da=od-NT*P-(W-DW)+P/2
Fr=(NT*P+(W-DW)-P/2)/Da
C1=1.071
C2=2.438
C3=2.657E-1
Et=1.927
]
}
TRACE PROPERTY L_SY30KCT_RFVIL NT NT 0
TRACE PROPERTY L_SY30KCT_RFVIL S S 3
TRACE PROPERTY L_SY30KCT_RFVIL W W 3
TRACE PROPERTY L_SY30KCT_RFVIL od od 3

DMACRO INDCHK5 LDIMETERN MENLT MENL MENLUKCT MENLT2 MENLUKCT1{
<LDIMETERN> <MENLT> <MENL> <MENLUKCT> <MENLT2> <MENLUKCT1>
[PROPERTY od,NT,W,S
P1=PERIMETER(LDIMETERN)/2
A=AREA(LDIMETERN)
NT=COUNT(MENLT2)
IF(NT==1){
W1=PERIMETER_INSIDE(MENLT2,MENL)/2
W=TRUNC(PERIMETER_INSIDE(MENLT2,MENL)/2*1E7)/1E7
TS=AREA(MENLT2)/W1
S=(TS-3*W)/2
}ELSE{
NT=(COUNT(MENLUKCT)/2)+1
WS=PERIMETER_INSIDE(MENLT2,MENL)/COUNT(MENLT2)
W=(PERIMETER_COINCIDE(MENLUKCT,MENL)-WS*COUNT(MENLUKCT))/(COUNT(MENLUKCT)*2)
S=(((PERIMETER_OUTSIDE(MENLUKCT1,MENLUKCT))/(2*COUNT(MENLUKCT1)))-W)/2
TS=AREA(MENLUKCT)/W
}
od=(P1+SQRT(ABS(P1*P1-4*A)))/2 /* P1=L1+W1 , A = L1*W1 ,L1 AND W1 are for LDIMETER */
P=W+S
DW=0
Da=od-NT*P-(W-DW)+P/2
Fr=(NT*P+(W-DW)-P/2)/Da
C1=1.071
C2=2.438
C3=2.657E-1
Et=1.927
]
}
TRACE PROPERTY L_SY30K_RFVIL NT NT 0
TRACE PROPERTY L_SY30K_RFVIL S S 3
TRACE PROPERTY L_SY30K_RFVIL W W 3
TRACE PROPERTY L_SY30K_RFVIL od od 3

#IFDEF RCFLOW_CCI
#IFDEF TOP_METAL_ME9_2T1F
N_IND_CR_9_P_T1 = PSUB INTERACT N_IND_CR_9_P
N_IND_SYC_9_P_T1 = PSUB INTERACT N_IND_SYC_9_P
N_IND_SY_9_P_T1 = PSUB INTERACT N_IND_SY_9_P
CONNECT PSD_C N_IND_CR_9_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_9_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_9_P_T1 BY PTAP
DEVICE L_CR30K_RFVIL N_IND_CR_9_P ME9_C(PLUS) ME8_C(MINUS) N_IND_CR_9_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER9 ME8LT ME9L ME8LU N_IND_CR_9 ME8LT1

ME8LUKCT1 = ((EXTENTS(ME8LS NOT ME8LT)) OR LDTA_8) INTERACT ME8LUKCT
ME8LUKCT2 = EXTENTS(ME8LS NOT ME8LT)
ME8LUKCT = (((EXTENTS ME8LS) NOT ME8LUKCT2) NOT INTERACT VI7) OR LDTA_8

DEVICE L_SY30KCT_RFVIL N_IND_SYC_9_P ME9_C(PLUS) ME9_C(MINUS) ME7_C(CT) N_IND_SYC_9_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER9 ME8LT ME9L ME8LUKCT ME8LT2 ME7LS ME8LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_9_P ME9_C(PLUS) ME9_C(MINUS) N_IND_SY_9_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER9 ME8LT ME9L ME8LUKCT ME8LT2 ME8LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
N_IND_CR_8_P_T1 = PSUB INTERACT N_IND_CR_8_P
N_IND_SYC_8_P_T1 = PSUB INTERACT N_IND_SYC_8_P
N_IND_SY_8_P_T1 = PSUB INTERACT N_IND_SY_8_P
CONNECT PSD_C N_IND_CR_8_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_8_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_8_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_8_P ME8_C(PLUS) ME7_C(MINUS) N_IND_CR_8_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER8 ME7LT ME8L ME7LU N_IND_CR_8 ME7LT1

ME7LUKCT1 = ((EXTENTS(ME7LS NOT ME7LT)) OR LDTA_7) INTERACT ME7LUKCT
ME7LUKCT2 = EXTENTS(ME7LS NOT ME7LT)
ME7LUKCT = (((EXTENTS ME7LS) NOT ME7LUKCT2) NOT INTERACT VI6) OR LDTA_7

DEVICE L_SY30KCT_RFVIL N_IND_SYC_8_P ME8_C(PLUS) ME8_C(MINUS) ME6_C(CT) N_IND_SYC_8_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME6LS ME7LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_8_P ME8_C(PLUS) ME8_C(MINUS) N_IND_SY_8_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME7LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
N_IND_CR_8_P_T1 = PSUB INTERACT N_IND_CR_8_P
N_IND_SYC_8_P_T1 = PSUB INTERACT N_IND_SYC_8_P
N_IND_SY_8_P_T1 = PSUB INTERACT N_IND_SY_8_P
CONNECT PSD_C N_IND_CR_8_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_8_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_8_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_8_P ME8_C(PLUS) ME7_C(MINUS) N_IND_CR_8_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER8 ME7LT ME8L ME7LU N_IND_CR_8 ME7LT1

ME7LUKCT1 = ((EXTENTS(ME7LS NOT ME7LT)) OR LDTA_7) INTERACT ME7LUKCT
ME7LUKCT2 = EXTENTS(ME7LS NOT ME7LT)
ME7LUKCT = (((EXTENTS ME7LS) NOT ME7LUKCT2) NOT INTERACT VI6) OR LDTA_7

DEVICE L_SY30KCT_RFVIL N_IND_SYC_8_P ME8_C(PLUS) ME8_C(MINUS) ME6_C(CT) N_IND_SYC_8_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME6LS ME7LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_8_P ME8_C(PLUS) ME8_C(MINUS) N_IND_SY_8_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME7LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
N_IND_CR_8_P_T1 = PSUB INTERACT N_IND_CR_8_P
N_IND_SYC_8_P_T1 = PSUB INTERACT N_IND_SYC_8_P
N_IND_SY_8_P_T1 = PSUB INTERACT N_IND_SY_8_P
CONNECT PSD_C N_IND_CR_8_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_8_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_8_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_8_P ME8_C(PLUS) ME7_C(MINUS) N_IND_CR_8_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER8 ME7LT ME8L ME7LU N_IND_CR_8 ME7LT1

ME7LUKCT1 = ((EXTENTS(ME7LS NOT ME7LT)) OR LDTA_7) INTERACT ME7LUKCT
ME7LUKCT2 = EXTENTS(ME7LS NOT ME7LT)
ME7LUKCT = (((EXTENTS ME7LS) NOT ME7LUKCT2) NOT INTERACT VI6) OR LDTA_7

DEVICE L_SY30KCT_RFVIL N_IND_SYC_8_P ME8_C(PLUS) ME8_C(MINUS) ME6_C(CT) N_IND_SYC_8_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME6LS ME7LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_8_P ME8_C(PLUS) ME8_C(MINUS) N_IND_SY_8_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME7LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
N_IND_CR_7_P_T1 = PSUB INTERACT N_IND_CR_7_P
N_IND_SYC_7_P_T1 = PSUB INTERACT N_IND_SYC_7_P
N_IND_SY_7_P_T1 = PSUB INTERACT N_IND_SY_7_P
CONNECT PSD_C N_IND_CR_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_7_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) N_IND_CR_7_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) N_IND_SYC_7_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) N_IND_SY_7_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
N_IND_CR_7_P_T1 = PSUB INTERACT N_IND_CR_7_P
N_IND_SYC_7_P_T1 = PSUB INTERACT N_IND_SYC_7_P
N_IND_SY_7_P_T1 = PSUB INTERACT N_IND_SY_7_P
CONNECT PSD_C N_IND_CR_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_7_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) N_IND_CR_7_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) N_IND_SYC_7_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) N_IND_SY_7_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
N_IND_CR_7_P_T1 = PSUB INTERACT N_IND_CR_7_P
N_IND_SYC_7_P_T1 = PSUB INTERACT N_IND_SYC_7_P
N_IND_SY_7_P_T1 = PSUB INTERACT N_IND_SY_7_P
CONNECT PSD_C N_IND_CR_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_7_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) N_IND_CR_7_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) N_IND_SYC_7_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) N_IND_SY_7_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
N_IND_CR_7_P_T1 = PSUB INTERACT N_IND_CR_7_P
N_IND_SYC_7_P_T1 = PSUB INTERACT N_IND_SYC_7_P
N_IND_SY_7_P_T1 = PSUB INTERACT N_IND_SY_7_P
CONNECT PSD_C N_IND_CR_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_7_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_7_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) N_IND_CR_7_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) N_IND_SYC_7_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) N_IND_SY_7_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
N_IND_CR_6_P_T1 = PSUB INTERACT N_IND_CR_6_P
N_IND_SYC_6_P_T1 = PSUB INTERACT N_IND_SYC_6_P
N_IND_SY_6_P_T1 = PSUB INTERACT N_IND_SY_6_P
CONNECT PSD_C N_IND_CR_6_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_6_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_6_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_6_P ME6_C(PLUS) ME5_C(MINUS) N_IND_CR_6_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER6 ME5LT ME6L ME5LU N_IND_CR_6 ME5LT1

ME5LUKCT1 = ((EXTENTS(ME5LS NOT ME5LT)) OR LDTA_5) INTERACT ME5LUKCT
ME5LUKCT2 = EXTENTS(ME5LS NOT ME5LT)
ME5LUKCT = (((EXTENTS ME5LS) NOT ME5LUKCT2) NOT INTERACT VI4) OR LDTA_5

DEVICE L_SY30KCT_RFVIL N_IND_SYC_6_P ME6_C(PLUS) ME6_C(MINUS) ME4_C(CT) N_IND_SYC_6_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME4LS ME5LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_6_P ME6_C(PLUS) ME6_C(MINUS) N_IND_SY_6_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME5LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
N_IND_CR_6_P_T1 = PSUB INTERACT N_IND_CR_6_P
N_IND_SYC_6_P_T1 = PSUB INTERACT N_IND_SYC_6_P
N_IND_SY_6_P_T1 = PSUB INTERACT N_IND_SY_6_P
CONNECT PSD_C N_IND_CR_6_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_6_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_6_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_6_P ME6_C(PLUS) ME5_C(MINUS) N_IND_CR_6_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER6 ME5LT ME6L ME5LU N_IND_CR_6 ME5LT1

ME5LUKCT1 = ((EXTENTS(ME5LS NOT ME5LT)) OR LDTA_5) INTERACT ME5LUKCT
ME5LUKCT2 = EXTENTS(ME5LS NOT ME5LT)
ME5LUKCT = (((EXTENTS ME5LS) NOT ME5LUKCT2) NOT INTERACT VI4) OR LDTA_5

DEVICE L_SY30KCT_RFVIL N_IND_SYC_6_P ME6_C(PLUS) ME6_C(MINUS) ME4_C(CT) N_IND_SYC_6_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME4LS ME5LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_6_P ME6_C(PLUS) ME6_C(MINUS) N_IND_SY_6_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME5LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
N_IND_CR_6_P_T1 = PSUB INTERACT N_IND_CR_6_P
N_IND_SYC_6_P_T1 = PSUB INTERACT N_IND_SYC_6_P
N_IND_SY_6_P_T1 = PSUB INTERACT N_IND_SY_6_P
CONNECT PSD_C N_IND_CR_6_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_6_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_6_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_6_P ME6_C(PLUS) ME5_C(MINUS) N_IND_CR_6_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER6 ME5LT ME6L ME5LU N_IND_CR_6 ME5LT1

ME5LUKCT1 = ((EXTENTS(ME5LS NOT ME5LT)) OR LDTA_5) INTERACT ME5LUKCT
ME5LUKCT2 = EXTENTS(ME5LS NOT ME5LT)
ME5LUKCT = (((EXTENTS ME5LS) NOT ME5LUKCT2) NOT INTERACT VI4) OR LDTA_5

DEVICE L_SY30KCT_RFVIL N_IND_SYC_6_P ME6_C(PLUS) ME6_C(MINUS) ME4_C(CT) N_IND_SYC_6_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME4LS ME5LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_6_P ME6_C(PLUS) ME6_C(MINUS) N_IND_SY_6_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME5LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
N_IND_CR_5_P_T1 = PSUB INTERACT N_IND_CR_5_P
N_IND_SYC_5_P_T1 = PSUB INTERACT N_IND_SYC_5_P
N_IND_SY_5_P_T1 = PSUB INTERACT N_IND_SY_5_P
CONNECT PSD_C N_IND_CR_5_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_5_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_5_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_5_P ME5_C(PLUS) ME4_C(MINUS) N_IND_CR_5_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER5 ME4LT ME5L ME4LU N_IND_CR_5 ME4LT1

ME4LUKCT1 = ((EXTENTS(ME4LS NOT ME4LT)) OR LDTA_4) INTERACT ME4LUKCT
ME4LUKCT2 = EXTENTS(ME4LS NOT ME4LT)
ME4LUKCT = (((EXTENTS ME4LS) NOT ME4LUKCT2) NOT INTERACT VI3) OR LDTA_4

DEVICE L_SY30KCT_RFVIL N_IND_SYC_5_P ME5_C(PLUS) ME5_C(MINUS) ME3_C(CT) N_IND_SYC_5_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER5 ME4LT ME5L ME4LUKCT ME4LT2 ME3LS ME4LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_5_P ME5_C(PLUS) ME5_C(MINUS) N_IND_SY_5_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER5 ME4LT ME5L ME4LUKCT ME4LT2 ME4LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME4_1T0F
N_IND_CR_4_P_T1 = PSUB INTERACT N_IND_CR_4_P
N_IND_SYC_4_P_T1 = PSUB INTERACT N_IND_SYC_4_P
N_IND_SY_4_P_T1 = PSUB INTERACT N_IND_SY_4_P
CONNECT PSD_C N_IND_CR_4_P_T1 BY PTAP
CONNECT PSD_C N_IND_SYC_4_P_T1 BY PTAP
CONNECT PSD_C N_IND_SY_4_P_T1 BY PTAP

DEVICE L_CR30K_RFVIL N_IND_CR_4_P ME4_C(PLUS) ME3_C(MINUS) N_IND_CR_4_P_T1(PSUB)
CMACRO INDCHK1 LDIMETER4 ME3LT ME4L ME3LU N_IND_CR_4 ME3LT1

ME3LUKCT1 = ((EXTENTS(ME3LS NOT ME3LT)) OR LDTA_3) INTERACT ME3LUKCT
ME3LUKCT2 = EXTENTS(ME3LS NOT ME3LT)
ME3LUKCT = (((EXTENTS ME3LS) NOT ME3LUKCT2) NOT INTERACT VI2) OR LDTA_3

DEVICE L_SY30KCT_RFVIL N_IND_SYC_4_P ME4_C(PLUS) ME4_C(MINUS) ME2_C(CT) N_IND_SYC_4_P_T1(PSUB)
CMACRO INDCHK3 LDIMETER4 ME3LT ME4L ME3LUKCT ME3LT2 ME2LS ME3LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_4_P ME4_C(PLUS) ME4_C(MINUS) N_IND_SY_4_P_T1(PSUB)
CMACRO INDCHK5 LDIMETER4 ME3LT ME4L ME3LUKCT ME3LT2 ME3LUKCT1
#ENDIF

#ELSE
#IFDEF TOP_METAL_ME9_2T1F
DEVICE L_CR30K_RFVIL N_IND_CR_9_P ME9_C(PLUS) ME8_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER9 ME8LT ME9L ME8LU N_IND_CR_9 ME8LT1

ME8LUKCT1 = ((EXTENTS(ME8LS NOT ME8LT)) OR LDTA_8) INTERACT ME8LUKCT
ME8LUKCT2 = EXTENTS(ME8LS NOT ME8LT)
ME8LUKCT = (((EXTENTS ME8LS) NOT ME8LUKCT2) NOT INTERACT VI7) OR LDTA_8

DEVICE L_SY30KCT_RFVIL N_IND_SYC_9_P ME9_C(PLUS) ME9_C(MINUS) ME7_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER9 ME8LT ME9L ME8LUKCT ME8LT2 ME7LS ME8LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_9_P ME9_C(PLUS) ME9_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER9 ME8LT ME9L ME8LUKCT ME8LT2 ME8LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME8_2T0F
DEVICE L_CR30K_RFVIL N_IND_CR_8_P ME8_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER8 ME7LT ME8L ME7LU N_IND_CR_8 ME7LT1

ME7LUKCT1 = ((EXTENTS(ME7LS NOT ME7LT)) OR LDTA_7) INTERACT ME7LUKCT
ME7LUKCT2 = EXTENTS(ME7LS NOT ME7LT)
ME7LUKCT = (((EXTENTS ME7LS) NOT ME7LUKCT2) NOT INTERACT VI6) OR LDTA_7

DEVICE L_SY30KCT_RFVIL N_IND_SYC_8_P ME8_C(PLUS) ME8_C(MINUS) ME6_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME6LS ME7LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_8_P ME8_C(PLUS) ME8_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME7LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME8_1T1F
DEVICE L_CR30K_RFVIL N_IND_CR_8_P ME8_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER8 ME7LT ME8L ME7LU N_IND_CR_8 ME7LT1

ME7LUKCT1 = ((EXTENTS(ME7LS NOT ME7LT)) OR LDTA_7) INTERACT ME7LUKCT
ME7LUKCT2 = EXTENTS(ME7LS NOT ME7LT)
ME7LUKCT = (((EXTENTS ME7LS) NOT ME7LUKCT2) NOT INTERACT VI6) OR LDTA_7

DEVICE L_SY30KCT_RFVIL N_IND_SYC_8_P ME8_C(PLUS) ME8_C(MINUS) ME6_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME6LS ME7LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_8_P ME8_C(PLUS) ME8_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME7LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME8_2T1F
DEVICE L_CR30K_RFVIL N_IND_CR_8_P ME8_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER8 ME7LT ME8L ME7LU N_IND_CR_8 ME7LT1

ME7LUKCT1 = ((EXTENTS(ME7LS NOT ME7LT)) OR LDTA_7) INTERACT ME7LUKCT
ME7LUKCT2 = EXTENTS(ME7LS NOT ME7LT)
ME7LUKCT = (((EXTENTS ME7LS) NOT ME7LUKCT2) NOT INTERACT VI6) OR LDTA_7

DEVICE L_SY30KCT_RFVIL N_IND_SYC_8_P ME8_C(PLUS) ME8_C(MINUS) ME6_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME6LS ME7LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_8_P ME8_C(PLUS) ME8_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER8 ME7LT ME8L ME7LUKCT ME7LT2 ME7LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_1T0F
DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_2T0F
DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_1T1F
DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME7_2T1F
DEVICE L_CR30K_RFVIL N_IND_CR_7_P ME7_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER7 ME6LT ME7L ME6LU N_IND_CR_7 ME6LT1

ME6LUKCT1 = ((EXTENTS(ME6LS NOT ME6LT)) OR LDTA_6) INTERACT ME6LUKCT
ME6LUKCT2 = EXTENTS(ME6LS NOT ME6LT)
ME6LUKCT = (((EXTENTS ME6LS) NOT ME6LUKCT2) NOT INTERACT VI5) OR LDTA_6

DEVICE L_SY30KCT_RFVIL N_IND_SYC_7_P ME7_C(PLUS) ME7_C(MINUS) ME5_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME5LS ME6LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_7_P ME7_C(PLUS) ME7_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER7 ME6LT ME7L ME6LUKCT ME6LT2 ME6LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME6_1T0F
DEVICE L_CR30K_RFVIL N_IND_CR_6_P ME6_C(PLUS) ME5_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER6 ME5LT ME6L ME5LU N_IND_CR_6 ME5LT1

ME5LUKCT1 = ((EXTENTS(ME5LS NOT ME5LT)) OR LDTA_5) INTERACT ME5LUKCT
ME5LUKCT2 = EXTENTS(ME5LS NOT ME5LT)
ME5LUKCT = (((EXTENTS ME5LS) NOT ME5LUKCT2) NOT INTERACT VI4) OR LDTA_5

DEVICE L_SY30KCT_RFVIL N_IND_SYC_6_P ME6_C(PLUS) ME6_C(MINUS) ME4_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME4LS ME5LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_6_P ME6_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME5LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME6_2T0F
DEVICE L_CR30K_RFVIL N_IND_CR_6_P ME6_C(PLUS) ME5_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER6 ME5LT ME6L ME5LU N_IND_CR_6 ME5LT1

ME5LUKCT1 = ((EXTENTS(ME5LS NOT ME5LT)) OR LDTA_5) INTERACT ME5LUKCT
ME5LUKCT2 = EXTENTS(ME5LS NOT ME5LT)
ME5LUKCT = (((EXTENTS ME5LS) NOT ME5LUKCT2) NOT INTERACT VI4) OR LDTA_5

DEVICE L_SY30KCT_RFVIL N_IND_SYC_6_P ME6_C(PLUS) ME6_C(MINUS) ME4_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME4LS ME5LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_6_P ME6_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME5LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME6_1T1F
DEVICE L_CR30K_RFVIL N_IND_CR_6_P ME6_C(PLUS) ME5_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER6 ME5LT ME6L ME5LU N_IND_CR_6 ME5LT1

ME5LUKCT1 = ((EXTENTS(ME5LS NOT ME5LT)) OR LDTA_5) INTERACT ME5LUKCT
ME5LUKCT2 = EXTENTS(ME5LS NOT ME5LT)
ME5LUKCT = (((EXTENTS ME5LS) NOT ME5LUKCT2) NOT INTERACT VI4) OR LDTA_5

DEVICE L_SY30KCT_RFVIL N_IND_SYC_6_P ME6_C(PLUS) ME6_C(MINUS) ME4_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME4LS ME5LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_6_P ME6_C(PLUS) ME6_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER6 ME5LT ME6L ME5LUKCT ME5LT2 ME5LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME5_1T0F
DEVICE L_CR30K_RFVIL N_IND_CR_5_P ME5_C(PLUS) ME4_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER5 ME4LT ME5L ME4LU N_IND_CR_5 ME4LT1

ME4LUKCT1 = ((EXTENTS(ME4LS NOT ME4LT)) OR LDTA_4) INTERACT ME4LUKCT
ME4LUKCT2 = EXTENTS(ME4LS NOT ME4LT)
ME4LUKCT = (((EXTENTS ME4LS) NOT ME4LUKCT2) NOT INTERACT VI3) OR LDTA_4

DEVICE L_SY30KCT_RFVIL N_IND_SYC_5_P ME5_C(PLUS) ME5_C(MINUS) ME3_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER5 ME4LT ME5L ME4LUKCT ME4LT2 ME3LS ME4LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_5_P ME5_C(PLUS) ME5_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER5 ME4LT ME5L ME4LUKCT ME4LT2 ME4LUKCT1
#ENDIF

#IFDEF TOP_METAL_ME4_1T0F
DEVICE L_CR30K_RFVIL N_IND_CR_4_P ME4_C(PLUS) ME3_C(MINUS) PSUB(PSUB)
CMACRO INDCHK1 LDIMETER4 ME3LT ME4L ME3LU N_IND_CR_4 ME3LT1

ME3LUKCT1 = ((EXTENTS(ME3LS NOT ME3LT)) OR LDTA_3) INTERACT ME3LUKCT
ME3LUKCT2 = EXTENTS(ME3LS NOT ME3LT)
ME3LUKCT = (((EXTENTS ME3LS) NOT ME3LUKCT2) NOT INTERACT VI2) OR LDTA_3

DEVICE L_SY30KCT_RFVIL N_IND_SYC_4_P ME4_C(PLUS) ME4_C(MINUS) ME2_C(CT) PSUB(PSUB)
CMACRO INDCHK3 LDIMETER4 ME3LT ME4L ME3LUKCT ME3LT2 ME2LS ME3LUKCT1

DEVICE L_SY30K_RFVIL N_IND_SY_4_P ME4_C(PLUS) ME4_C(MINUS) PSUB(PSUB)
CMACRO INDCHK5 LDIMETER4 ME3LT ME4L ME3LUKCT ME3LT2 ME3LUKCT1
#ENDIF

#ENDIF

#IFDEF RCFLOW_CCI
N_IND_SQ_T1 = PSUB INTERACT N_IND_SQ_P
CONNECT PSD_C N_IND_SQ_T1 BY PTAP
DEVICE L_SQSK_RFVIL N_IND_SQ_P Lterm2(PLUS) Lterm1(MINUS) N_IND_SQ_T1(PSUB) <SQ_DATW> <SQLDIMETER>
<IND_SQ> <SQ_DATS> <SQ_NS> <SQ_BM1> <SQ_BM2> <SQ_BM3> <CENTER>
[ PROPERTY od,NT,W,S,NS,BM
P1=PERIMETER(SQLDIMETER)/2
A=AREA(SQLDIMETER)
od=(P1+SQRT(ABS(P1*P1-4*A)))/2 /* P1=L1+W1 , A = L1*W1 ,L1 AND W1 are for SQLDIMETER */
NT=COUNT(SQ_DATW)/2-0.5
W=(PERIMETER_INSIDE(SQ_DATW,IND_SQ))/(2*COUNT(SQ_DATW))
S=(PERIMETER_OUTSIDE(SQ_DATS,SQ_DATW))/(2*COUNT(SQ_DATS))
NS=COUNT(SQ_NS)
BM=1*COUNT(SQ_BM1)+2*COUNT(SQ_BM2)+3*COUNT(SQ_BM3)+COUNT(SQLDIMETER)-6
Da=od-NT*(W+S)+S
Fr=(NT*(W+S)-S)/Da
P=W+S
Et0=2.51
Et1=1.21E-6
Et=Et0-Et1/od
Es0=1.93
Es1=8.33E-7
Es=Es0-Es1/od
C1=1.15
C2=1.78
C3=0.161
//L=6.285E-7*C1*Da*POW(NT,Et)*(LOG(C2/Fr)+C3*Fr)*POW(NS,Es)
]
TRACE PROPERTY L_SQSK_RFVIL NT NT 0
TRACE PROPERTY L_SQSK_RFVIL S S 3
TRACE PROPERTY L_SQSK_RFVIL W W 3
TRACE PROPERTY L_SQSK_RFVIL od od 3
TRACE PROPERTY L_SQSK_RFVIL NS NS 3
TRACE PROPERTY L_SQSK_RFVIL BM BM 3
#ELSE
DEVICE L_SQSK_RFVIL N_IND_SQ_P Lterm2(PLUS) Lterm1(MINUS) PSUB(PSUB) <SQ_DATW> <SQLDIMETER>
<IND_SQ> <SQ_DATS> <SQ_NS> <SQ_BM1> <SQ_BM2> <SQ_BM3> <CENTER>
[ PROPERTY od,NT,W,S,NS,BM
P1=PERIMETER(SQLDIMETER)/2
A=AREA(SQLDIMETER)
od=(P1+SQRT(ABS(P1*P1-4*A)))/2 /* P1=L1+W1 , A = L1*W1 ,L1 AND W1 are for SQLDIMETER */
NT=COUNT(SQ_DATW)/2-0.5
W=(PERIMETER_INSIDE(SQ_DATW,IND_SQ))/(2*COUNT(SQ_DATW))
S=(PERIMETER_OUTSIDE(SQ_DATS,SQ_DATW))/(2*COUNT(SQ_DATS))
NS=COUNT(SQ_NS)
BM=1*COUNT(SQ_BM1)+2*COUNT(SQ_BM2)+3*COUNT(SQ_BM3)+COUNT(SQLDIMETER)-6
Da=od-NT*(W+S)+S
Fr=(NT*(W+S)-S)/Da
P=W+S
Et0=2.51
Et1=1.21E-6
Et=Et0-Et1/od
Es0=1.93
Es1=8.33E-7
Es=Es0-Es1/od
C1=1.15
C2=1.78
C3=0.161
//L=6.285E-7*C1*Da*POW(NT,Et)*(LOG(C2/Fr)+C3*Fr)*POW(NS,Es)
]
TRACE PROPERTY L_SQSK_RFVIL NT NT 0
TRACE PROPERTY L_SQSK_RFVIL S S 3
TRACE PROPERTY L_SQSK_RFVIL W W 3
TRACE PROPERTY L_SQSK_RFVIL od od 3
TRACE PROPERTY L_SQSK_RFVIL NS NS 3
TRACE PROPERTY L_SQSK_RFVIL BM BM 3
#ENDIF

MOM_ARRAY_VP3_RFVCL_1 = SIZE(((SIZE4 AND RFSYMBOL)INTERACT MOMSYM) NOT ((SIZE1 OR SIZE2) OR SIZE3))BY 0.4
MOM_ARRAY_VP3_RFVCL_2 = SIZE(((SIZE4 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE1)BY 0.4
MOM_ARRAY_VP3_RFVCL_3 = SIZE(((SIZE4 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE2)BY 0.4
MOM_ARRAY_VP3_RFVCL_4 = SIZE(((SIZE4 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE3)BY 0.4

MOM_ARRAY_VP4_RFVCL_1 = SIZE(((SIZE5 AND RFSYMBOL)INTERACT MOMSYM) NOT ((SIZE1 OR SIZE2) OR SIZE3))BY 0.4
MOM_ARRAY_VP4_RFVCL_2 = SIZE(((SIZE5 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE1)BY 0.4
MOM_ARRAY_VP4_RFVCL_3 = SIZE(((SIZE5 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE2)BY 0.4
MOM_ARRAY_VP4_RFVCL_4 = SIZE(((SIZE5 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE3)BY 0.4

MOM_ARRAY_VP3_MMVCL_1 = SIZE(((SIZE6 AND RFSYMBOL)INTERACT MOMSYM) NOT ((SIZE1 OR SIZE2) OR SIZE3))BY 0.14
MOM_ARRAY_VP3_MMVCL_2 = SIZE(((SIZE6 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE1)BY 0.14
MOM_ARRAY_VP3_MMVCL_3 = SIZE(((SIZE6 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE2)BY 0.14
MOM_ARRAY_VP3_MMVCL_4 = SIZE(((SIZE6 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE3)BY 0.14

MOM_ARRAY_VP4_MMVCL_1 = SIZE(((SIZE7 AND RFSYMBOL)INTERACT MOMSYM) NOT ((SIZE1 OR SIZE2) OR SIZE3))BY 0.14
MOM_ARRAY_VP4_MMVCL_2 = SIZE(((SIZE7 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE1)BY 0.14
MOM_ARRAY_VP4_MMVCL_3 = SIZE(((SIZE7 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE2)BY 0.14
MOM_ARRAY_VP4_MMVCL_4 = SIZE(((SIZE7 AND RFSYMBOL)INTERACT MOMSYM) AND SIZE3)BY 0.14

MOMSYM1 = SIZE(SIZE MOMSYM BY -0.07) BY 0.07

MOMCOUNT1 = (MOMSYM1 AND (ME1 AND RFSYMBOL)) AND ((SIZE4 OR SIZE5) OR SIZE6) //OR SIZE7
MOMCOUNT2 = (MOMSYM1 AND (ME2 AND RFSYMBOL)) AND (((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7)
MOMCOUNT3 = (MOMSYM1 AND (ME3 AND RFSYMBOL)) AND (((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7)
MOMCOUNT4 = (MOMSYM1 AND (ME4 AND RFSYMBOL)) AND (((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7)
MOMCOUNT5 = (MOMSYM1 AND (ME5 AND RFSYMBOL)) AND (((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7)
MOMCOUNT6 = (MOMSYM1 AND (ME6 AND RFSYMBOL)) AND (((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7)

ENC_MOM1 = MOMSYM1 NOT MOMCOUNT1
ENC_MOM2 = MOMSYM1 NOT MOMCOUNT2
ENC_MOM3 = MOMSYM1 NOT MOMCOUNT3
ENC_MOM4 = MOMSYM1 NOT MOMCOUNT4
ENC_MOM5 = MOMSYM1 NOT MOMCOUNT5
ENC_MOM6 = MOMSYM1 NOT MOMCOUNT6

N_ARRAY = MOMSYM AND (((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7)

rf_mom = EXTENTS((((SIZE4 OR SIZE5) OR SIZE6) OR SIZE7) AND RFSYMBOL)

rf = (SIZE rf_mom BY 0.1 ) NOT (SIZE rf_mom BY 0.05)
type9 = (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7) AND RFSYMBOL
type6 = (((ME6 AND RFSYMBOL) AND (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7)) INTERACT type9) OR rf
type5 = (((ME5 AND RFSYMBOL) AND (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7)) INTERACT type9) OR rf
type4 = (((ME4 AND RFSYMBOL) AND (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7)) INTERACT type9) OR rf
type3 = (((ME3 AND RFSYMBOL) AND (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7)) INTERACT type9) OR rf
type2 = (((ME2 AND RFSYMBOL) AND (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7)) INTERACT type9) OR rf
type1 = (((ME1 AND RFSYMBOL) AND (((SIZE4 OR SIZE5)OR SIZE6) OR SIZE7)) INTERACT type9) OR rf

#IFDEF RCFLOW_CCI
MOM_ARRAY_VP3_RFVCL_1_T1 = PSUB INTERACT MOM_ARRAY_VP3_RFVCL_1
MOM_ARRAY_VP3_RFVCL_1_T2 = WEL INTERACT MOM_ARRAY_VP3_RFVCL_1
CONNECT PSD_C MOM_ARRAY_VP3_RFVCL_1_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP3_RFVCL_1_T2 BY NTAP
DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_1 ME3_C(PLUS) ME2_C(MINUS) MOM_ARRAY_VP3_RFVCL_1_T2(NW) MOM_ARRAY_VP3_RFVCL_1_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT1> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT1)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT1)/finger_w/nf/Array
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]
MOM_ARRAY_VP3_RFVCL_2_T1 = PSUB INTERACT MOM_ARRAY_VP3_RFVCL_2
MOM_ARRAY_VP3_RFVCL_2_T2 = WEL INTERACT MOM_ARRAY_VP3_RFVCL_2
CONNECT PSD_C MOM_ARRAY_VP3_RFVCL_2_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP3_RFVCL_2_T2 BY NTAP

DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_2 ME3_C(PLUS) ME2_C(MINUS) MOM_ARRAY_VP3_RFVCL_2_T2(NW) MOM_ARRAY_VP3_RFVCL_2_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT2)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT2)/finger_w/nf/Array
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}
}
}
]
MOM_ARRAY_VP3_RFVCL_3_T1 = PSUB INTERACT MOM_ARRAY_VP3_RFVCL_3
MOM_ARRAY_VP3_RFVCL_3_T2 = WEL INTERACT MOM_ARRAY_VP3_RFVCL_3
CONNECT PSD_C MOM_ARRAY_VP3_RFVCL_3_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP3_RFVCL_3_T2 BY NTAP

DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_3 ME4_C(PLUS) ME3_C(MINUS) MOM_ARRAY_VP3_RFVCL_3_T2(NW) MOM_ARRAY_VP3_RFVCL_3_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT3)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT3)/finger_w/nf/Array
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}
}
]
MOM_ARRAY_VP3_RFVCL_4_T1 = PSUB INTERACT MOM_ARRAY_VP3_RFVCL_4
MOM_ARRAY_VP3_RFVCL_4_T2 = WEL INTERACT MOM_ARRAY_VP3_RFVCL_4
CONNECT PSD_C MOM_ARRAY_VP3_RFVCL_4_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP3_RFVCL_4_T2 BY NTAP

DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_4 ME5_C(PLUS) ME4_C(MINUS) MOM_ARRAY_VP3_RFVCL_4_T2(NW) MOM_ARRAY_VP3_RFVCL_4_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT4> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 4
ns=3
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT4)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT4)/finger_w/nf/Array
]
MOM_ARRAY_VP4_RFVCL_1_T1 = PSUB INTERACT MOM_ARRAY_VP4_RFVCL_1
MOM_ARRAY_VP4_RFVCL_1_T2 = WEL INTERACT MOM_ARRAY_VP4_RFVCL_1
CONNECT PSD_C MOM_ARRAY_VP4_RFVCL_1_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP4_RFVCL_1_T2 BY NTAP

DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_1 ME3_C(PLUS) ME2_C(MINUS) MOM_ARRAY_VP4_RFVCL_1_T2(NW) MOM_ARRAY_VP4_RFVCL_1_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT2)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT2)/finger_w/nf/Array
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL lf lf 3

MOM_ARRAY_VP4_RFVCL_2_T1 = PSUB INTERACT MOM_ARRAY_VP4_RFVCL_2
MOM_ARRAY_VP4_RFVCL_2_T2 = WEL INTERACT MOM_ARRAY_VP4_RFVCL_2
CONNECT PSD_C MOM_ARRAY_VP4_RFVCL_2_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP4_RFVCL_2_T2 BY NTAP

DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_2 ME3_C(PLUS) ME2_C(MINUS) MOM_ARRAY_VP4_RFVCL_2_T2(NW) MOM_ARRAY_VP4_RFVCL_2_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT3)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT3)/finger_w/nf/Array
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}
}
}
]
MOM_ARRAY_VP4_RFVCL_3_T1 = PSUB INTERACT MOM_ARRAY_VP4_RFVCL_3
MOM_ARRAY_VP4_RFVCL_3_T2 = WEL INTERACT MOM_ARRAY_VP4_RFVCL_3
CONNECT PSD_C MOM_ARRAY_VP4_RFVCL_3_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP4_RFVCL_3_T2 BY NTAP
DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_3 ME4_C(PLUS) ME3_C(MINUS) MOM_ARRAY_VP4_RFVCL_3_T2(NW) MOM_ARRAY_VP4_RFVCL_3_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT4> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT4)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT4)/finger_w/nf/Array
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}
}
]
MOM_ARRAY_VP4_RFVCL_4_T1 = PSUB INTERACT MOM_ARRAY_VP4_RFVCL_4
MOM_ARRAY_VP4_RFVCL_4_T2 = WEL INTERACT MOM_ARRAY_VP4_RFVCL_4
CONNECT PSD_C MOM_ARRAY_VP4_RFVCL_4_T1 BY PTAP
CONNECT NSD_C MOM_ARRAY_VP4_RFVCL_4_T2 BY NTAP

DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_4 ME5_C(PLUS) ME4_C(MINUS) MOM_ARRAY_VP4_RFVCL_4_T2(NW) MOM_ARRAY_VP4_RFVCL_4_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT5> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 4
ns=3
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT5)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT5)/finger_w/nf/Array
]
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL lf lf 3

ME3_C_VP3_MMVCL = (ME3 NOT RFSYMBOL) INTERACT MOMSYM
ME4_C_VP3_MMVCL = (ME4 NOT RFSYMBOL) INTERACT MOMSYM
ME5_C_VP3_MMVCL = (ME5 NOT RFSYMBOL) INTERACT MOMSYM

CONNECT ME3_C_VP3_MMVCL ME3_C
CONNECT ME4_C_VP3_MMVCL ME4_C
CONNECT ME5_C_VP3_MMVCL ME5_C

MOM_ARRAY_VP3_MMVCL_1_T1 = PSUB INTERACT MOM_ARRAY_VP3_MMVCL_1
CONNECT PSD_C MOM_ARRAY_VP3_MMVCL_1_T1 BY PTAP

DEVICE MOMCAPS_ARRAY_VP3_MMVCL MOM_ARRAY_VP3_MMVCL_1 ME3_C_VP3_MMVCL(PLUS) ME3_C(MINUS) MOM_ARRAY_VP3_MMVCL_1_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT1> <N_ARRAY> <ENC_MOM1>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = (COUNT(N_ARRAY)-1)/2
nf = COUNT(MOMCOUNT1)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT1)/finger_w/nf/Array
gard_enc_mom = (AREA(ENC_MOM1)/lf/Array-(0.2e-6*2+(nf+1)*0.14e-6))/2
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]
MOM_ARRAY_VP3_MMVCL_2_T1 = PSUB INTERACT MOM_ARRAY_VP3_MMVCL_2
CONNECT PSD_C MOM_ARRAY_VP3_MMVCL_2_T1 BY PTAP
DEVICE MOMCAPS_ARRAY_VP3_MMVCL MOM_ARRAY_VP3_MMVCL_2 ME4_C_VP3_MMVCL(PLUS) ME4_C(MINUS) MOM_ARRAY_VP3_MMVCL_2_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY> <ENC_MOM2>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = (COUNT(N_ARRAY)-1)/2
nf = COUNT(MOMCOUNT2)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT2)/finger_w/nf/Array
gard_enc_mom = (AREA(ENC_MOM2)/lf/Array-(0.2e-6*2+(nf+1)*0.14e-6))/2
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}ELSE{
IF(A3>0){
ns=2
}
}
}
}
]
MOM_ARRAY_VP3_MMVCL_3_T1 = PSUB INTERACT MOM_ARRAY_VP3_MMVCL_3
CONNECT PSD_C MOM_ARRAY_VP3_MMVCL_3_T1 BY PTAP
DEVICE MOMCAPS_ARRAY_VP3_MMVCL MOM_ARRAY_VP3_MMVCL_3 ME5_C_VP3_MMVCL(PLUS) ME5_C(MINUS) MOM_ARRAY_VP3_MMVCL_3_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY> <ENC_MOM3>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = (COUNT(N_ARRAY)-1)/2
nf = COUNT(MOMCOUNT3)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT3)/finger_w/nf/Array
gard_enc_mom = (AREA(ENC_MOM3)/lf/Array-(0.2e-6*2+(nf+1)*0.14e-6))/2
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}ELSE{
IF(A4>0){
ns=2
}ELSE{
IF(A3>0){
ns=1
}
}
}
}
]
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL lf lf 3
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL gard_enc_mom gard_enc_mom 3

MOM_ARRAY_VP4_MMVCL_1_T1 = PSUB INTERACT MOM_ARRAY_VP4_MMVCL_1
CONNECT PSD_C MOM_ARRAY_VP4_MMVCL_1_T1 BY PTAP
DEVICE MOMCAPS_ARRAY_VP4_MMVCL MOM_ARRAY_VP4_MMVCL_1 ME3_C(PLUS) ME2_C(MINUS) MOM_ARRAY_VP4_MMVCL_1_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY> <ENC_MOM2>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = COUNT(N_ARRAY)
nf1 = COUNT(MOMCOUNT2)
nf = (nf1-(Array-1)*2)/Array
finger_w = 0.14e-6
finger_l1 = AREA(MOMCOUNT2)/finger_w/nf1
lf = finger_l1 + (0.42e-6+0.14e-6)
gard_enc_mom = ((AREA(ENC_MOM2)/finger_l1+0.14e-6*(Array-1)*2-(nf-1)*0.14e-6*Array)/Array)/2
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]

MOM_ARRAY_VP4_MMVCL_2_T1 = PSUB INTERACT MOM_ARRAY_VP4_MMVCL_2
CONNECT PSD_C MOM_ARRAY_VP4_MMVCL_2_T1 BY PTAP
DEVICE MOMCAPS_ARRAY_VP4_MMVCL MOM_ARRAY_VP4_MMVCL_2 ME4_C(PLUS) ME3_C(MINUS) MOM_ARRAY_VP4_MMVCL_2_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY> <ENC_MOM3>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = COUNT(N_ARRAY)
nf1 = COUNT(MOMCOUNT3)
nf = (nf1-(Array-1)*2)/Array
finger_w = 0.14e-6
finger_l1 = AREA(MOMCOUNT3)/finger_w/nf1
lf = finger_l1 + (0.42e-6+0.14e-6)
gard_enc_mom = ((AREA(ENC_MOM3)/finger_l1+0.14e-6*(Array-1)*2-(nf-1)*0.14e-6*Array)/Array)/2
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}ELSE{
IF(A3>0){
ns=2
}
}
}
}
]
MOM_ARRAY_VP4_MMVCL_3_T1 = PSUB INTERACT MOM_ARRAY_VP4_MMVCL_3
CONNECT PSD_C MOM_ARRAY_VP4_MMVCL_3_T1 BY PTAP
DEVICE MOMCAPS_ARRAY_VP4_MMVCL MOM_ARRAY_VP4_MMVCL_3 ME5_C(PLUS) ME4_C(MINUS) MOM_ARRAY_VP4_MMVCL_3_T1(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT4> <N_ARRAY> <ENC_MOM4>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = COUNT(N_ARRAY)
nf1 = COUNT(MOMCOUNT4)
nf = (nf1-(Array-1)*2)/Array
finger_w = 0.14e-6
finger_l1 = AREA(MOMCOUNT4)/finger_w/nf1
lf = finger_l1 + (0.42e-6+0.14e-6)
gard_enc_mom = ((AREA(ENC_MOM4)/finger_l1+0.14e-6*(Array-1)*2-(nf-1)*0.14e-6*Array)/Array)/2
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}ELSE{
IF(A4>0){
ns=2
}ELSE{
IF(A3>0){
ns=1
}
}
}
}
]
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL lf lf 3
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL gard_enc_mom gard_enc_mom 3
#ELSE
DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_1 ME3_C(PLUS) ME2_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT1> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT1)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT1)/finger_w/nf/Array
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]
DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_2 ME3_C(PLUS) ME2_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT2)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT2)/finger_w/nf/Array
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}
}
}
]
DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_3 ME4_C(PLUS) ME3_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT3)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT3)/finger_w/nf/Array
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}
}
]
DEVICE MOMCAPS_ARRAY_VP3_RFVCL MOM_ARRAY_VP3_RFVCL_4 ME5_C(PLUS) ME4_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT4> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 4
ns=3
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT4)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT4)/finger_w/nf/Array
]

DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_1 ME3_C(PLUS) ME2_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT2)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT2)/finger_w/nf/Array
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_RFVCL lf lf 3

DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_2 ME3_C(PLUS) ME2_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT3)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT3)/finger_w/nf/Array
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}
}
}
]
DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_3 ME4_C(PLUS) ME3_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT4> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT4)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT4)/finger_w/nf/Array
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}
}
]
DEVICE MOMCAPS_ARRAY_VP4_RFVCL MOM_ARRAY_VP4_RFVCL_4 ME5_C(PLUS) ME4_C(MINUS) WEL(NW) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT5> <N_ARRAY>
[
PROPERTY bm,ns,nf,Array,lf
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 4
ns=3
Array = COUNT(N_ARRAY)
nf = COUNT(MOMCOUNT5)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT5)/finger_w/nf/Array
]
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_RFVCL lf lf 3

ME3_C_VP3_MMVCL = (ME3 NOT RFSYMBOL) INTERACT MOMSYM
ME4_C_VP3_MMVCL = (ME4 NOT RFSYMBOL) INTERACT MOMSYM
ME5_C_VP3_MMVCL = (ME5 NOT RFSYMBOL) INTERACT MOMSYM

CONNECT ME3_C_VP3_MMVCL ME3_C
CONNECT ME4_C_VP3_MMVCL ME4_C
CONNECT ME5_C_VP3_MMVCL ME5_C

DEVICE MOMCAPS_ARRAY_VP3_MMVCL MOM_ARRAY_VP3_MMVCL_1 ME3_C_VP3_MMVCL(PLUS) ME3_C(MINUS) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT1> <N_ARRAY> <ENC_MOM1>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = (COUNT(N_ARRAY)-1)/2
nf = COUNT(MOMCOUNT1)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT1)/finger_w/nf/Array
gard_enc_mom = (AREA(ENC_MOM1)/lf/Array-(0.2e-6*2+(nf+1)*0.14e-6))/2
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]
DEVICE MOMCAPS_ARRAY_VP3_MMVCL MOM_ARRAY_VP3_MMVCL_2 ME4_C_VP3_MMVCL(PLUS) ME4_C(MINUS) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY> <ENC_MOM2>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = (COUNT(N_ARRAY)-1)/2
nf = COUNT(MOMCOUNT2)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT2)/finger_w/nf/Array
gard_enc_mom = (AREA(ENC_MOM2)/lf/Array-(0.2e-6*2+(nf+1)*0.14e-6))/2
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}ELSE{
IF(A3>0){
ns=2
}
}
}
}
]
DEVICE MOMCAPS_ARRAY_VP3_MMVCL MOM_ARRAY_VP3_MMVCL_3 ME5_C_VP3_MMVCL(PLUS) ME5_C(MINUS) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY> <ENC_MOM3>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = (COUNT(N_ARRAY)-1)/2
nf = COUNT(MOMCOUNT3)/Array
finger_w = 0.14e-6
lf = AREA(MOMCOUNT3)/finger_w/nf/Array
gard_enc_mom = (AREA(ENC_MOM3)/lf/Array-(0.2e-6*2+(nf+1)*0.14e-6))/2
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}ELSE{
IF(A4>0){
ns=2
}ELSE{
IF(A3>0){
ns=1
}
}
}
}
]
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL lf lf 3
TRACE PROPERTY MOMCAPS_ARRAY_VP3_MMVCL gard_enc_mom gard_enc_mom 3

DEVICE MOMCAPS_ARRAY_VP4_MMVCL MOM_ARRAY_VP4_MMVCL_1 ME3_C(PLUS) ME2_C(MINUS) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT2> <N_ARRAY> <ENC_MOM2>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 1
ns = 1
Array = COUNT(N_ARRAY)
nf1 = COUNT(MOMCOUNT2)
nf = (nf1-(Array-1)*2)/Array
finger_w = 0.14e-6
finger_l1 = AREA(MOMCOUNT2)/finger_w/nf1
lf = finger_l1 + (0.42e-6+0.14e-6)
gard_enc_mom = ((AREA(ENC_MOM2)/finger_l1+0.14e-6*(Array-1)*2-(nf-1)*0.14e-6*Array)/Array)/2
IF(A6>0){
ns=6
}ELSE{
IF(A5>0){
ns=5
}ELSE{
IF(A4>0){
ns=4
}ELSE{
IF(A3>0){
ns=3
}
}
}
}
]

DEVICE MOMCAPS_ARRAY_VP4_MMVCL MOM_ARRAY_VP4_MMVCL_2 ME4_C(PLUS) ME3_C(MINUS) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT3> <N_ARRAY> <ENC_MOM3>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 2
ns = 1
Array = COUNT(N_ARRAY)
nf1 = COUNT(MOMCOUNT3)
nf = (nf1-(Array-1)*2)/Array
finger_w = 0.14e-6
finger_l1 = AREA(MOMCOUNT3)/finger_w/nf1
lf = finger_l1 + (0.42e-6+0.14e-6)
gard_enc_mom = ((AREA(ENC_MOM3)/finger_l1+0.14e-6*(Array-1)*2-(nf-1)*0.14e-6*Array)/Array)/2
IF(A6>0){
ns=5
}ELSE{
IF(A5>0){
ns=4
}ELSE{
IF(A4>0){
ns=3
}ELSE{
IF(A3>0){
ns=2
}
}
}
}
]
DEVICE MOMCAPS_ARRAY_VP4_MMVCL MOM_ARRAY_VP4_MMVCL_3 ME5_C(PLUS) ME4_C(MINUS) PSUB(PSUB)
<type1> <type2> <type3> <type4> <type5> <type6> <MOMCOUNT4> <N_ARRAY> <ENC_MOM4>
[
PROPERTY bm,ns,nf,Array,lf,gard_enc_mom
A6=COUNT(type6)-1
A5=COUNT(type5)-1
A4=COUNT(type4)-1
A3=COUNT(type3)-1
A2=COUNT(type2)-1
A1=COUNT(type1)-1
bm = 3
ns = 1
Array = COUNT(N_ARRAY)
nf1 = COUNT(MOMCOUNT4)
nf = (nf1-(Array-1)*2)/Array
finger_w = 0.14e-6
finger_l1 = AREA(MOMCOUNT4)/finger_w/nf1
lf = finger_l1 + (0.42e-6+0.14e-6)
gard_enc_mom = ((AREA(ENC_MOM4)/finger_l1+0.14e-6*(Array-1)*2-(nf-1)*0.14e-6*Array)/Array)/2
IF(A6>0){
ns=4
}ELSE{
IF(A5>0){
ns=3
}ELSE{
IF(A4>0){
ns=2
}ELSE{
IF(A3>0){
ns=1
}
}
}
}
]
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL bm bm 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL ns ns 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL nf nf 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL Array Array 0
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL lf lf 3
TRACE PROPERTY MOMCAPS_ARRAY_VP4_MMVCL gard_enc_mom gard_enc_mom 3
#ENDIF

